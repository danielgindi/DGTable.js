{"version":3,"file":"index.js","sources":["src/util.js","src/row_collection.js","src/column_collection.js","src/css_util.js","src/SelectionHelper.js","src/ScrollHelper.js","src/by_column_filter.js","src/index.js"],"sourcesContent":["'use strict';\r\n\r\nconst indexOf = Array.prototype.indexOf;\r\n\r\nexport const includes = function includes (array, item) {\r\n    return indexOf.call(array, item) >= 0;\r\n};\r\n\r\nexport const find = function find (array, predicate) {\r\n    for (let i = 0, len = array.length; i >= 0 && i < len; i += 1) {\r\n        if (predicate(array[i], i, array))\r\n            return array[i];\r\n    }\r\n};\r\n\r\nexport const htmlEncode = function htmlEncode (text) {\r\n    return text.replace(/&/g, \"&amp;\")\r\n        .replace(/</g, \"&lt;\")\r\n        .replace(/>/g, \"&gt;\")\r\n        .replace(/'/g, \"&#39;\")\r\n        .replace(/\"/g, \"&quot;\")\r\n        .replace(/\\n/g, '<br />');\r\n};\r\n","'use strict';\r\n\r\n// Define class RowCollection\r\nfunction RowCollection () {\r\n\r\n    // Instantiate an Array. Seems like the `.length = ` of an inherited Array does not work well.\r\n    // I will not use the IFRAME solution either in fear of memory leaks, and we're supporting large datasets...\r\n    let collection = [];\r\n\r\n    // Synthetically set the 'prototype'\r\n    Object.assign(collection, RowCollection.prototype);\r\n\r\n    // Call initializer\r\n    collection.initialize.apply(collection, arguments);\r\n\r\n    return collection;\r\n}\r\n\r\n// Inherit Array\r\nRowCollection.prototype = [];\r\n\r\nRowCollection.prototype.initialize = function (options) {\r\n\r\n    options = options || {};\r\n\r\n    /** @field {string} sortColumn */\r\n    this.sortColumn = options.sortColumn == null ? [] : options.sortColumn;\r\n};\r\n\r\n/**\r\n * @param {Object|Object[]} rows - row or array of rows to add to this collection\r\n * @param {number?} at - position to insert rows at\r\n */\r\nRowCollection.prototype.add = function (rows, at) {\r\n    let isArray = ('splice' in rows && 'length' in rows), i, len;\r\n    if (isArray) {\r\n        if (typeof at === 'number') {\r\n            for (i = 0, len = rows.length; i < len; i++) {\r\n                this.splice(at++, 0, rows[i]);\r\n            }\r\n        } else {\r\n            for (i = 0, len = rows.length; i < len; i++) {\r\n                this.push(rows[i]);\r\n            }\r\n        }\r\n    } else {\r\n        if (typeof at === 'number') {\r\n            this.splice(at, 0, rows);\r\n        } else {\r\n            this.push(rows);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Object|Object[]=} rows Row or array of rows to add to this collection\r\n */\r\nRowCollection.prototype.reset = function (rows) {\r\n    this.length = 0;\r\n    if (rows) {\r\n        this.add(rows);\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Function} filterFunc - Filtering function\r\n * @param {Object|null} args? - Options to pass to the function\r\n * @returns {RowCollection} success result\r\n */\r\nRowCollection.prototype.filteredCollection = function (filterFunc, args) {\r\n    if (filterFunc && args) {\r\n        let rows = new RowCollection({ sortColumn: this.sortColumn });\r\n        \r\n        for (let i = 0, len = this.length, row; i < len; i++) {\r\n            row = this[i];\r\n            if (filterFunc(row, args)) {\r\n                row['__i'] = i;\r\n                rows.push(row);\r\n            }\r\n        }\r\n        return rows;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * @type {Function|null|undefined}\r\n */\r\nRowCollection.prototype.onComparatorRequired = null;\r\n\r\n/**\r\n * @type {Function|null|undefined}\r\n */\r\nRowCollection.prototype.onSort = null;\r\n\r\nlet nativeSort = RowCollection.prototype.sort;\r\n\r\nfunction getDefaultComparator(column, descending) {\r\n    let columnName = column.column;\r\n    let comparePath = column.comparePath || columnName;\r\n    if (typeof comparePath === 'string') {\r\n        comparePath = comparePath.split('.');\r\n    }\r\n    let pathLength = comparePath.length,\r\n        hasPath = pathLength > 1,\r\n        i;\r\n\r\n    let lessVal = descending ? 1 : -1, moreVal = descending ? -1 : 1;\r\n    return function(leftRow, rightRow) {\r\n        let leftVal = leftRow[comparePath[0]],\r\n            rightVal = rightRow[comparePath[0]];\r\n        if (hasPath) {\r\n            for (i = 1; i < pathLength; i++) {\r\n                leftVal = leftVal && leftVal[comparePath[i]];\r\n                rightVal = rightVal && rightVal[comparePath[i]];\r\n            }\r\n        }\r\n        if (leftVal === rightVal) return 0;\r\n        if (leftVal == null) return lessVal;\r\n        if (leftVal < rightVal) return lessVal;\r\n        return moreVal;\r\n    };\r\n}\r\n\r\n/**\r\n * @param {Boolean=false} silent\r\n * @returns {RowCollection} self\r\n */\r\nRowCollection.prototype.sort = function (silent) {\r\n    if (this.sortColumn.length) {\r\n        let comparators = [], i, comparator;\r\n\r\n        for (i = 0; i < this.sortColumn.length; i++) {\r\n            comparator = null;\r\n            if (this.onComparatorRequired) {\r\n                comparator = this.onComparatorRequired(this.sortColumn[i].column, this.sortColumn[i].descending);\r\n            }\r\n            if (!comparator) {\r\n                comparator = getDefaultComparator(this.sortColumn[i], this.sortColumn[i].descending);\r\n            }\r\n            comparators.push(comparator.bind(this));\r\n        }\r\n\r\n        if (comparators.length === 1) {\r\n            nativeSort.call(this, comparators[0]);\r\n        } else {\r\n            let len = comparators.length,\r\n                value;\r\n\r\n            comparator = function(leftRow, rightRow) {\r\n                for (i = 0; i < len; i++) {\r\n                    value = comparators[i](leftRow, rightRow);\r\n                    if (value !== 0) {\r\n                        return value;\r\n                    }\r\n                }\r\n                return value;\r\n            };\r\n\r\n            nativeSort.call(this, comparator);\r\n        }\r\n\r\n        if (!silent) {\r\n            if (this.onSort) {\r\n                this.onSort();\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\nexport default RowCollection;","'use strict';\r\n\r\n// Define class RowCollection\r\nfunction ColumnCollection () {\r\n\r\n    // Instantiate an Array. Seems like the `.length = ` of an inherited Array does not work well.\r\n    // I will not use the IFRAME solution either in fear of memory leaks, and we're supporting large datasets...\r\n    let collection = [];\r\n\r\n    // Synthetically set the 'prototype'\r\n    Object.assign(collection, ColumnCollection.prototype);\r\n\r\n    // Call initializer\r\n    collection.initialize.apply(collection, arguments);\r\n\r\n    return collection;\r\n}\r\n\r\n// Inherit Array\r\nColumnCollection.prototype = [];\r\n\r\nColumnCollection.prototype.initialize = function () {\r\n\r\n};\r\n\r\n/**\r\n * Get the column by this name\r\n * @param {String} column column name\r\n * @returns {Object} the column object\r\n */\r\nColumnCollection.prototype.get = function (column) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].name == column) {\r\n            return this[i];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Get the index of the column by this name\r\n * @param {String} column column name\r\n * @returns {int} the index of this column\r\n */\r\nColumnCollection.prototype.indexOf = function (column) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].name == column) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\n/**\r\n * Get the column by the specified order\r\n * @param {Number} order the column's order\r\n * @returns {Object} the column object\r\n */\r\nColumnCollection.prototype.getByOrder = function (order) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].order == order) {\r\n            return this[i];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Normalize order\r\n * @returns {ColumnCollection} self\r\n */\r\nColumnCollection.prototype.normalizeOrder = function () {\r\n    let ordered = [], i;\r\n    for (i = 0; i < this.length; i++) {\r\n        ordered.push(this[i]);\r\n    }\r\n    ordered.sort(function(col1, col2){ return col1.order < col2.order ? -1 : (col1.order > col2.order ? 1 : 0); });\r\n    for (i = 0; i < ordered.length; i++) {\r\n        ordered[i].order = i;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the array of visible columns, order by the order property\r\n * @returns {Array<Object>} ordered array of visible columns\r\n */\r\nColumnCollection.prototype.getVisibleColumns = function () {\r\n    let visible = [];\r\n    for (let i = 0, column; i < this.length; i++) {\r\n        column = this[i];\r\n        if (column.visible) {\r\n            visible.push(column);\r\n        }\r\n    }\r\n    visible.sort((col1, col2) => col1.order < col2.order ? -1 : (col1.order > col2.order ? 1 : 0));\r\n    return visible;\r\n};\r\n\r\n/**\r\n * @returns {int} maximum order currently in the array\r\n */\r\nColumnCollection.prototype.getMaxOrder = function () {\r\n    let order = 0;\r\n    for (let i = 0, column; i < this.length; i++) {\r\n        column = this[i];\r\n        if (column.order > order) {\r\n            order = column.order;\r\n        }\r\n    }\r\n    return order;\r\n};\r\n\r\n/**\r\n * Move a column to a new spot in the collection\r\n * @param {Object} src the column to move\r\n * @param {Object} dest the destination column\r\n * @returns {ColumnCollection} self\r\n */\r\nColumnCollection.prototype.moveColumn = function (src, dest) {\r\n    if (src && dest) {\r\n        let srcOrder = src.order, destOrder = dest.order, i, col;\r\n        if (srcOrder < destOrder) {\r\n            for (i = srcOrder + 1; i <= destOrder; i++) {\r\n                col = this.getByOrder(i);\r\n                col.order--;\r\n            }\r\n        } else {\r\n            for (i = srcOrder - 1; i >= destOrder; i--) {\r\n                col = this.getByOrder(i);\r\n                col.order++;\r\n            }\r\n        }\r\n        src.order = destOrder;\r\n    }\r\n    return this;\r\n};\r\n\r\nexport default ColumnCollection;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\nimport jQuery from 'jquery';\r\n\r\nconst $ = jQuery;\r\n\r\nconst hasComputedStyle = document.defaultView && document.defaultView.getComputedStyle;\r\n\r\nconst jQuerySupportsFractions = $ && $.fn.jquery >= '3';\r\n\r\nconst cssExpands = {\r\n    'width': [\r\n        'Left',\r\n        'Right',\r\n        'Width',\r\n    ],\r\n    'height': [\r\n        'Top',\r\n        'Bottom',\r\n        'Height',\r\n    ],\r\n};\r\n\r\nconst sizeKeys = ['width', 'height'];\r\n\r\nconst CssUtil = {};\r\n\r\nlet generateSizeFunction = function (key, cssExpand, inner, outer) {\r\n\r\n    return function () {\r\n        let el = arguments[0];\r\n        let value = arguments[1];\r\n\r\n        if (el && !(el instanceof Element) && 'length' in el) {\r\n            el = el[0];\r\n        }\r\n\r\n        if (!el) {\r\n            return null;\r\n        }\r\n\r\n        let style = hasComputedStyle ? document.defaultView.getComputedStyle(el) : el.currentStyle;\r\n        let isBoxing = style['boxSizing'] === 'border-box';\r\n        let size, border, padding;\r\n        let includeMargins = outer && arguments[2] === true || arguments[1] === true;\r\n\r\n        if (isBoxing || outer || inner) {\r\n            border = parseFloat(style['border' + cssExpand[0] + 'Width'] || 0)\r\n                + parseFloat(style['border' + cssExpand[1] + 'Width'] || 0);\r\n\r\n            padding = parseFloat(style['padding' + cssExpand[0]] || 0)\r\n                + parseFloat(style['padding' + cssExpand[1]] || 0);\r\n        }\r\n\r\n        let margin = includeMargins ?\r\n            (parseFloat(style['margin' + cssExpand[0]] || 0)\r\n            + parseFloat(style['margin' + cssExpand[1]] || 0)) : 0;\r\n\r\n        if (value == undefined) {\r\n            size = parseFloat(style[key]);\r\n\r\n            if (isBoxing) {\r\n\r\n                if (padding + border > size) {\r\n                    size = padding + border;\r\n                }\r\n\r\n                if (outer) {\r\n                    if (includeMargins) {\r\n                        size += margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size -= border;\r\n                }\r\n                else {\r\n                    size -= padding + border;\r\n                }\r\n\r\n            } else {\r\n\r\n                if (outer) {\r\n                    size += padding + border;\r\n\r\n                    if (includeMargins) {\r\n                        size += margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size += padding;\r\n                }\r\n\r\n            }\r\n\r\n            return size;\r\n        } else {\r\n            value = value || 0;\r\n            size = value;\r\n\r\n            if (isBoxing) {\r\n\r\n                if (outer) {\r\n                    if (includeMargins) {\r\n                        size -= margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size += border;\r\n                }\r\n                else {\r\n                    size += padding + border;\r\n                }\r\n\r\n            } else {\r\n\r\n                if (outer) {\r\n                    size -= padding + border;\r\n\r\n                    if (includeMargins) {\r\n                        size -= margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size -= padding;\r\n                }\r\n\r\n                if (size < 0) {\r\n                    size = 0;\r\n                }\r\n            }\r\n\r\n            el.style[key] = size + 'px';\r\n\r\n            return value;\r\n        }\r\n    };\r\n};\r\n\r\nlet generatejQueryFunction = function (key) {\r\n    return function () {\r\n        let collection = arguments[0];\r\n        if (!$.isArray(collection) && !(collection instanceof $)) {\r\n            collection = [collection];\r\n        }\r\n        \r\n        let ret = $.fn[key].apply(collection, Array.prototype.slice.call(arguments, 1));\r\n        \r\n        if (arguments.length > 1) {\r\n            return this;\r\n        }\r\n        \r\n        return ret;\r\n    };\r\n};\r\n\r\nfor (let i = 0; i < sizeKeys.length; i++) {\r\n    let key = sizeKeys[i];\r\n    let cssExpand = cssExpands[key];\r\n\r\n    if (jQuerySupportsFractions) {\r\n\r\n        CssUtil[key] = generatejQueryFunction(key);\r\n        CssUtil['inner' + cssExpand[2]] = generatejQueryFunction('inner' + cssExpand[2]);\r\n        CssUtil['outer' + cssExpand[2]] = generatejQueryFunction('outer' + cssExpand[2]);\r\n\r\n    } else {\r\n\r\n        CssUtil[key] = generateSizeFunction(key, cssExpand, false, false);\r\n        CssUtil['inner' + cssExpand[2]] = generateSizeFunction(key, cssExpand, true, false);\r\n        CssUtil['outer' + cssExpand[2]] = generateSizeFunction(key, cssExpand, false, true);\r\n\r\n    }\r\n}\r\n\r\n// Remove that huge function from memory\r\ngenerateSizeFunction = null;\r\n\r\nexport default CssUtil;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\n// saveSelection/restoreSelection courtesy of Tim Down, with my improvements\r\n// https://stackoverflow.com/questions/13949059/persisting-the-changes-of-range-objects-after-selection-in-html/13950376#13950376\r\n\r\nfunction isChildOf(child, parent) {\r\n  while ((child = child.parentNode) && child !== parent); \r\n  return !!child; \r\n}\r\n\r\nclass SelectionHelper {\r\n    \r\n    static saveSelection(el) {\r\n        let range = window.getSelection().getRangeAt(0);\r\n        \r\n        if (el !== range.commonAncestorContainer && !isChildOf(range.commonAncestorContainer, el))\r\n            return null;\r\n        \r\n        let preSelectionRange = range.cloneRange();\r\n        preSelectionRange.selectNodeContents(el);\r\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n        let start = preSelectionRange.toString().length;\r\n\r\n        return {\r\n            start: start,\r\n            end: start + range.toString().length,\r\n        };\r\n    }\r\n    \r\n    static restoreSelection(el, savedSel) {\r\n        let charIndex = 0;\r\n        let nodeStack = [el], node, foundStart = false, stop = false;\r\n        let range = document.createRange();\r\n        range.setStart(el, 0);\r\n        range.collapse(true);\r\n        \r\n        while (!stop && (node = nodeStack.pop())) {\r\n            if (node.nodeType == 3) {\r\n                let nextCharIndex = charIndex + node.length;\r\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\r\n                    range.setStart(node, savedSel.start - charIndex);\r\n                    foundStart = true;\r\n                }\r\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\r\n                    range.setEnd(node, savedSel.end - charIndex);\r\n                    stop = true;\r\n                }\r\n                charIndex = nextCharIndex;\r\n            } else {\r\n                let i = node.childNodes.length;\r\n                while (i--) {\r\n                    nodeStack.push(node.childNodes[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    }\r\n}\r\n\r\nexport default SelectionHelper;\r\n","/* eslint-env browser */\r\n\r\nlet rtlScrollType;\r\n\r\nconst detectRtlScrollType = () => {\r\n    const definer = document.createElement('div');\r\n    definer.dir = 'rtl';\r\n    Object.assign(definer.style, {\r\n        direction: 'rtl',\r\n        fontSize: '14px',\r\n        width: '1px',\r\n        height: '1px',\r\n        position: 'absolute',\r\n        top: '-1000px',\r\n        overflow: 'scroll',\r\n    });\r\n    definer.textContent = 'A';\r\n    document.body.appendChild(definer);\r\n\r\n    let type = 'reverse';\r\n\r\n    if (definer.scrollLeft > 0) {\r\n        type = 'default';\r\n    } else {\r\n        definer.scrollLeft = 1;\r\n        if (definer.scrollLeft === 0) {\r\n            type = 'negative';\r\n        }\r\n    }\r\n\r\n    definer.parentNode.removeChild(definer);\r\n\r\n    return type;\r\n};\r\n\r\nclass ScrollHelper {\r\n\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {boolean|undefined} [rtl]\r\n     * @returns {number}\r\n     */\r\n    static normalizeScrollLeft(el, rtl) {\r\n        if (rtl === undefined) {\r\n            rtl = document.defaultView.getComputedStyle(el, null).direction === 'rtl';\r\n        }\r\n\r\n        if (rtl === true && rtlScrollType === undefined) {\r\n            rtlScrollType = detectRtlScrollType();\r\n        }\r\n\r\n        if (rtl) {\r\n            switch (rtlScrollType) {\r\n                case 'negative':\r\n                    return el.scrollLeft + el.scrollWidth - el.clientWidth;\r\n\r\n                case 'reverse':\r\n                    return el.scrollWidth - el.scrollLeft - el.clientWidth;\r\n\r\n                default:\r\n                    return el.scrollLeft;\r\n            }\r\n        } else {\r\n            return el.scrollLeft;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {boolean|undefined} [rtl]\r\n     * @param {number} value\r\n     * @returns {number}\r\n     */\r\n    static denormalizeScrollLeft(el, rtl, value) {\r\n        if (rtl === undefined) {\r\n            rtl = document.defaultView.getComputedStyle(el, null).direction === 'rtl';\r\n        }\r\n\r\n        if (rtl === true && rtlScrollType === undefined) {\r\n            rtlScrollType = detectRtlScrollType();\r\n        }\r\n\r\n        if (rtl) {\r\n            switch (rtlScrollType) {\r\n                case 'negative':\r\n                    return value + el.scrollWidth - el.clientWidth;\r\n\r\n                case 'reverse':\r\n                    return el.scrollWidth - value - el.clientWidth;\r\n\r\n                default:\r\n                    return value;\r\n            }\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    static scrollLeftNormalized(el, x) {\r\n        if (x === undefined) {\r\n            return ScrollHelper.normalizeScrollLeft(el, undefined);\r\n        } else {\r\n            el.scrollLeft = ScrollHelper.denormalizeScrollLeft(el, undefined, x);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {boolean|undefined} [rtl]\r\n     * @returns {number}\r\n     */\r\n    static normalizeScrollHorz(el, rtl) {\r\n        if (rtl === undefined) {\r\n            rtl = document.defaultView.getComputedStyle(el, null).direction === 'rtl';\r\n        }\r\n        if (rtl) {\r\n            return el.scrollWidth - el.clientWidth - ScrollHelper.normalizeScrollLeft(el, rtl);\r\n        } else {\r\n            return ScrollHelper.normalizeScrollLeft(el, rtl);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {boolean|undefined} [rtl]\r\n     * @param {number} value\r\n     * @returns {number}\r\n     */\r\n    static denormalizeScrollHorz(el, rtl, value) {\r\n        if (rtl === undefined) {\r\n            rtl = document.defaultView.getComputedStyle(el, null).direction === 'rtl';\r\n        }\r\n\r\n        if (rtl) {\r\n            return ScrollHelper.denormalizeScrollLeft(el, rtl, el.scrollWidth - el.clientWidth - value);\r\n        } else {\r\n            return ScrollHelper.denormalizeScrollLeft(el, rtl, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement} el\r\n     * @param {number|undefined} [x]\r\n     * @returns {number|undefined}\r\n     */\r\n    static scrollHorzNormalized(el, x) {\r\n        if (x === undefined) {\r\n            return ScrollHelper.normalizeScrollHorz(el);\r\n        } else {\r\n            el.scrollLeft = ScrollHelper.denormalizeScrollHorz(el, undefined, x);\r\n        }\r\n    }\r\n}\r\n\r\nexport default ScrollHelper;\r\n","'use strict';\r\n\r\nfunction ByColumnFilter (row, args) {\r\n    \r\n    let column = args.column;\r\n    let keyword = args.keyword == null ? '' : args.keyword.toString();\r\n    \r\n    if (!keyword || !column) return true;\r\n\r\n    let actualVal = row[column];\r\n    if (actualVal == null) {\r\n        return false;\r\n    }\r\n    \r\n    actualVal = actualVal.toString();\r\n    \r\n    if (!args.caseSensitive) {\r\n        actualVal = actualVal.toLowerCase();\r\n        keyword = keyword.toLowerCase();\r\n    }\r\n    \r\n    return actualVal.indexOf(keyword) !== -1;\r\n}\r\n\r\nexport default ByColumnFilter;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\nimport jQuery from 'jquery';\r\nimport { includes, find, htmlEncode } from './util';\r\nimport RowCollection from './row_collection';\r\nimport ColumnCollection from './column_collection';\r\nimport CssUtil from './css_util';\r\nimport SelectionHelper from './SelectionHelper';\r\nimport ScrollHelper from './ScrollHelper';\r\nimport ByColumnFilter from './by_column_filter';\r\n\r\nconst nativeIndexOf = Array.prototype.indexOf;\r\nconst $ = jQuery;\r\n\r\nlet userAgent = navigator.userAgent;\r\nlet ieVersion = userAgent.indexOf('MSIE ') != -1 ? parseFloat(userAgent.substr(userAgent.indexOf('MSIE ') + 5)) : null;\r\nlet hasIeDragAndDropBug = ieVersion && ieVersion < 10;\r\nlet createElement = document.createElement.bind(document);\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction webkitRenderBugfix(el) {\r\n    // BUGFIX: WebKit has a bug where it does not relayout, and this affects us because scrollbars \r\n    //   are still calculated even though they are not there yet. This is the last resort.\r\n    let oldDisplay = el.style.display;\r\n    el.style.display = 'none';\r\n    //noinspection BadExpressionStatementJS\r\n    el.offsetHeight; // No need to store this anywhere, the reference is enough\r\n    el.style.display = oldDisplay;\r\n    return el;\r\n}\r\n\r\nfunction relativizeElement($el) {\r\n    if (!includes(['relative', 'absolute', 'fixed'], $el.css('position'))) {\r\n        $el.css('position', 'relative');\r\n    }\r\n}\r\n\r\n/** @class DGTable */\r\nlet DGTable = function DGTable () {\r\n    if (!(this instanceof DGTable)) {\r\n        // Allow constructing without `new`\r\n        return new (Function.prototype.bind.apply(\r\n            DGTable,\r\n            [DGTable].concat(Array.prototype.slice.call(arguments, 0))));\r\n    }\r\n\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @type {string}\r\n */\r\nDGTable.VERSION = '@@VERSION';\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @type {string}\r\n */\r\nDGTable.prototype.VERSION = DGTable.VERSION;\r\n\r\n/**\r\n * @constructs\r\n * @param {DGTable.Options?} options - initialization options\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.initialize = function (options) {\r\n    let that = this;\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {DGTable.Options}\r\n     * */\r\n    let o = that.o = {};\r\n\r\n    /**\r\n     * @private\r\n     * This is for encapsulating private data */\r\n    let p = that.p = {};\r\n\r\n    /** This is for encapsulating event callback */\r\n    p.events = {};\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * */\r\n    that.el = (options.el && options.el instanceof Element) ? options.el : document.createElement('div');\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * */\r\n    let $el = that.$el = $(that.el);\r\n    \r\n    if (that.el !== options.el) {\r\n        $el.addClass(options.className || 'dgtable-wrapper');\r\n    }\r\n\r\n    // Set control data\r\n    $el\r\n        .data('control', that)\r\n        .data('dgtable', that);\r\n\r\n    // For jQuery.UI or jquery.removeevent\r\n    $el.on('remove', function () {\r\n        that.destroy();\r\n    });\r\n\r\n    p.onMouseMoveResizeAreaBound = this._onMouseMoveResizeArea.bind(this);\r\n    p.onEndDragColumnHeaderBound = this._onEndDragColumnHeader.bind(this);\r\n    p.onTableScrolledHorizontallyBound = this._onTableScrolledHorizontally.bind(this);\r\n\r\n    this.$el.on('dragend', p.onEndDragColumnHeaderBound);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} _tableSkeletonNeedsRendering */\r\n    p.tableSkeletonNeedsRendering = true;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} virtualTable */\r\n    o.virtualTable = options.virtualTable === undefined ? true : !!options.virtualTable;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} rowsBufferSize */\r\n    o.rowsBufferSize = options.rowsBufferSize || 3;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} minColumnWidth */\r\n    o.minColumnWidth = Math.max(options.minColumnWidth || 35, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} resizeAreaWidth */\r\n    o.resizeAreaWidth = options.resizeAreaWidth || 8;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} resizableColumns */\r\n    o.resizableColumns = options.resizableColumns === undefined ? true : !!options.resizableColumns;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} movableColumns */\r\n    o.movableColumns = options.movableColumns === undefined ? true : !!options.movableColumns;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} sortableColumns */\r\n    o.sortableColumns = options.sortableColumns === undefined ? 1 : (parseInt(options.sortableColumns, 10) || 1);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} adjustColumnWidthForSortArrow */\r\n    o.adjustColumnWidthForSortArrow = options.adjustColumnWidthForSortArrow === undefined ? true : !!options.adjustColumnWidthForSortArrow;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} convertColumnWidthsToRelative */\r\n    o.convertColumnWidthsToRelative = options.convertColumnWidthsToRelative === undefined ? false : !!options.convertColumnWidthsToRelative;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} autoFillTableWidth */\r\n    o.autoFillTableWidth = options.autoFillTableWidth === undefined ? false : !!options.autoFillTableWidth;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} cellClasses */\r\n    o.cellClasses = options.cellClasses === undefined ? '' : options.cellClasses;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} resizerClassName */\r\n    o.resizerClassName = options.resizerClassName === undefined ? 'dgtable-resize' : options.resizerClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} tableClassName */\r\n    o.tableClassName = options.tableClassName === undefined ? 'dgtable' : options.tableClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} allowCellPreview */\r\n    o.allowCellPreview = options.allowCellPreview === undefined ? true : options.allowCellPreview;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} allowHeaderCellPreview */\r\n    o.allowHeaderCellPreview = options.allowHeaderCellPreview === undefined ? true : options.allowHeaderCellPreview;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} cellPreviewClassName */\r\n    o.cellPreviewClassName = options.cellPreviewClassName === undefined ? 'dgtable-cell-preview' : options.cellPreviewClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} cellPreviewAutoBackground */\r\n    o.cellPreviewAutoBackground = options.cellPreviewAutoBackground === undefined ? true : options.cellPreviewAutoBackground;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Function(String,Boolean)Function(a,b)Boolean} onComparatorRequired */\r\n    o.onComparatorRequired = options.onComparatorRequired === undefined ? null : options.onComparatorRequired;\r\n    if (!o.onComparatorRequired && typeof options['comparatorCallback'] === 'function') {\r\n        o.onComparatorRequired = options['comparatorCallback'];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} width */\r\n    o.width = options.width === undefined ? DGTable.Width.NONE : options.width;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} relativeWidthGrowsToFillWidth */\r\n    o.relativeWidthGrowsToFillWidth = options.relativeWidthGrowsToFillWidth === undefined ? true : !!options.relativeWidthGrowsToFillWidth;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} relativeWidthShrinksToFillWidth */\r\n    o.relativeWidthShrinksToFillWidth = options.relativeWidthShrinksToFillWidth === undefined ? false : !!options.relativeWidthShrinksToFillWidth;\r\n\r\n    this.setCellFormatter(options.cellFormatter);\r\n    this.setHeaderCellFormatter(options.headerCellFormatter);\r\n    this.setFilter(options.filter);\r\n\r\n    /** @private\r\n     * @field {Number} height */\r\n    o.height = options.height;\r\n\r\n    // Prepare columns\r\n    that.setColumns(options.columns || [], false);\r\n\r\n    // Set sorting columns\r\n    let sortColumns = [];\r\n\r\n    if (options.sortColumn) {\r\n\r\n        let tmpSortColumns = options.sortColumn;\r\n\r\n        if (tmpSortColumns && typeof tmpSortColumns !== 'object') {\r\n            tmpSortColumns = [tmpSortColumns];\r\n        }\r\n\r\n        if (tmpSortColumns instanceof Array ||\r\n            typeof tmpSortColumns === 'object') {\r\n\r\n            for (let i = 0, len = tmpSortColumns.length; i < len; i++) {\r\n                let sortColumn = tmpSortColumns[i];\r\n                if (typeof sortColumn === 'string') {\r\n                    sortColumn = { column: sortColumn, descending: false };\r\n                }\r\n                let col = p.columns.get(sortColumn.column);\r\n                sortColumns.push({\r\n                    column: sortColumn.column,\r\n                    comparePath: col.comparePath || col.dataPath,\r\n                    descending: sortColumn.descending,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @field {RowCollection} _rows */\r\n    p.rows = new RowCollection({ sortColumn: sortColumns });\r\n    p.rows.onComparatorRequired = function(column, descending){\r\n        if (o.onComparatorRequired) {\r\n            return o.onComparatorRequired(column, descending);\r\n        }\r\n    };\r\n\r\n    /** @private\r\n     * @field {RowCollection} _filteredRows */\r\n    p.filteredRows = null;\r\n\r\n    /*\r\n     Setup hover mechanism.\r\n     We need this to be high performance, as there may be MANY cells to call this on, on creation and destruction.\r\n     Using native events to spare the overhead of jQuery's event binding, and even just the creation of the jQuery collection object.\r\n     */\r\n\r\n    /**\r\n     * @param {MouseEvent} evt\r\n     * @this {HTMLElement}\r\n     * */\r\n    let hoverMouseOverHandler = function (evt) {\r\n        evt = evt || event;\r\n        let relatedTarget = evt.fromElement || evt.relatedTarget;\r\n        if (relatedTarget == this || $.contains(this, relatedTarget)) return;\r\n        if (this['__previewCell'] && (relatedTarget == this['__previewCell'] || $.contains(this['__previewCell'], relatedTarget))) return;\r\n        that._cellMouseOverEvent.call(that, this);\r\n    };\r\n\r\n    /**\r\n     * @param {MouseEvent} evt\r\n     * @this {HTMLElement}\r\n     * */\r\n    let hoverMouseOutHandler = function (evt) {\r\n        evt = evt || event;\r\n        let relatedTarget = evt.toElement || evt.relatedTarget;\r\n        if (relatedTarget == this || $.contains(this, relatedTarget)) return;\r\n        if (this['__previewCell'] && (relatedTarget == this['__previewCell'] || $.contains(this['__previewCell'], relatedTarget))) return;\r\n        that._cellMouseOutEvent.call(that, this);\r\n    };\r\n\r\n    if ('addEventListener' in window) {\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverIn = function (el) {\r\n            if (!el['__hoverIn']) {\r\n                el.addEventListener('mouseover', el['__hoverIn'] = hoverMouseOverHandler.bind(el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._unbindCellHoverIn = function (el) {\r\n            if (el['__hoverIn']) {\r\n                el.removeEventListener('mouseover', el['__hoverIn']);\r\n                el['__hoverIn'] = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._bindCellHoverOut = function (el) {\r\n            if (!el['__hoverOut']) {\r\n                el.addEventListener('mouseout', el['__hoverOut'] = hoverMouseOutHandler.bind(el['__cell'] || el));\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._unbindCellHoverOut = function (el) {\r\n            if (el['__hoverOut']) {\r\n                el.removeEventListener('mouseout', el['__hoverOut']);\r\n                el['__hoverOut'] = null;\r\n            }\r\n            return this;\r\n        };\r\n\r\n    } else {\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverIn = function (el) {\r\n            if (!el['__hoverIn']) {\r\n                el.attachEvent('mouseover', el['__hoverIn'] = hoverMouseOverHandler.bind(el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._unbindCellHoverIn = function (el) {\r\n            if (el['__hoverIn']) {\r\n                el.detachEvent('mouseover', el['__hoverIn']);\r\n                el['__hoverIn'] = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverOut = function (el) {\r\n            if (!el['__hoverOut']) {\r\n                el.attachEvent('mouseout', el['__hoverOut'] = hoverMouseOutHandler.bind(el['__cell'] || el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._unbindCellHoverOut = function (el) {\r\n            if (el['__hoverOut']) {\r\n                el.detachEvent('mouseout', el['__hoverOut']);\r\n                el['__hoverOut'] = null;\r\n            }\r\n            return this;\r\n        };\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Add an event listener\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.on = function (eventName, callback) {\r\n    let that = this, events = that.p.events;\r\n\r\n    if (typeof callback !== 'function')\r\n        return that;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        events[eventName] = [];\r\n\r\n    events[eventName].push({\r\n        cb: callback,\r\n        once: false,\r\n    });\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Add an event listener for a one shot\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.once = function (eventName, callback) {\r\n    let that = this, events = that.p.events;\r\n\r\n    if (typeof callback !== 'function')\r\n        return that;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        events[eventName] = [];\r\n\r\n    events[eventName].push({\r\n        cb: callback,\r\n        once: true,\r\n    });\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Remove an event listener\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.off = function (eventName, callback) {\r\n    let events = this.p.events;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        return this;\r\n\r\n    let callbacks = events[eventName];\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        let item = callbacks[i];\r\n        if (callback && item.cb !== callback) continue;\r\n        callbacks.splice(i--, 1);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nDGTable.prototype.trigger = function (eventName) {\r\n    let events = this.p.events;\r\n\r\n    if (hasOwnProperty.call(events, eventName)) {\r\n        let callbacks = events[eventName];\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            let item = callbacks[i];\r\n            if (item.once) {\r\n                callbacks.splice(i--, 1);\r\n            }\r\n            item.cb.apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Detect column width mode\r\n * @private\r\n * @param {Number|String} width\r\n * @param {Number} minWidth\r\n * @returns {Object} parsed width\r\n */\r\nDGTable.prototype._parseColumnWidth = function (width, minWidth) {\r\n\r\n    let widthSize = Math.max(0, parseFloat(width)),\r\n        widthMode = ColumnWidthMode.AUTO; // Default\r\n\r\n    if (widthSize > 0) {\r\n        // Well, it's sure is not AUTO, as we have a value\r\n\r\n        if (width == widthSize + '%') {\r\n            // It's a percentage!\r\n\r\n            widthMode = ColumnWidthMode.RELATIVE;\r\n            widthSize /= 100;\r\n        } else if (widthSize > 0 && widthSize < 1) {\r\n            // It's a decimal value, as a relative value!\r\n\r\n            widthMode = ColumnWidthMode.RELATIVE;\r\n        } else {\r\n            // It's an absolute size!\r\n\r\n            if (widthSize < minWidth) {\r\n                widthSize = minWidth;\r\n            }\r\n            widthMode = ColumnWidthMode.ABSOLUTE;\r\n        }\r\n    }\r\n\r\n    return { width: widthSize, mode: widthMode };\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {COLUMN_OPTIONS} columnData\r\n */\r\nDGTable.prototype._initColumnFromData = function(columnData) {\r\n\r\n    let parsedWidth = this._parseColumnWidth(columnData.width, columnData.ignoreMin ? 0 : this.o.minColumnWidth);\r\n\r\n    let col = {\r\n        name: columnData.name,\r\n        label: columnData.label === undefined ? columnData.name : columnData.label,\r\n        width: parsedWidth.width,\r\n        widthMode: parsedWidth.mode,\r\n        resizable: columnData.resizable === undefined ? true : columnData.resizable,\r\n        sortable: columnData.sortable === undefined ? true : columnData.sortable,\r\n        movable: columnData.movable === undefined ? true : columnData.movable,\r\n        visible: columnData.visible === undefined ? true : columnData.visible,\r\n        cellClasses: columnData.cellClasses === undefined ? this.o.cellClasses : columnData.cellClasses,\r\n        ignoreMin: columnData.ignoreMin === undefined ? false : !!columnData.ignoreMin,\r\n    };\r\n\r\n    col.dataPath = columnData.dataPath === undefined ? col.name : columnData.dataPath;\r\n    col.comparePath = columnData.comparePath === undefined ? col.dataPath : columnData.comparePath;\r\n\r\n    if (typeof col.dataPath === 'string') {\r\n        col.dataPath = col.dataPath.split('.');\r\n    }\r\n    if (typeof col.comparePath === 'string') {\r\n        col.comparePath = col.comparePath.split('.');\r\n    }\r\n\r\n    return col;\r\n};\r\n\r\n/**\r\n * Destroy, releasing all memory, events and DOM elements\r\n * @public\r\n * @expose\r\n */\r\nDGTable.prototype.close = DGTable.prototype.remove = DGTable.prototype.destroy = function () {\r\n\r\n    let that = this,\r\n        p = that.p || {},\r\n        $el = that.$el;\r\n\r\n    if (that.__removed) {\r\n        return that;\r\n    }\r\n\r\n    if (p.$resizer) {\r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n    }\r\n\r\n    if (p.$tbody) {\r\n        let trs = p.$tbody[0].childNodes;\r\n        for (let i = 0, len = trs.length; i < len; i++) {\r\n            that.trigger('rowdestroy', trs[i]);\r\n        }\r\n    }\r\n\r\n    // Using quotes for __super__ because Google Closure Compiler has a bug...\r\n\r\n    this._destroyHeaderCells()._unbindCellEventsForTable();\r\n    if (p.$table) {\r\n        p.$table.empty();\r\n    }\r\n    if (p.$tbody) {\r\n        p.$tbody.empty();\r\n    }\r\n\r\n    if (p.workerListeners) {\r\n        for (let j = 0; j < p.workerListeners.length; j++) {\r\n            let worker = p.workerListeners[j];\r\n            worker.worker.removeEventListener('message', worker.listener, false);\r\n        }\r\n        p.workerListeners.length = 0;\r\n    }\r\n\r\n    p.rows.length = p.columns.length = 0;\r\n\r\n    if (p._deferredRender) {\r\n        clearTimeout(p._deferredRender);\r\n    }\r\n\r\n    // Cleanup\r\n    for (let prop in that) {\r\n        if (hasOwnProperty.call(that, prop)) {\r\n            that[prop] = null;\r\n        }\r\n    }\r\n\r\n    that.__removed = true;\r\n\r\n    if ($el) {\r\n        $el.remove();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._unbindCellEventsForTable = function() {\r\n    const p = this.p;\r\n    \r\n    if (p.headerRow) {\r\n        for (let i = 0, rows = p.headerRow.childNodes, rowCount = rows.length; i < rowCount; i++) {\r\n            let rowToClean = rows[i];\r\n            for (let j = 0, cells = rowToClean.childNodes, cellCount = cells.length; j < cellCount; j++) {\r\n                p._unbindCellHoverIn(cells[j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (p.tbody) {\r\n        for (let i = 0, rows = p.tbody.childNodes, rowCount = rows.length; i < rowCount; i++) {\r\n            this._unbindCellEventsForRow(rows[i]);\r\n        }\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} rowToClean\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._unbindCellEventsForRow = function(rowToClean) {\r\n    const p = this.p;\r\n    for (let i = 0, cells = rowToClean.childNodes, cellCount = cells.length; i < cellCount; i++) {\r\n        p._unbindCellHoverIn(cells[i]);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.render = function () {\r\n    const o = this.o, p = this.p;\r\n\r\n    if (!this.el.offsetParent) {\r\n        if (!p._deferredRender) {\r\n            p._deferredRender = setTimeout(() => {\r\n                p._deferredRender = null;\r\n                if (!this.__removed && this.el.offsetParent) {\r\n                    this.render();\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    let renderedRows, rowCount;\r\n\r\n    if (p.tableSkeletonNeedsRendering === true) {\r\n        p.tableSkeletonNeedsRendering = false;\r\n\r\n        if (o.width == DGTable.Width.AUTO) {\r\n            // We need to do this to return to the specified widths instead. The arrows added to the column widths...\r\n            this._clearSortArrows();\r\n        }\r\n\r\n        let lastScrollTop = p.table ? p.table.scrollTop : NaN,\r\n            lastScrollLeft = p.table ? ScrollHelper.scrollLeftNormalized(p.table) : NaN;\r\n\r\n        this._renderSkeletonBase()\r\n            ._renderSkeletonBody()\r\n            .tableWidthChanged(true, false) // Take this chance to calculate required column widths\r\n            ._renderSkeletonHeaderCells();\r\n            \r\n        if (!o.virtualTable) {\r\n            let rows = p.filteredRows || p.rows;\r\n            rowCount = rows.length;\r\n            renderedRows = this.renderRows(0, rowCount - 1);\r\n            p.$tbody.html('').append(renderedRows);\r\n        }\r\n\r\n        this._updateLastCellWidthFromScrollbar(true);\r\n\r\n        this._updateTableWidth(true);\r\n\r\n        // Show sort arrows\r\n        for (let i = 0; i < p.rows.sortColumn.length; i++) {\r\n            this._showSortArrow(p.rows.sortColumn[i].column, p.rows.sortColumn[i].descending);\r\n        }\r\n        if (o.adjustColumnWidthForSortArrow && p.rows.sortColumn.length) {\r\n            this.tableWidthChanged(true);\r\n        } else if (!o.virtualTable) {\r\n            this.tableWidthChanged();\r\n        }\r\n\r\n        if (!isNaN(lastScrollTop))\r\n          p.table.scrollTop = lastScrollTop;\r\n\r\n        if (!isNaN(lastScrollLeft)) {\r\n          ScrollHelper.scrollLeftNormalized(p.table, lastScrollLeft);\r\n          ScrollHelper.scrollLeftNormalized(p.header, lastScrollLeft);\r\n        }\r\n\r\n        this.trigger('renderskeleton');\r\n\r\n        if (o.virtualTable) {\r\n            p.$table.on('scroll', this._onVirtualTableScrolled.bind(this));\r\n            this.render();\r\n        }\r\n\r\n    } else if (o.virtualTable) {\r\n        rowCount = (p.filteredRows || p.rows).length;\r\n        let scrollTop = p.table.scrollTop;\r\n        let firstVisible = Math.floor((scrollTop - p.virtualRowHeightFirst) / p.virtualRowHeight) + 1 - o.rowsBufferSize;\r\n        let lastVisible = Math.ceil(((scrollTop - p.virtualRowHeightFirst + p.visibleHeight) / p.virtualRowHeight)) + o.rowsBufferSize;\r\n        if (firstVisible < 0) firstVisible = 0;\r\n        if (lastVisible >= rowCount) {\r\n            lastVisible = rowCount - 1;\r\n        }\r\n\r\n        let oldFirstVisible = -1, oldLastVisible = -1;\r\n        let tbodyChildNodes = p.tbody.childNodes;\r\n        if (tbodyChildNodes.length) {\r\n            oldFirstVisible = tbodyChildNodes[0]['rowIndex'];\r\n            oldLastVisible = tbodyChildNodes[tbodyChildNodes.length - 1]['rowIndex'];\r\n        }\r\n\r\n        let countToRemove;\r\n\r\n        if (oldFirstVisible !== -1 && oldFirstVisible < firstVisible) {\r\n            countToRemove = Math.min(oldLastVisible + 1, firstVisible) - oldFirstVisible;\r\n            for (let i = 0; i < countToRemove; i++) {\r\n                this.trigger('rowdestroy', tbodyChildNodes[0]);\r\n                this._unbindCellEventsForRow(tbodyChildNodes[0]);\r\n                p.tbody.removeChild(tbodyChildNodes[0]);\r\n            }\r\n            oldFirstVisible += countToRemove;\r\n            if (oldFirstVisible > oldLastVisible) {\r\n                oldFirstVisible = oldLastVisible = -1;\r\n            }\r\n        } else if (oldLastVisible !== -1 && oldLastVisible > lastVisible) {\r\n            countToRemove = oldLastVisible - Math.max(oldFirstVisible - 1, lastVisible);\r\n            for (let i = 0; i < countToRemove; i++) {\r\n                this.trigger('rowdestroy', tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n                this._unbindCellEventsForRow(tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n                p.tbody.removeChild(tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n            }\r\n            if (oldLastVisible < oldFirstVisible) {\r\n                oldFirstVisible = oldLastVisible = -1;\r\n            }\r\n        }\r\n\r\n        if (firstVisible < oldFirstVisible) {\r\n            renderedRows = this.renderRows(firstVisible, Math.min(lastVisible, oldFirstVisible - 1));\r\n            p.$tbody.prepend(renderedRows);\r\n        }\r\n        if (lastVisible > oldLastVisible || oldLastVisible === -1) {\r\n            renderedRows = this.renderRows(oldLastVisible === -1 ? firstVisible : oldLastVisible + 1, lastVisible);\r\n            p.$tbody.append(renderedRows);\r\n        }\r\n    }\r\n    this.trigger('render');\r\n    return this;\r\n};\r\n\r\n/**\r\n * Forces a full render of the table\r\n * @public\r\n * @expose\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.clearAndRender = function (render) {\r\n    let p = this.p;\r\n\r\n    p.tableSkeletonNeedsRendering = true;\r\n\r\n    if (render === undefined || render) {\r\n        this.render();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Render rows\r\n * @private\r\n * @param {Number} first first row to render\r\n * @param {Number} last last row to render\r\n * @returns {DocumentFragment} fragment containing all rendered rows\r\n */\r\nDGTable.prototype.renderRows = function (first, last) {\r\n    const o = this.o, p = this.p;\r\n        \r\n    let tableClassName = o.tableClassName,\r\n        rowClassName = tableClassName + '-row',\r\n        cellClassName = tableClassName + '-cell',\r\n        rows = p.filteredRows || p.rows,\r\n        isDataFiltered = !!p.filteredRows,\r\n        allowCellPreview = o.allowCellPreview,\r\n        visibleColumns = p.visibleColumns,\r\n        isVirtual = o.virtualTable,\r\n        virtualRowHeightFirst = p.virtualRowHeightFirst,\r\n        virtualRowHeight = p.virtualRowHeight,\r\n        top,\r\n        physicalRowIndex;\r\n\r\n    let colCount = visibleColumns.length;\r\n    for (let colIndex = 0, column; colIndex < colCount; colIndex++) {\r\n        column = visibleColumns[colIndex];\r\n        column._finalWidth = (column.actualWidthConsideringScrollbarWidth || column.actualWidth);\r\n    }\r\n\r\n    let bodyFragment = document.createDocumentFragment();\r\n\r\n    let isRtl = this._isTableRtl(),\r\n        virtualRowXAttr = isRtl ? 'right' : 'left';\r\n\r\n    for (let i = first, rowCount = rows.length;\r\n         i < rowCount && i <= last;\r\n         i++) {\r\n\r\n        let rowData = rows[i];\r\n        physicalRowIndex = isDataFiltered ? rowData['__i'] : i;\r\n\r\n        let row = createElement('div');\r\n        row.className = rowClassName;\r\n        row['rowIndex'] = i;\r\n        row['physicalRowIndex'] = physicalRowIndex;\r\n\r\n        for (let colIndex = 0; colIndex < colCount; colIndex++) {\r\n            let column = visibleColumns[colIndex];\r\n            let cell = createElement('div');\r\n            cell['columnName'] = column.name;\r\n            cell.setAttribute('data-column', column.name);\r\n            cell.className = cellClassName;\r\n            cell.style.width = column._finalWidth + 'px';\r\n            if (column.cellClasses) cell.className += ' ' + column.cellClasses;\r\n            if (allowCellPreview) {\r\n                p._bindCellHoverIn(cell);\r\n            }\r\n            \r\n            let cellInner = cell.appendChild(createElement('div'));\r\n            cellInner.innerHTML = this._getHtmlForCell(rowData, column);\r\n            \r\n            row.appendChild(cell);\r\n        }\r\n\r\n        if (isVirtual) {\r\n            top = i > 0 ? virtualRowHeightFirst + (i - 1) * virtualRowHeight : 0;\r\n            row.style.position = 'absolute';\r\n            row.style[virtualRowXAttr] = 0;\r\n            row.style.top = top + 'px';\r\n        }\r\n\r\n        bodyFragment.appendChild(row);\r\n\r\n        this.trigger('rowcreate', i, physicalRowIndex, row, rowData);\r\n    }\r\n\r\n    return bodyFragment;\r\n};\r\n\r\n/**\r\n * Calculate virtual table height for scrollbar\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._calculateVirtualHeight = function () {\r\n    let p = this.p;\r\n\r\n    if (p.tbody) {\r\n        let rowCount = (p.filteredRows || p.rows).length;\r\n        let height = p.virtualRowHeight * rowCount;\r\n        if (rowCount) {\r\n            height += (p.virtualRowHeightFirst - p.virtualRowHeight);\r\n            height += (p.virtualRowHeightLast - p.virtualRowHeight);\r\n        }\r\n        // At least 1 pixel - to show scrollers correctly.\r\n        if (height < 1) {\r\n            height = 1;\r\n        }\r\n        p.tbody.style.height = height + 'px';\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculate the size required for the table body width (which is the row's width)\r\n * @private\r\n * @returns {Number} calculated width\r\n */\r\nDGTable.prototype._calculateTbodyWidth = function () {\r\n    const p = this.p;\r\n        \r\n    let tableClassName = this.o.tableClassName,\r\n        rowClassName = tableClassName + '-row',\r\n        cellClassName = tableClassName + '-cell',\r\n        visibleColumns = p.visibleColumns,\r\n        colCount = visibleColumns.length,\r\n        cell,\r\n        cellInner,\r\n        colIndex,\r\n        column;\r\n\r\n    let $row = $('<div>').addClass(rowClassName).css('float', 'left');\r\n    let sumActualWidth = 0;\r\n\r\n    for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n        column = visibleColumns[colIndex];\r\n        cell = createElement('div');\r\n        cell.className = cellClassName;\r\n        cell.style.width = column.actualWidth + 'px';\r\n        if (column.cellClasses) cell.className += ' ' + column.cellClasses;\r\n        cellInner = cell.appendChild(createElement('div'));\r\n        $row.append(cell);\r\n        sumActualWidth += column.actualWidth;\r\n    }\r\n\r\n    let $thisWrapper = $('<div>')\r\n        .addClass(this.el.className)\r\n        .css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px', 'float': 'left', width: '1px', overflow: 'hidden' })\r\n        .append(\r\n            $('<div>').addClass(tableClassName).append(\r\n                $('<div>').addClass(tableClassName + '-body').css('width', sumActualWidth + 10000).append(\r\n                    $row,\r\n                ),\r\n            ),\r\n        );\r\n\r\n    $thisWrapper.appendTo(document.body);\r\n\r\n    let fractionTest = $('<div style=\"border:1.5px solid #000;width:0;height:0;position:absolute;left:0;top:-9999px\">').appendTo(document.body);\r\n    let hasFractions = parseFloat(fractionTest.css('border-width'));\r\n    hasFractions = Math.round(hasFractions) != hasFractions;\r\n    fractionTest.remove();\r\n\r\n    let width = CssUtil.outerWidth($row);\r\n    width -= p.scrollbarWidth || 0;\r\n\r\n    if (hasFractions) {\r\n        width++;\r\n    }\r\n\r\n    $thisWrapper.remove();\r\n    return width;\r\n};\r\n\r\n/**\r\n * Sets the columns of the table\r\n * @public\r\n * @expose\r\n * @param {COLUMN_OPTIONS[]} columns - Column definitions array\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumns = function (columns, render) {\r\n    const p = this.p;\r\n        \r\n    columns = columns || [];\r\n\r\n    let normalizedCols = new ColumnCollection();\r\n    for (let i = 0, order = 0; i < columns.length; i++) {\r\n\r\n        let columnData = columns[i];\r\n        let normalizedColumn = this._initColumnFromData(columnData);\r\n\r\n        if (columnData.order !== undefined) {\r\n            if (columnData.order > order) {\r\n                order = columnData.order + 1;\r\n            }\r\n            normalizedColumn.order = columnData.order;\r\n        } else {\r\n            normalizedColumn.order = order++;\r\n        }\r\n\r\n        normalizedCols.push(normalizedColumn);\r\n    }\r\n    normalizedCols.normalizeOrder();\r\n\r\n    p.columns = normalizedCols;\r\n    p.visibleColumns = normalizedCols.getVisibleColumns();\r\n    \r\n    this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Add a column to the table\r\n * @public\r\n * @expose\r\n * @param {COLUMN_OPTIONS} columnData column properties\r\n * @param {String|Number} [before=-1] column name or order to be inserted before\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.addColumn = function (columnData, before, render) {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    if (columnData && !columns.get(columnData.name)) {\r\n        let beforeColumn = null;\r\n        if (before !== undefined) {\r\n            beforeColumn = columns.get(before) || columns.getByOrder(before);\r\n        }\r\n\r\n        let column = this._initColumnFromData(columnData);\r\n        column.order = beforeColumn ? beforeColumn.order : (columns.getMaxOrder() + 1);\r\n\r\n        for (let i = columns.getMaxOrder(), to = column.order; i >= to ; i--) {\r\n            let col = columns.getByOrder(i);\r\n            if (col) {\r\n                col.order++;\r\n            }\r\n        }\r\n\r\n        columns.push(column);\r\n        columns.normalizeOrder();\r\n\r\n        p.visibleColumns = columns.getVisibleColumns();\r\n        this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n        this.trigger('addcolumn', column.name);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Remove a column from the table\r\n * @public\r\n * @expose\r\n * @param {String} column column name\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeColumn = function (column, render) {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    let colIdx = columns.indexOf(column);\r\n    if (colIdx > -1) {\r\n        columns.splice(colIdx, 1);\r\n        columns.normalizeOrder();\r\n\r\n        p.visibleColumns = columns.getVisibleColumns();\r\n        this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n        this.trigger('removecolumn', column);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a new cell formatter.\r\n * @public\r\n * @expose\r\n * @param {function(value: *, columnName: String, row: Object):String|null} [formatter=null] - The cell formatter. Should return an HTML.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setCellFormatter = function (formatter) {\r\n    /**\r\n     * @private\r\n     * @field {Function} cellFormatter */\r\n    this.o.cellFormatter = formatter || function (val) {\r\n        return (typeof val === 'string') ? htmlEncode(val) : val;\r\n    };\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a new header cell formatter.\r\n * @public\r\n * @expose\r\n * @param {function(label: String, columnName: String):String|null} [formatter=null] - The cell formatter. Should return an HTML.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setHeaderCellFormatter = function (formatter) {\r\n    /**\r\n     * @private\r\n     * @field {Function} headerCellFormatter */\r\n    this.o.headerCellFormatter = formatter || function (val) {\r\n        return (typeof val === 'string') ? htmlEncode(val) : val;\r\n    };\r\n        \r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {function(row:Object,args:Object):Boolean|null} [filterFunc=null] - The filter function to work with filters. Default is a by-colum filter.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setFilter = function (filterFunc) {\r\n    /** @private\r\n     * @field {Function} filter */\r\n    this.o.filter = filterFunc;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Object|null} args - Options to pass to the filter function\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.filter = function (args) {\r\n    const p = this.p;\r\n    \r\n    let filterFunc = this.o.filter || ByColumnFilter;\r\n    \r\n    // Deprecated use of older by-column filter\r\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\r\n        args = {\r\n            column: arguments[0],\r\n            keyword: arguments[1],\r\n            caseSensitive: arguments[2],\r\n        };\r\n    }\r\n    \r\n    let hadFilter = !!p.filteredRows;\r\n    if (p.filteredRows) {\r\n        p.filteredRows = null; // Allow releasing array memory now\r\n    }\r\n\r\n    // Shallow-clone the args, as the filter function may want to modify it for keeping state\r\n    p.filterArgs = args == null ? null : ((typeof args === 'object' && !Array.isArray(args)) ? $.extend({}, args) : args);\r\n    \r\n    if (p.filterArgs !== null) {\r\n        p.filteredRows = p.rows.filteredCollection(filterFunc, p.filterArgs);\r\n\r\n        if (hadFilter || p.filteredRows) {\r\n            this.clearAndRender();\r\n            this.trigger('filter', args);\r\n        }\r\n    }\r\n    else {\r\n        p.filterArgs = null;\r\n        p.filteredRows = null;\r\n        this.clearAndRender();\r\n        this.trigger('filterclear', {});\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.clearFilter = function () {\r\n    const p = this.p;\r\n    \r\n    if (p.filteredRows) {\r\n        p.filterArgs = null;\r\n        p.filteredRows = null;\r\n        this.clearAndRender();\r\n        this.trigger('filterclear', {});\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._refilter = function() {\r\n    const p = this.p;\r\n\r\n    if (p.filteredRows && p.filterArgs) {\r\n        let filterFunc = this.o.filter || ByColumnFilter;\r\n        p.filteredRows = p.rows.filteredCollection(filterFunc, p.filterArgs);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set a new label to a column\r\n * @public\r\n * @expose\r\n * @param {String} column Name of the column\r\n * @param {String} label New label for the column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnLabel = function (column, label) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        col.label = label === undefined ? col.name : label;\r\n\r\n        if (col.element) {\r\n            for (let i = 0; i < col.element[0].firstChild.childNodes.length; i++) {\r\n                let node = col.element[0].firstChild.childNodes[i];\r\n                if (node.nodeType === 3) {\r\n                    node.textContent = col.label;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Move a column to a new position\r\n * @public\r\n * @expose\r\n * @param {String|Number} src Name or position of the column to be moved\r\n * @param {String|Number} dest Name of the column currently in the desired position, or the position itself\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.moveColumn = function (src, dest) {\r\n    const o = this.o, p = this.p;\r\n        \r\n    let columns = p.columns,\r\n        col, destCol;\r\n\r\n    if (typeof src === 'string') {\r\n        col = columns.get(src);\r\n    } else if (typeof src === 'number') {\r\n        col = p.visibleColumns[src];\r\n    }\r\n    if (typeof dest === 'string') {\r\n        destCol = columns.get(dest);\r\n    } else if (typeof dest === 'number') {\r\n        destCol = p.visibleColumns[dest];\r\n    }\r\n\r\n    if (col && destCol && src !== dest) {\r\n        let srcOrder = col.order, destOrder = destCol.order;\r\n\r\n        p.visibleColumns = columns.moveColumn(col, destCol).getVisibleColumns();\r\n        this._ensureVisibleColumns();\r\n\r\n        if (o.virtualTable) {\r\n            this.clearAndRender()\r\n                ._updateLastCellWidthFromScrollbar(true);\r\n        } else {\r\n            let headerCell = p.$headerRow.find('>div.' + o.tableClassName + '-header-cell');\r\n            let beforePos = srcOrder < destOrder ? destOrder + 1 : destOrder,\r\n                fromPos = srcOrder;\r\n            headerCell[0].parentNode.insertBefore(headerCell[fromPos], headerCell[beforePos]);\r\n\r\n            let srcWidth = p.visibleColumns[srcOrder];\r\n            srcWidth = (srcWidth.actualWidthConsideringScrollbarWidth || srcWidth.actualWidth) + 'px';\r\n            let destWidth = p.visibleColumns[destOrder];\r\n            destWidth = (destWidth.actualWidthConsideringScrollbarWidth || destWidth.actualWidth) + 'px';\r\n\r\n            let tbodyChildren = p.$tbody[0].childNodes;\r\n            for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n                let row = tbodyChildren[i];\r\n                if (row.nodeType !== 1) continue;\r\n                row.insertBefore(row.childNodes[fromPos], row.childNodes[beforePos]);\r\n                row.childNodes[destOrder].firstChild.style.width = destWidth;\r\n                row.childNodes[srcOrder].firstChild.style.width = srcWidth;\r\n            }\r\n        }\r\n\r\n        this.trigger('movecolumn', col.name, srcOrder, destOrder);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sort the table\r\n * @public\r\n * @expose\r\n * @param {String?} column Name of the column to sort on (or null to remove sort arrow)\r\n * @param {Boolean=} descending Sort in descending order\r\n * @param {Boolean} [add=false] Should this sort be on top of the existing sort? (For multiple column sort)\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.sort = function (column, descending, add) {\r\n    const o = this.o, p = this.p;\r\n    \r\n    let columns = p.columns,\r\n        col = columns.get(column);\r\n\r\n    let currentSort = p.rows.sortColumn;\r\n        \r\n    if (col) {\r\n\r\n        if (currentSort.length && currentSort[currentSort.length - 1].column == column) {\r\n            // Recognize current descending mode, if currently sorting by this column\r\n            descending = descending === undefined ? !currentSort[currentSort.length - 1].descending : descending;\r\n        }\r\n\r\n        if (add) { // Add the sort to current sort stack\r\n\r\n            for (let i = 0; i < currentSort.length; i++) {\r\n                if (currentSort[i].column == col.name) {\r\n                    if (i < currentSort.length - 1) {\r\n                        currentSort.length = 0;\r\n                    } else {\r\n                        currentSort.splice(currentSort.length - 1, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if ((o.sortableColumns > 0 /* allow manual sort when disabled */ && currentSort.length >= o.sortableColumns) || currentSort.length >= p.visibleColumns.length) {\r\n                currentSort.length = 0;\r\n            }\r\n\r\n        } else { // Sort only by this column\r\n            currentSort.length = 0;\r\n        }\r\n\r\n        // Default to ascending\r\n        descending = descending === undefined ? false : descending;\r\n\r\n        // Set the required column in the front of the stack\r\n        currentSort.push({\r\n            column: col.name,\r\n            comparePath: col.comparePath || col.dataPath,\r\n            descending: !!descending,\r\n        });\r\n    } else {\r\n        currentSort.length = 0;\r\n    }\r\n\r\n    this._clearSortArrows();\r\n\r\n    for (let i = 0; i < currentSort.length; i++) {\r\n        this._showSortArrow(currentSort[i].column, currentSort[i].descending);\r\n    }\r\n\r\n    if (o.adjustColumnWidthForSortArrow && !o._tableSkeletonNeedsRendering) {\r\n        this.tableWidthChanged(true);\r\n    }\r\n\r\n    if (o.virtualTable) {\r\n        while (p.tbody && p.tbody.firstChild) {\r\n            this.trigger('rowdestroy', p.tbody.firstChild);\r\n            this._unbindCellEventsForRow(p.tbody.firstChild);\r\n            p.tbody.removeChild(p.tbody.firstChild);\r\n        }\r\n    } else {\r\n        p.tableSkeletonNeedsRendering = true;\r\n    }\r\n\r\n    p.rows.sortColumn = currentSort;\r\n    \r\n    if (currentSort.length) {\r\n        p.rows.sort(!!p.filteredRows);\r\n        if (p.filteredRows) {\r\n            p.filteredRows.sort(!!p.filteredRows);\r\n        }\r\n    }\r\n\r\n    // Build output for event, with option names that will survive compilers\r\n    let sorts = [];\r\n    for (let i = 0; i < currentSort.length; i++) {\r\n        sorts.push({ 'column': currentSort[i].column, 'descending': currentSort[i].descending });\r\n    }\r\n    this.trigger('sort', sorts);\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Re-sort the table using current sort specifiers\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.resort = function () {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    let currentSort = p.rows.sortColumn;\r\n    if (currentSort.length) {\r\n        \r\n        for (let i = 0; i < currentSort.length; i++) {\r\n            if (!columns.get(currentSort[i].column)) {\r\n                currentSort.splice(i--, 1);\r\n            }\r\n        }\r\n        \r\n        p.rows.sortColumn = currentSort;\r\n        if (currentSort.length) {\r\n            p.rows.sort(!!p.filteredRows);\r\n            if (p.filteredRows) {\r\n                p.filteredRows.sort(!!p.filteredRows);\r\n            }\r\n        }\r\n\r\n        // Build output for event, with option names that will survive compilers\r\n        let sorts = [];\r\n        for (let i = 0; i < currentSort.length; i++) {\r\n            sorts.push({ 'column': currentSort[i].column, 'descending': currentSort[i].descending });\r\n        }\r\n        this.trigger('sort', sorts);\r\n    }\r\n    \r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Make sure there's at least one column visible\r\n * @private\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._ensureVisibleColumns = function () {\r\n    const p = this.p;\r\n\r\n    if (p.visibleColumns.length === 0 && p.columns.length) {\r\n        p.columns[0].visible = true;\r\n        p.visibleColumns.push(p.columns[0]);\r\n        this.trigger('showcolumn', p.columns[0].name);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Show or hide a column\r\n * @public\r\n * @expose\r\n * @param {String} column Unique column name\r\n * @param {Boolean} visible New visibility mode for the column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnVisible = function (column, visible) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n\r\n    //noinspection PointlessBooleanExpressionJS\r\n    visible = !!visible;\r\n\r\n    if (col && !!col.visible != visible) {\r\n        col.visible = visible;\r\n        p.visibleColumns = p.columns.getVisibleColumns();\r\n        this.trigger(visible ? 'showcolumn' : 'hidecolumn', column);\r\n        this._ensureVisibleColumns();\r\n        this.clearAndRender();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the visibility mode of a column\r\n * @public\r\n * @expose\r\n * @returns {Boolean} true if visible\r\n */\r\nDGTable.prototype.isColumnVisible = function (column) {\r\n    const p = this.p;\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return col.visible;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Globally set the minimum column width\r\n * @public\r\n * @expose\r\n * @param {Number} minColumnWidth Minimum column width\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setMinColumnWidth = function (minColumnWidth) {\r\n    let o = this.o;\r\n    minColumnWidth = Math.max(minColumnWidth, 0);\r\n    if (o.minColumnWidth != minColumnWidth) {\r\n        o.minColumnWidth = minColumnWidth;\r\n        this.tableWidthChanged(true);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the current minimum column width\r\n * @public\r\n * @expose\r\n * @returns {Number} Minimum column width\r\n */\r\nDGTable.prototype.getMinColumnWidth = function () {\r\n    return this.o.minColumnWidth;\r\n};\r\n\r\n/**\r\n * Set the limit on concurrent columns sorted\r\n * @public\r\n * @expose\r\n * @param {Number} sortableColumns How many sortable columns to allow?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setSortableColumns = function (sortableColumns) {\r\n    const p = this.p, o = this.o;\r\n    if (o.sortableColumns != sortableColumns) {\r\n        o.sortableColumns = sortableColumns;\r\n        if (p.$table) {\r\n            let headerCell = p.$headerRow.find('>div.' + o.tableClassName + '-header-cell');\r\n            for (let i = 0; i < headerCell.length; i++) {\r\n                $(headerCell[0])[(o.sortableColumns > 0 && p.visibleColumns[i].sortable) ? 'addClass' : 'removeClass']('sortable');\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the limit on concurrent columns sorted\r\n * @public\r\n * @expose\r\n * @returns {Number} How many sortable columns are allowed?\r\n */\r\nDGTable.prototype.getSortableColumns = function () {\r\n    return this.o.sortableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Boolean?} movableColumns=true are the columns movable?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setMovableColumns = function (movableColumns) {\r\n    let o = this.o;\r\n    //noinspection PointlessBooleanExpressionJS\r\n    movableColumns = movableColumns === undefined ? true : !!movableColumns;\r\n    if (o.movableColumns != movableColumns) {\r\n        o.movableColumns = movableColumns;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} are the columns movable?\r\n */\r\nDGTable.prototype.getMovableColumns = function () {\r\n    return this.o.movableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Boolean} resizableColumns=true are the columns resizable?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setResizableColumns = function (resizableColumns) {\r\n    let o = this.o;\r\n    //noinspection PointlessBooleanExpressionJS\r\n    resizableColumns = resizableColumns === undefined ? true : !!resizableColumns;\r\n    if (o.resizableColumns != resizableColumns) {\r\n        o.resizableColumns = resizableColumns;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} are the columns resizable?\r\n */\r\nDGTable.prototype.getResizableColumns = function () {\r\n    return this.o.resizableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {{function(string,boolean):{function(a:*,b:*):boolean}}} comparatorCallback a callback function that returns the comparator for a specific column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setComparatorCallback = function (comparatorCallback) {\r\n    let o = this.o;\r\n    if (o.onComparatorRequired != comparatorCallback) {\r\n        o.onComparatorRequired = comparatorCallback;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set a new width to a column\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column to resize\r\n * @param {Number|String} width new column as pixels, or relative size (0.5, 50%)\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnWidth = function (column, width) {\r\n\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n\r\n    let parsedWidth = this._parseColumnWidth(width, col.ignoreMin ? 0 : this.o.minColumnWidth);\r\n\r\n    if (col) {\r\n        let oldWidth = this._serializeColumnWidth(col);\r\n\r\n        col.width = parsedWidth.width;\r\n        col.widthMode = parsedWidth.mode;\r\n\r\n        let newWidth = this._serializeColumnWidth(col);\r\n\r\n        if (oldWidth != newWidth) {\r\n            this.tableWidthChanged(true); // Calculate actual sizes\r\n        }\r\n\r\n        this.trigger('columnwidth', col.name, oldWidth, newWidth);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column\r\n * @returns {String|null} the serialized width of the specified column, or null if column not found\r\n */\r\nDGTable.prototype.getColumnWidth = function (column) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return this._serializeColumnWidth(col);\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column\r\n * @returns {SERIALIZED_COLUMN|null} configuration for all columns\r\n */\r\nDGTable.prototype.getColumnConfig = function (column) {\r\n    const p = this.p;\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return {\r\n            'order': col.order,\r\n            'width': this._serializeColumnWidth(col),\r\n            'visible': col.visible,\r\n            'label': col.label,\r\n        };\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Returns a config object for the columns, to allow saving configurations for next time...\r\n * @public\r\n * @expose\r\n * @returns {Object} configuration for all columns\r\n */\r\nDGTable.prototype.getColumnsConfig = function () {\r\n    const p = this.p;\r\n\r\n    let config = {};\r\n    for (let i = 0; i < p.columns.length; i++) {\r\n        config[p.columns[i].name] = this.getColumnConfig(p.columns[i].name);\r\n    }\r\n    return config;\r\n};\r\n\r\n/**\r\n * Returns an array of the currently sorted columns\r\n * @public\r\n * @expose\r\n * @returns {Array.<SERIALIZED_COLUMN_SORT>} configuration for all columns\r\n */\r\nDGTable.prototype.getSortedColumns = function () {\r\n    const p = this.p;\r\n\r\n    let sorted = [];\r\n    for (let i = 0; i < p.rows.sortColumn.length; i++) {\r\n        let sort = p.rows.sortColumn[i];\r\n        sorted.push({ column: sort.column, descending: sort.descending });\r\n    }\r\n    return sorted;\r\n};\r\n\r\n/**\r\n * Returns the HTML string for a specific cell. Can be used externally for special cases (i.e. when setting a fresh HTML in the cell preview through the callback).\r\n * @public\r\n * @expose\r\n * @param {Number} row - index of the row\r\n * @param {String} columnName - name of the column\r\n * @returns {String} HTML string for the specified cell\r\n */\r\nDGTable.prototype.getHtmlForCell = function (row, columnName) {\r\n    const p = this.p;\r\n\r\n    if (row < 0 || row > p.rows.length - 1) return null;\r\n    let column = p.columns.get(columnName);\r\n    if (!column) return null;\r\n    let rowData = p.rows[row];\r\n\r\n    return this._getHtmlForCell(rowData, column);\r\n};\r\n\r\n/**\r\n * Returns the HTML string for a specific cell. Can be used externally for special cases (i.e. when setting a fresh HTML in the cell preview through the callback).\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - row data\r\n * @param {Object} column - column data\r\n * @returns {String} HTML string for the specified cell\r\n */\r\nDGTable.prototype._getHtmlForCell = function (rowData, column) {\r\n    let dataPath = column.dataPath;\r\n    let colValue = rowData[dataPath[0]];\r\n    for (let dataPathIndex = 1; dataPathIndex < dataPath.length; dataPathIndex++) {\r\n        if (colValue == null) break;\r\n        colValue = colValue && colValue[dataPath[dataPathIndex]];\r\n    }\r\n\r\n    let content = this.o.cellFormatter(colValue, column.name, rowData);\r\n    if (content === undefined) {\r\n        content = '';\r\n    }\r\n    \r\n    return content;\r\n};\r\n\r\n/**\r\n * Returns the y pos of a row by index\r\n * @public\r\n * @expose\r\n * @param {Number} rowIndex - index of the row\r\n * @returns {Number|null} Y pos\r\n */\r\nDGTable.prototype.getRowYPos = function (rowIndex) {\r\n    const p = this.p;\r\n    \r\n    if (this.o.virtualTable) {\r\n        return rowIndex > 0 ? p.virtualRowHeightFirst + (rowIndex - 1) * p.virtualRowHeight : 0;\r\n    } else {\r\n        let row = p.tbody.childNodes[rowIndex];\r\n        return row ? row.offsetTop : null;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the row data for a specific row\r\n * @public\r\n * @expose\r\n * @param {Number} row index of the row\r\n * @returns {Object} Row data\r\n */\r\nDGTable.prototype.getDataForRow = function (row) {\r\n    const p = this.p;\r\n\r\n    if (row < 0 || row > p.rows.length - 1) return null;\r\n    return p.rows[row];\r\n};\r\n\r\n/**\r\n * Gets the number of rows\r\n * @public\r\n * @expose\r\n * @returns {Number} Row count\r\n */\r\nDGTable.prototype.getRowCount = function () {\r\n    const p = this.p;\r\n    return p.rows ? p.rows.length : 0;\r\n};\r\n\r\n/**\r\n * Returns the physical row index for specific row\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - Row data to find\r\n * @returns {Number} Row index\r\n */\r\nDGTable.prototype.getIndexForRow = function (rowData) {\r\n    const p = this.p;\r\n    return p.rows.indexOf(rowData);\r\n};\r\n\r\n/**\r\n * Gets the number of filtered rows\r\n * @public\r\n * @expose\r\n * @returns {Number} Filtered row count\r\n */\r\nDGTable.prototype.getFilteredRowCount = function () {\r\n    const p = this.p;\r\n    return (p.filteredRows || p.rows).length;\r\n};\r\n\r\n/**\r\n * Returns the filtered row index for specific row\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - Row data to find\r\n * @returns {Number} Row index\r\n */\r\nDGTable.prototype.getIndexForFilteredRow = function (rowData) {\r\n    const p = this.p;\r\n    return (p.filteredRows || p.rows).indexOf(rowData);\r\n};\r\n\r\n/**\r\n * Returns the row data for a specific row\r\n * @public\r\n * @expose\r\n * @param {Number} row index of the filtered row\r\n * @returns {Object} Row data\r\n */\r\nDGTable.prototype.getDataForFilteredRow = function (row) {\r\n    const p = this.p;\r\n    if (row < 0 || row > (p.filteredRows || p.rows).length - 1) return null;\r\n    return (p.filteredRows || p.rows)[row];\r\n};\r\n\r\n/**\r\n * Returns DOM element of the header row\r\n * @public\r\n * @expose\r\n * @returns {Element} Row element\r\n */\r\nDGTable.prototype.getHeaderRowElement = function () {\r\n    return this.p.headerRow;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Element} el\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._horizontalPadding = function(el) {\r\n    return ((parseFloat($.css(el, 'padding-left')) || 0) +\r\n    (parseFloat($.css(el, 'padding-right')) || 0));\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Element} el\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._horizontalBorderWidth = function(el) {\r\n    return ((parseFloat($.css(el, 'border-left')) || 0) +\r\n    (parseFloat($.css(el, 'border-right')) || 0));\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._calculateWidthAvailableForColumns = function() {\r\n    const o = this.o, p = this.p;\r\n\r\n    // Changing display mode briefly, to prevent taking in account the  parent's scrollbar width when we are the cause for it\r\n    let oldDisplay, lastScrollTop, lastScrollLeft;\r\n    if (p.$table) {\r\n        lastScrollTop = p.table ? p.table.scrollTop : 0;\r\n        lastScrollLeft = p.table ? p.table.scrollLeft : 0;\r\n\r\n        if (o.virtualTable) {\r\n            oldDisplay = p.$table[0].style.display;\r\n            p.$table[0].style.display = 'none';\r\n        }\r\n    }\r\n\r\n    let detectedWidth = CssUtil.width(this.$el);\r\n\r\n    if (p.$table) {\r\n        if (o.virtualTable) {\r\n            p.$table[0].style.display = oldDisplay;\r\n        }\r\n\r\n        p.table.scrollTop = lastScrollTop;\r\n        p.table.scrollLeft = lastScrollLeft;\r\n        p.header.scrollLeft = lastScrollLeft;\r\n    }\r\n\r\n    let tableClassName = o.tableClassName;\r\n\r\n    let $thisWrapper = $('<div>').addClass(this.el.className).css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px' });\r\n    let $header = $('<div>').addClass(tableClassName + '-header').appendTo($thisWrapper);\r\n    let $headerRow = $('<div>').addClass(tableClassName + '-header-row').appendTo($header);\r\n    for (let i = 0; i < p.visibleColumns.length; i++) {\r\n        $headerRow.append($('<div><div></div></div>').addClass(tableClassName + '-header-cell').addClass(p.visibleColumns[i].cellClasses || ''));\r\n    }\r\n    $thisWrapper.appendTo(document.body);\r\n\r\n    detectedWidth -= this._horizontalBorderWidth($headerRow[0]);\r\n\r\n    let $cells = $headerRow.find('>div.' + tableClassName + '-header-cell');\r\n    for (let i = 0; i < $cells.length; i++) {\r\n        let $cell = $($cells[i]);\r\n\r\n        let isBoxing = $cell.css('boxSizing') === 'border-box';\r\n        if (!isBoxing) {\r\n            detectedWidth -=\r\n                (parseFloat($cell.css('border-right-width')) || 0) +\r\n                (parseFloat($cell.css('border-left-width')) || 0) +\r\n                (this._horizontalPadding($cell[0])); // CELL's padding\r\n        }\r\n    }\r\n\r\n    if ($thisWrapper) {\r\n        $thisWrapper.remove();\r\n    }\r\n\r\n    return Math.max(0, detectedWidth);\r\n};\r\n\r\n/**\r\n * Notify the table that its width has changed\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.tableWidthChanged = (function () {\r\n\r\n    let getTextWidth = function(text) {\r\n        let tableClassName = this.o.tableClassName;\r\n\r\n        let $cell, $tableWrapper = $('<div>').addClass(this.$el).append(\r\n            $('<div>').addClass(tableClassName + '-header').append(\r\n                $('<div>').addClass(tableClassName + '-header-row').append(\r\n                    $cell = $('<div>').addClass(tableClassName + '-header-cell').append(\r\n                        $('<div>').text(text),\r\n                    ),\r\n                ),\r\n            ),\r\n        ).css({ 'position': 'absolute', top: '-9999px', 'visibility': 'hidden' });\r\n        $tableWrapper.appendTo(document.body);\r\n\r\n        let width = CssUtil.width($cell);\r\n\r\n        $tableWrapper.remove();\r\n\r\n        return width;\r\n    };\r\n\r\n    let lastDetectedWidth = null;\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * @param {Boolean} [forceUpdate=false]\r\n     * @param {Boolean} [renderColumns=true]\r\n     * @returns {DGTable} self\r\n     */\r\n    return function(forceUpdate, renderColumns) {\r\n\r\n        let that = this,\r\n            o = that.o,\r\n            p = that.p,\r\n            detectedWidth = this._calculateWidthAvailableForColumns(),\r\n            sizeLeft = detectedWidth,\r\n            relatives = 0;\r\n\r\n        renderColumns = renderColumns === undefined || renderColumns;\r\n\r\n        let tableWidthBeforeCalculations = 0;\r\n\r\n        if (!p.tbody) {\r\n            renderColumns = false;\r\n        }\r\n\r\n        if (renderColumns) {\r\n            tableWidthBeforeCalculations = parseFloat(p.tbody.style.minWidth) || 0;\r\n        }\r\n\r\n        if (sizeLeft != lastDetectedWidth || forceUpdate) {\r\n            lastDetectedWidth = detectedWidth;\r\n\r\n            let absWidthTotal = 0, changedColumnIndexes = [], totalRelativePercentage = 0;\r\n\r\n            for (let i = 0; i < p.columns.length; i++) {\r\n                p.columns[i].actualWidthConsideringScrollbarWidth = null;\r\n            }\r\n\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.widthMode === ColumnWidthMode.ABSOLUTE) {\r\n                    let width = col.width;\r\n                    width += col.arrowProposedWidth || 0; // Sort-arrow width\r\n                    if (!col.ignoreMin && width < o.minColumnWidth) {\r\n                        width = o.minColumnWidth;\r\n                    }\r\n                    sizeLeft -= width;\r\n                    absWidthTotal += width;\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        changedColumnIndexes.push(i);\r\n                    }\r\n                } else if (col.widthMode === ColumnWidthMode.AUTO) {\r\n                    let width = getTextWidth.call(this, col.label) + 20;\r\n                    width += col.arrowProposedWidth || 0; // Sort-arrow width\r\n                    if (!col.ignoreMin && width < o.minColumnWidth) {\r\n                        width = o.minColumnWidth;\r\n                    }\r\n                    sizeLeft -= width;\r\n                    absWidthTotal += width;\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        if (!o.convertColumnWidthsToRelative) {\r\n                            changedColumnIndexes.push(i);\r\n                        }\r\n                    }\r\n                } else if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                    totalRelativePercentage += col.width;\r\n                    relatives++;\r\n                }\r\n            }\r\n\r\n            // Normalize relative sizes if needed\r\n            if (o.convertColumnWidthsToRelative) {\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.AUTO) {\r\n                        col.widthMode = ColumnWidthMode.RELATIVE;\r\n                        sizeLeft += col.actualWidth;\r\n                        col.width = col.actualWidth / absWidthTotal;\r\n                        totalRelativePercentage += col.width;\r\n                        relatives++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize relative sizes if needed\r\n            if (relatives && ((totalRelativePercentage < 1 && o.relativeWidthGrowsToFillWidth) ||\r\n                (totalRelativePercentage > 1 && o.relativeWidthShrinksToFillWidth))) {\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        col.width /= totalRelativePercentage;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let sizeLeftForRelative = Math.max(0, sizeLeft); // Use this as the space to take the relative widths out of\r\n            if (sizeLeftForRelative === 0) {\r\n                sizeLeftForRelative = p.table.clientWidth;\r\n            }\r\n\r\n            let minColumnWidthRelative = (o.minColumnWidth / sizeLeftForRelative);\r\n            if (isNaN(minColumnWidthRelative)) {\r\n                minColumnWidthRelative = 0;\r\n            }\r\n            if (minColumnWidthRelative > 0) {\r\n                let extraRelative = 0, delta;\r\n\r\n                // First pass - make sure they are all constrained to the minimum width\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        if (!col.ignoreMin && col.width < minColumnWidthRelative) {\r\n                            extraRelative += minColumnWidthRelative - col.width;\r\n                            col.width = minColumnWidthRelative;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Second pass - try to take the extra width out of the other columns to compensate\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        if (!col.ignoreMin && col.width > minColumnWidthRelative) {\r\n                            if (extraRelative > 0) {\r\n                                delta = Math.min(extraRelative, col.width - minColumnWidthRelative);\r\n                                col.width -= delta;\r\n                                extraRelative -= delta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Try to fill width\r\n            if (o.autoFillTableWidth && sizeLeft > 0) {\r\n                let nonResizableTotal = 0;\r\n                let sizeLeftToFill = sizeLeft;\r\n                \r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (!col.resizable && col.widthMode === ColumnWidthMode.ABSOLUTE)\r\n                        nonResizableTotal += col.width;\r\n                    \r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE)\r\n                        sizeLeftToFill -= Math.round(sizeLeftForRelative * col.width);\r\n                }\r\n                \r\n                let conv = ((detectedWidth - nonResizableTotal) / (detectedWidth - sizeLeftToFill - nonResizableTotal)) || NaN;\r\n                for (let i = 0; i < p.visibleColumns.length && sizeLeftToFill > 0; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (!col.resizable && col.widthMode === ColumnWidthMode.ABSOLUTE)\r\n                        continue;\r\n                    \r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        col.width *= conv;\r\n                    } else {\r\n                        let width = col.actualWidth * conv;\r\n                        if (col.actualWidth !== width) {\r\n                            col.actualWidth = width;\r\n                            if (changedColumnIndexes.indexOf(i) === -1)\r\n                                changedColumnIndexes.push(i);\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n            \r\n            // Materialize relative sizes\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                    let width = Math.round(sizeLeftForRelative * col.width);\r\n                    sizeLeft -= width;\r\n                    relatives--;\r\n\r\n                    // Take care of rounding errors\r\n                    if (relatives === 0 && sizeLeft === 1) { // Take care of rounding errors\r\n                        width++;\r\n                        sizeLeft--;\r\n                    }\r\n                    if (sizeLeft === -1) {\r\n                        width--;\r\n                        sizeLeft++;\r\n                    }\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        changedColumnIndexes.push(i);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (p.visibleColumns.length) {\r\n                // (There should always be at least 1 column visible, but just in case)\r\n                p.visibleColumns[p.visibleColumns.length - 1].actualWidthConsideringScrollbarWidth =\r\n                    p.visibleColumns[p.visibleColumns.length - 1].actualWidth - (p.scrollbarWidth || 0);\r\n            }\r\n\r\n            if (renderColumns) {\r\n                let tableWidth = this._calculateTbodyWidth();\r\n\r\n                if (tableWidthBeforeCalculations < tableWidth) {\r\n                    this._updateTableWidth(false);\r\n                }\r\n\r\n                for (let i = 0; i < changedColumnIndexes.length; i++) {\r\n                    this._resizeColumnElements(changedColumnIndexes[i]);\r\n                }\r\n\r\n                if (tableWidthBeforeCalculations > tableWidth) {\r\n                    this._updateTableWidth(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n})();\r\n\r\n/**\r\n * Notify the table that its height has changed\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.tableHeightChanged = function () {\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (!p.$table) {\r\n        return that;\r\n    }\r\n\r\n    let height = CssUtil.innerHeight(that.$el)\r\n        - (parseFloat(p.$table.css('border-top-width')) || 0) // Subtract top border of inner element\r\n        - (parseFloat(p.$table.css('border-bottom-width')) || 0); // Subtract bottom border of inner element\r\n\r\n    if (height != o.height) {\r\n\r\n        o.height = height;\r\n\r\n        if (p.tbody) {\r\n            // At least 1 pixel - to show scrollers correctly.\r\n            p.tbody.style.height = Math.max(o.height - CssUtil.outerHeight(p.$headerRow), 1) + 'px';\r\n        }\r\n\r\n        if (o.virtualTable) {\r\n            that.clearAndRender();\r\n        }\r\n    }\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Add rows to the table\r\n * @public\r\n * @expose\r\n * @param {Object[]} data - array of rows to add to the table\r\n * @param {Number} [at=-1] - where to add the rows at\r\n * @param {Boolean} [resort=false] - should resort all rows?\r\n * @param {Boolean} [render=true]\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.addRows = function (data, at, resort, render) {\r\n    let that = this,\r\n        p = that.p;\r\n        \r\n    if (typeof at === 'boolean') {\r\n        render = resort;\r\n        resort = at;\r\n        at = -1;\r\n    }\r\n    \r\n    if (typeof at !== 'number')\r\n        at = -1;\r\n    \r\n    if (at < 0 || at > p.rows.length)\r\n        at = p.rows.length;\r\n    \r\n    render = (render === undefined) ? true : !!render;\r\n\r\n    if (data) {\r\n        p.rows.add(data, at);\r\n        \r\n        if (p.filteredRows || (resort && p.rows.sortColumn.length)) {\r\n            \r\n            if (resort && p.rows.sortColumn.length) {\r\n                this.resort();\r\n            } else {\r\n                this._refilter();\r\n            }\r\n            \r\n            p.tableSkeletonNeedsRendering = true;\r\n            \r\n            if (render) {\r\n                // Render the skeleton with all rows from scratch\r\n                this.render();\r\n            }\r\n            \r\n        } else if (render) {\r\n            let childNodes = p.tbody.childNodes;\r\n            \r\n            if (that.o.virtualTable) {\r\n                \r\n                while (p.tbody.firstChild) {\r\n                    this.trigger('rowdestroy', p.tbody.firstChild);\r\n                    this._unbindCellEventsForRow(p.tbody.firstChild);\r\n                    p.tbody.removeChild(p.tbody.firstChild);\r\n                }\r\n\r\n                this._calculateVirtualHeight() // Calculate virtual height\r\n                    ._updateLastCellWidthFromScrollbar() // Detect vertical scrollbar height\r\n                    .render()\r\n                    ._updateTableWidth(false); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n            } else if (p.$tbody) {\r\n                \r\n                let firstRow = at,\r\n                    lastRow = at + data.length - 1;\r\n                \r\n                let renderedRows = that.renderRows(firstRow, lastRow);\r\n                p.tbody.insertBefore(renderedRows, childNodes[at] || null);\r\n                \r\n                for (let i = lastRow + 1; i < childNodes.length; i++) {\r\n                    let row = childNodes[i];\r\n                    row['rowIndex'] += data.length;\r\n                    row['physicalRowIndex'] += data.length;\r\n                }\r\n                               \r\n                this.render()\r\n                    ._updateLastCellWidthFromScrollbar() // Detect vertical scrollbar height, and update existing last cells\r\n                    ._updateTableWidth(true); // Update table width to suit the required width considering vertical scrollbar\r\n\r\n            }\r\n        }\r\n\r\n        this.trigger('addrows', data.length, false);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a row from the table\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex - index\r\n * @param {Number} count - how many rows to remove\r\n * @param {Boolean=true} render\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeRows = function (physicalRowIndex, count, render) {\r\n    let that = this,\r\n        p = that.p;\r\n        \r\n    if (typeof count !== 'number' || count <= 0) return this;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return this;\r\n\r\n    p.rows.splice(physicalRowIndex, count);\r\n    render = (render === undefined) ? true : !!render;\r\n    \r\n    if (p.filteredRows) {\r\n        \r\n        this._refilter();\r\n        \r\n        p.tableSkeletonNeedsRendering = true;\r\n        \r\n        if (render) {\r\n            // Render the skeleton with all rows from scratch\r\n            this.render();\r\n        }\r\n        \r\n    } else if (render) {\r\n        \r\n        let childNodes = p.tbody.childNodes;\r\n        \r\n        if (this.o.virtualTable) {\r\n                \r\n            while (p.tbody.firstChild) {\r\n                this.trigger('rowdestroy', p.tbody.firstChild);\r\n                this._unbindCellEventsForRow(p.tbody.firstChild);\r\n                p.tbody.removeChild(p.tbody.firstChild);\r\n            }\r\n            \r\n            this._calculateVirtualHeight()\r\n                ._updateLastCellWidthFromScrollbar()\r\n                .render()\r\n                ._updateTableWidth(false); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n                \r\n        } else {\r\n            \r\n            let countRemoved = 0, lastRowIndex = physicalRowIndex + count - 1;\r\n            \r\n            for (let i = 0; i < childNodes.length; i++) {\r\n                let row = childNodes[i];\r\n                let index = row['physicalRowIndex'];\r\n                \r\n                if (index >= physicalRowIndex) {\r\n                    if (index <= lastRowIndex) {\r\n                        this.trigger('rowdestroy', row);\r\n                        this._unbindCellEventsForRow(row);\r\n                        p.tbody.removeChild(row);\r\n                        i--;\r\n                    } else {\r\n                        row['physicalRowIndex'] -= count;\r\n                    }\r\n                } else {\r\n                    row['rowIndex'] = i;\r\n                }\r\n            }\r\n                        \r\n            this.render()\r\n                ._updateLastCellWidthFromScrollbar()\r\n                ._updateTableWidth(true); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n        }\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a row from the table\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex - index\r\n * @param {Boolean=true} render\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeRow = function (physicalRowIndex, render) {\r\n    return this.removeRows(physicalRowIndex, 1, render);\r\n};\r\n\r\n/**\r\n * Refreshes the row specified\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex index\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.refreshRow = function(physicalRowIndex) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return this;\r\n\r\n    // Find out if the row is in the rendered dataset\r\n    let rowIndex = -1;\r\n    if (p.filteredRows && (rowIndex = p.filteredRows.indexOf(p.rows[physicalRowIndex])) === -1) return this;\r\n\r\n    if (rowIndex === -1) {\r\n        rowIndex = physicalRowIndex;\r\n    }\r\n\r\n    let childNodes = p.tbody.childNodes;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        let isRowVisible = false;\r\n        let i = 0;\r\n        \r\n        for (; i < childNodes.length; i++) {\r\n            if (childNodes[i]['physicalRowIndex'] === physicalRowIndex) {\r\n                isRowVisible = true;\r\n                this.trigger('rowdestroy', childNodes[i]);\r\n                this._unbindCellEventsForRow(childNodes[i]);\r\n                p.tbody.removeChild(childNodes[i]);\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (isRowVisible) {\r\n            let renderedRow = this.renderRows(rowIndex, rowIndex);\r\n            p.tbody.insertBefore(renderedRow, childNodes[i] || null);\r\n        }\r\n    } else {\r\n        this.trigger('rowdestroy', childNodes[rowIndex]);\r\n        this._unbindCellEventsForRow(childNodes[rowIndex]);\r\n        p.tbody.removeChild(childNodes[rowIndex]);\r\n        let renderedRow = this.renderRows(rowIndex, rowIndex);\r\n        p.tbody.insertBefore(renderedRow, childNodes[rowIndex] || null);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the DOM element for the specified row, if it exists\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex index\r\n * @returns {Element?} row or null\r\n */\r\nDGTable.prototype.getRowElement = function(physicalRowIndex) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return null;\r\n\r\n    // Find out if the row is in the rendered dataset\r\n    let rowIndex = -1;\r\n    if (p.filteredRows && (rowIndex = p.filteredRows.indexOf(p.rows[physicalRowIndex])) === -1) return this;\r\n\r\n    if (rowIndex === -1) {\r\n        rowIndex = physicalRowIndex;\r\n    }\r\n\r\n    let childNodes = p.tbody.childNodes;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            if (childNodes[i]['physicalRowIndex'] === physicalRowIndex) {\r\n                return childNodes[i];\r\n            }\r\n        }\r\n    } else {\r\n        return childNodes[rowIndex];\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Refreshes all virtual rows\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.refreshAllVirtualRows = function () {\r\n\r\n    const p = this.p;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        let rowsToRender = [];\r\n        let childNodes = p.tbody.childNodes;\r\n        \r\n        for (let i = 0, rowCount = childNodes.length; i < rowCount; i++) {\r\n            rowsToRender.push(childNodes[i]['physicalRowIndex']);\r\n            this.trigger('rowdestroy', childNodes[i]);\r\n            this._unbindCellEventsForRow(childNodes[i]);\r\n            p.tbody.removeChild(childNodes[i]);\r\n            i--;\r\n            rowCount--;\r\n        }\r\n        \r\n        for (let i = 0; i < rowsToRender.length; i++) {\r\n            let renderedRow = this.renderRows(rowsToRender[i], rowsToRender[i]);\r\n            p.tbody.appendChild(renderedRow);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replace the whole dataset\r\n * @public\r\n * @expose\r\n * @param {Object[]} data array of rows to add to the table\r\n * @param {Boolean} [resort=false] should resort all rows?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setRows = function (data, resort) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    // this.scrollTop = this.$el.find('.table').scrollTop();\r\n    p.rows.reset(data);\r\n\r\n    if (resort && p.rows.sortColumn.length) {\r\n        this.resort();\r\n    } else {\r\n        this._refilter();\r\n    }\r\n\r\n    this.clearAndRender().trigger('addrows', data.length, true);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Creates a URL representing the data in the specified element.\r\n * This uses the Blob or BlobBuilder of the modern browsers.\r\n * The url can be used for a Web Worker.\r\n * @public\r\n * @expose\r\n * @param {string} id Id of the element containing your data\r\n * @returns {String|null} the url, or null if not supported\r\n */\r\nDGTable.prototype.getUrlForElementContent = function (id) {\r\n    let blob,\r\n        el = document.getElementById(id);\r\n    if (el) {\r\n        let data = el.textContent;\r\n        if (typeof Blob === 'function') {\r\n            blob = new Blob([data]);\r\n        } else {\r\n            let BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MozBlobBuilder || global.MSBlobBuilder;\r\n            if (!BlobBuilder) {\r\n                return null;\r\n            }\r\n            let builder = new BlobBuilder();\r\n            builder.append(data);\r\n            blob = builder.getBlob();\r\n        }\r\n        return (global.URL || global.webkitURL).createObjectURL(blob);\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} A value indicating whether Web Workers are supported\r\n */\r\nDGTable.prototype.isWorkerSupported = function() {\r\n    return global['Worker'] instanceof Function;\r\n};\r\n\r\n/**\r\n * Creates a Web Worker for updating the table.\r\n * @public\r\n * @expose\r\n * @param {string} url Url to the script for the Web Worker\r\n * @param {Boolean=true} start if true, starts the Worker immediately\r\n * @returns {Worker?} the Web Worker, or null if not supported\r\n */\r\nDGTable.prototype.createWebWorker = function (url, start, resort) {\r\n    if (this.isWorkerSupported()) {\r\n        let that = this,\r\n            p = that.p;\r\n\r\n        let worker = new Worker(url);\r\n        let listener = function (evt) {\r\n            if (evt.data.append) {\r\n                that.addRows(evt.data.rows, resort);\r\n            } else {\r\n                that.setRows(evt.data.rows, resort);\r\n            }\r\n        };\r\n        worker.addEventListener('message', listener, false);\r\n        if (!p.workerListeners) {\r\n            p.workerListeners = [];\r\n        }\r\n        p.workerListeners.push({ worker: worker, listener: listener });\r\n        if (start || start === undefined) {\r\n            worker.postMessage(null);\r\n        }\r\n        return worker;\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Unbinds a Web Worker from the table, stopping updates.\r\n * @public\r\n * @expose\r\n * @param {Worker} worker the Web Worker\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.unbindWebWorker = function (worker) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (p.workerListeners) {\r\n        for (let j = 0; j < p.workerListeners.length; j++) {\r\n            if (p.workerListeners[j].worker == worker) {\r\n                worker.removeEventListener('message', p.workerListeners[j].listener, false);\r\n                p.workerListeners.splice(j, 1);\r\n                j--;\r\n            }\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * A synonym for hideCellPreview()\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.abortCellPreview = function() {\r\n    this.hideCellPreview();\r\n    return this;\r\n};\r\n\r\n/**\r\n * Cancel a resize in progress\r\n * @expose\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.cancelColumnResize = function() {\r\n    const p = this.p;\r\n\r\n    if (p.$resizer) {\r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n        $(document).off('mousemove.dgtable', p.onMouseMoveResizeAreaBound)\r\n            .off('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onVirtualTableScrolled = function (_event) {\r\n    this.render();\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onTableScrolledHorizontally = function (_event) {\r\n    const p = this.p;\r\n\r\n    p.header.scrollLeft = p.table.scrollLeft;\r\n};\r\n\r\n/**previousElementSibling\r\n * Reverse-calculate the column to resize from mouse position\r\n * @private\r\n * @param {jQuery_Event} e jQuery mouse event\r\n * @returns {String} name of the column which the mouse is over, or null if the mouse is not in resize position\r\n */\r\nDGTable.prototype._getColumnByResizePosition = function (e) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        rtl = this._isTableRtl();\r\n\r\n    let $headerCell = $(e.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName),\r\n        headerCell = $headerCell[0];\r\n    if (headerCell['__cell']) {\r\n        headerCell = headerCell['__cell'];\r\n        $headerCell = $(headerCell);\r\n    }\r\n\r\n    let previousElementSibling = $headerCell[0].previousSibling;\r\n    while (previousElementSibling && previousElementSibling.nodeType != 1) {\r\n        previousElementSibling = previousElementSibling.previousSibling;\r\n    }\r\n\r\n    let firstCol = !previousElementSibling;\r\n\r\n    let mouseX = ((e.pageX != null ? e.pageX : e.originalEvent.pageX) || e.originalEvent.clientX) - $headerCell.offset().left;\r\n\r\n    if (rtl) {\r\n        if (!firstCol && CssUtil.outerWidth($headerCell) - mouseX <= o.resizeAreaWidth / 2) {\r\n            return previousElementSibling['columnName'];\r\n        } else if (mouseX <= o.resizeAreaWidth / 2) {\r\n            return headerCell['columnName'];\r\n        }\r\n    } else {\r\n        if (!firstCol && mouseX <= o.resizeAreaWidth / 2) {\r\n            return previousElementSibling['columnName'];\r\n        } else if (CssUtil.outerWidth($headerCell) - mouseX <= o.resizeAreaWidth / 2) {\r\n            return headerCell['columnName'];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onTouchStartColumnHeader = function (event) {\r\n    const p = this.p;\r\n\r\n    if (p.currentTouchId) return;\r\n\r\n    let startTouch = event.originalEvent.changedTouches[0];\r\n    p.currentTouchId = startTouch.identifier;\r\n\r\n    let $eventTarget = $(event.currentTarget);\r\n\r\n    let startPos = { x: startTouch.pageX, y: startTouch.pageY },\r\n        currentPos = startPos,\r\n        distanceTreshold = 9;\r\n        \r\n    let tapAndHoldTimeout;\r\n\r\n    let unbind = function () {\r\n        p.currentTouchId = null;\r\n        $eventTarget.off('touchend').off('touchcancel');\r\n        clearTimeout(tapAndHoldTimeout);\r\n    };\r\n\r\n    let fakeEvent = function (name) {\r\n        let fakeEvent = $.Event(name);\r\n        let extendObjects = Array.prototype.slice.call(arguments, 1);\r\n        $.each(['target', 'clientX', 'clientY', 'offsetX', 'offsetY', 'screenX', 'screenY', 'pageX', 'pageY', 'which'],\r\n            function () {\r\n                fakeEvent[this] = event[this];\r\n                for (let i = 0; i < extendObjects.length; i++) {\r\n                    if (extendObjects[i][this] != null) {\r\n                        fakeEvent[this] = extendObjects[i][this];\r\n                    }\r\n                }\r\n            });\r\n        return fakeEvent;\r\n    };\r\n\r\n    $eventTarget.trigger(fakeEvent('mousedown', event.originalEvent.changedTouches[0], { 'which': 1 }));\r\n\r\n    tapAndHoldTimeout = setTimeout(() => {\r\n        unbind();\r\n\r\n        // Prevent simulated mouse events after touchend\r\n        $eventTarget\r\n            .one('touchend', (event) => {\r\n                event.preventDefault();\r\n                $eventTarget.off('touchend').off('touchcancel');\r\n            })\r\n            .one('touchcancel', (_event) => {\r\n                $eventTarget.off('touchend').off('touchcancel');\r\n            });\r\n\r\n        let distanceTravelled = Math.sqrt(Math.pow(Math.abs(currentPos.x - startPos.x), 2) + Math.pow(Math.abs(currentPos.y - startPos.y), 2));\r\n\r\n        if (distanceTravelled < distanceTreshold) {\r\n            this.cancelColumnResize();\r\n            $eventTarget.trigger(fakeEvent('mouseup', event.originalEvent.changedTouches[0], { 'which': 3 }));\r\n        }\r\n\r\n    }, 500);\r\n\r\n    $eventTarget\r\n        .on('touchend', (event) => {\r\n            let touch = find(event.originalEvent.changedTouches, (touch) => touch.identifier === p.currentTouchId);\r\n            if (!touch) return;\r\n\r\n            unbind();\r\n\r\n            event.preventDefault(); // Prevent simulated mouse events\r\n\r\n            currentPos = { x: touch.pageX, y: touch.pageY };\r\n            let distanceTravelled = Math.sqrt(Math.pow(Math.abs(currentPos.x - startPos.x), 2) + Math.pow(Math.abs(currentPos.y - startPos.y), 2));\r\n\r\n            if (distanceTravelled < distanceTreshold || p.$resizer) {\r\n                $eventTarget.trigger(fakeEvent('mouseup', touch, { 'which': 1 }));\r\n                $eventTarget.trigger(fakeEvent('click', touch, { 'which': 1 }));\r\n            }\r\n\r\n        })\r\n        .on('touchcancel', () => {\r\n            unbind();\r\n        })\r\n        .on('touchmove', (event) => {\r\n            let touch = find(event.originalEvent.changedTouches, (touch) => touch.identifier === p.currentTouchId);\r\n            if (!touch) return;\r\n\r\n            // Keep track of current position, so we know if we need to cancel the tap-and-hold\r\n            currentPos = { x: touch.pageX, y: touch.pageY };\r\n\r\n            if (p.$resizer) {\r\n                event.preventDefault();\r\n\r\n                $eventTarget.trigger(fakeEvent('mousemove', touch));\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} e event\r\n */\r\nDGTable.prototype._onMouseDownColumnHeader = function (event) {\r\n    if (event.which !== 1) return this; // Only treat left-clicks\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p,\r\n        col = this._getColumnByResizePosition(event);\r\n\r\n    if (col) {\r\n        let column = p.columns.get(col);\r\n        if (!o.resizableColumns || !column || !column.resizable) {\r\n            return false;\r\n        }\r\n\r\n        let rtl = this._isTableRtl();\r\n\r\n        if (p.$resizer) {\r\n            $(p.$resizer).remove();\r\n        }\r\n        p.$resizer = $('<div></div>')\r\n            .addClass(o.resizerClassName)\r\n            .css({\r\n                'position': 'absolute',\r\n                'display': 'block',\r\n                'z-index': -1,\r\n                'visibility': 'hidden',\r\n                'width': '2px',\r\n                'background': '#000',\r\n                'opacity': 0.7,\r\n            })\r\n            .appendTo(this.$el);\r\n\r\n        let selectedHeaderCell = column.element,\r\n            commonAncestor = p.$resizer.parent();\r\n\r\n        let posCol = selectedHeaderCell.offset(),\r\n            posRelative = commonAncestor.offset();\r\n        if (ieVersion === 8) {\r\n            posCol = selectedHeaderCell.offset(); // IE8 bug, first time it receives zeros...\r\n        }\r\n        posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n        posRelative.top += parseFloat(commonAncestor.css('border-top-width')) || 0;\r\n        posCol.left -= posRelative.left;\r\n        posCol.top -= posRelative.top;\r\n        posCol.top -= parseFloat(selectedHeaderCell.css('border-top-width')) || 0;\r\n        let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n        if (rtl) {\r\n            posCol.left -= Math.ceil((parseFloat(selectedHeaderCell.css('border-left-width')) || 0) / 2);\r\n            posCol.left -= Math.ceil(resizerWidth / 2);\r\n        } else {\r\n            posCol.left += CssUtil.outerWidth(selectedHeaderCell);\r\n            posCol.left += Math.ceil((parseFloat(selectedHeaderCell.css('border-right-width')) || 0) / 2);\r\n            posCol.left -= Math.ceil(resizerWidth / 2);\r\n        }\r\n\r\n        p.$resizer\r\n            .css({\r\n                'z-index': '10',\r\n                'visibility': 'visible',\r\n                'left': posCol.left,\r\n                'top': posCol.top,\r\n                'height': CssUtil.height(this.$el),\r\n            })[0]['columnName'] = selectedHeaderCell[0]['columnName'];\r\n            \r\n        try { p.$resizer[0].style.zIndex = ''; }\r\n        catch (ignored) { /* we're ok with this */ }\r\n\r\n        $(document).on('mousemove.dgtable', p.onMouseMoveResizeAreaBound);\r\n        $(document).on('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onMouseMoveColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.resizableColumns) {\r\n        let col = this._getColumnByResizePosition(event);\r\n        let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n        if (!col || !p.columns.get(col).resizable) {\r\n            headerCell.style.cursor = '';\r\n        } else {\r\n            headerCell.style.cursor = 'e-resize';\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onMouseUpColumnHeader = function (event) {\r\n    if (event.which === 3) {\r\n        let o = this.o;\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        let bounds = $headerCell.offset();\r\n        bounds['width'] = CssUtil.outerWidth($headerCell);\r\n        bounds['height'] = CssUtil.outerHeight($headerCell);\r\n        this.trigger('headercontextmenu', $headerCell[0]['columnName'], event.pageX, event.pageY, bounds);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onMouseLeaveColumnHeader = function (event) {\r\n    let o = this.o;\r\n    let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n    headerCell.style.cursor = '';\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onClickColumnHeader = function (event) {\r\n    if (!this._getColumnByResizePosition(event)) {\r\n\r\n        let that = this,\r\n            o = that.o,\r\n            p = that.p;\r\n\r\n        let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n        if (o.sortableColumns) {\r\n            let column = p.columns.get(headerCell['columnName']);\r\n            if (column && column.sortable) {\r\n                this.sort(headerCell['columnName'], undefined, true).render();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onStartDragColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.movableColumns) {\r\n\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        let column = p.columns.get($headerCell[0]['columnName']);\r\n        if (column && column.movable) {\r\n            $headerCell[0].style.opacity = 0.35;\r\n            p.dragId = Math.random() * 0x9999999; // Recognize this ID on drop\r\n            event.originalEvent.dataTransfer.setData('text', JSON.stringify({ dragId: p.dragId, column: column.name }));\r\n        } else {\r\n            event.preventDefault();\r\n        }\r\n\r\n    } else {\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {MouseEvent} event event\r\n */\r\nDGTable.prototype._onMouseMoveResizeArea = function (event) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let column = p.columns.get(p.$resizer[0]['columnName']);\r\n    let rtl = this._isTableRtl();\r\n\r\n    let selectedHeaderCell = column.element,\r\n        commonAncestor = p.$resizer.parent();\r\n    let posCol = selectedHeaderCell.offset(), posRelative = commonAncestor.offset();\r\n    posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n    posCol.left -= posRelative.left;\r\n    let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n    \r\n    let isBoxing = selectedHeaderCell.css('box-sizing') === 'border-box';\r\n    \r\n    let actualX = event.pageX - posRelative.left;\r\n    let minX = posCol.left;\r\n\r\n    minX -= Math.ceil(resizerWidth / 2);\r\n\r\n    if (rtl) {\r\n        minX += CssUtil.outerWidth(selectedHeaderCell);\r\n        minX -= column.ignoreMin ? 0 : this.o.minColumnWidth;\r\n\r\n        if (!isBoxing) {\r\n            minX -= Math.ceil((parseFloat(selectedHeaderCell.css('border-left-width')) || 0) / 2);\r\n            minX -= this._horizontalPadding(selectedHeaderCell[0]);\r\n        }\r\n\r\n        if (actualX > minX) {\r\n            actualX = minX;\r\n        }\r\n    } else {\r\n        minX += column.ignoreMin ? 0 : this.o.minColumnWidth;\r\n        \r\n        if (!isBoxing) {\r\n            minX += Math.ceil((parseFloat(selectedHeaderCell.css('border-right-width')) || 0) / 2);\r\n            minX += this._horizontalPadding(selectedHeaderCell[0]);\r\n        }\r\n\r\n        if (actualX < minX) {\r\n            actualX = minX;\r\n        }\r\n    }\r\n\r\n    p.$resizer.css('left', actualX + 'px');\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Event} event event\r\n */\r\nDGTable.prototype._onEndDragColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (!p.$resizer) {\r\n        event.target.style.opacity = null;\r\n    } else {\r\n        $(document).off('mousemove.dgtable', p.onMouseMoveResizeAreaBound)\r\n            .off('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n\r\n        let column = p.columns.get(p.$resizer[0]['columnName']);\r\n        let rtl = this._isTableRtl();\r\n\r\n        let selectedHeaderCell = column.element,\r\n            commonAncestor = p.$resizer.parent();\r\n        let posCol = selectedHeaderCell.offset(), posRelative = commonAncestor.offset();\r\n        posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n        posCol.left -= posRelative.left;\r\n        let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n        \r\n        let isBoxing = selectedHeaderCell.css('box-sizing') === 'border-box';\r\n\r\n        let actualX = event.pageX - posRelative.left;\r\n        let baseX = posCol.left, minX = posCol.left;\r\n        let width = 0;\r\n\r\n        baseX -= Math.ceil(resizerWidth / 2);\r\n\r\n        if (rtl) {\r\n\r\n            if (!isBoxing) {\r\n                actualX += this._horizontalPadding(selectedHeaderCell[0]);\r\n                actualX += parseFloat(selectedHeaderCell.css('border-left-width')) || 0;\r\n                actualX += parseFloat(selectedHeaderCell.css('border-right-width')) || 0;\r\n            }\r\n\r\n            baseX += CssUtil.outerWidth(selectedHeaderCell);\r\n            \r\n            minX = baseX - (column.ignoreMin ? 0 : this.o.minColumnWidth);\r\n            if (actualX > minX) {\r\n                actualX = minX;\r\n            }\r\n\r\n            width = baseX - actualX;\r\n        } else {\r\n\r\n            if (!isBoxing) {\r\n                actualX -= this._horizontalPadding(selectedHeaderCell[0]);\r\n                actualX -= parseFloat(selectedHeaderCell.css('border-left-width')) || 0;\r\n                actualX -= parseFloat(selectedHeaderCell.css('border-right-width')) || 0;\r\n            }\r\n\r\n            minX = baseX + (column.ignoreMin ? 0 : this.o.minColumnWidth);\r\n            if (actualX < minX) {\r\n                actualX = minX;\r\n            }\r\n\r\n            width = actualX - baseX;\r\n        }\r\n        \r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n\r\n        let sizeToSet = width;\r\n\r\n        if (column.widthMode === ColumnWidthMode.RELATIVE) {\r\n            let detectedWidth = this._calculateWidthAvailableForColumns();\r\n\r\n            let sizeLeft = detectedWidth;\r\n            //sizeLeft -= p.table.offsetWidth - p.table.clientWidth;\r\n\r\n            let totalRelativePercentage = 0;\r\n            let relatives = 0;\r\n\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.name === column.name) continue;\r\n\r\n                if (col.widthMode == ColumnWidthMode.RELATIVE) {\r\n                    totalRelativePercentage += col.width;\r\n                    relatives++;\r\n                } else {\r\n                    sizeLeft -= col.actualWidth;\r\n                }\r\n            }\r\n\r\n            sizeLeft = Math.max(1, sizeLeft);\r\n            sizeToSet = width / sizeLeft;\r\n\r\n            if (relatives > 0) {\r\n                // When there's more than one relative overall,\r\n                //   we can do relative enlarging/shrinking.\r\n                // Otherwise, we can end up having a 0 width.\r\n\r\n                let unNormalizedSizeToSet = sizeToSet / ((1 - sizeToSet) / totalRelativePercentage);\r\n\r\n                totalRelativePercentage += sizeToSet;\r\n\r\n                // Account for relative widths scaling later\r\n                if ((totalRelativePercentage < 1 && o.relativeWidthGrowsToFillWidth) ||\r\n                    (totalRelativePercentage > 1 && o.relativeWidthShrinksToFillWidth)) {\r\n                    sizeToSet = unNormalizedSizeToSet;\r\n                }\r\n            }\r\n            \r\n            sizeToSet *= 100;\r\n            sizeToSet += '%';\r\n        }\r\n\r\n        this.setColumnWidth(column.name, sizeToSet);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragEnterColumnHeader = function (event) {\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.movableColumns) {\r\n        let dataTransferred = event.originalEvent.dataTransfer.getData('text');\r\n        if (dataTransferred) {\r\n            dataTransferred = JSON.parse(dataTransferred);\r\n        }\r\n        else {\r\n            dataTransferred = null; // WebKit does not provide the dataTransfer on dragenter?..\r\n        }\r\n\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        if (!dataTransferred ||\r\n            (p.dragId == dataTransferred.dragId && $headerCell['columnName'] !== dataTransferred.column)) {\r\n\r\n            let column = p.columns.get($headerCell[0]['columnName']);\r\n            if (column && (column.movable || column != p.visibleColumns[0])) {\r\n                $($headerCell).addClass('drag-over');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragOverColumnHeader = function (event) {\r\n    event.preventDefault();\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragLeaveColumnHeader = function (event) {\r\n    let o = this.o;\r\n    let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n    if ( !$($headerCell[0].firstChild)\r\n            .has(event.originalEvent.relatedTarget).length ) {\r\n        $headerCell.removeClass('drag-over');\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDropColumnHeader = function (event) {\r\n    event.preventDefault();\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    let dataTransferred = JSON.parse(event.originalEvent.dataTransfer.getData('text'));\r\n    let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n    if (o.movableColumns && dataTransferred.dragId == p.dragId) {\r\n        let srcColName = dataTransferred.column,\r\n            destColName = $headerCell[0]['columnName'],\r\n            srcCol = p.columns.get(srcColName),\r\n            destCol = p.columns.get(destColName);\r\n        if (srcCol && destCol && srcCol.movable && (destCol.movable || destCol != p.visibleColumns[0])) {\r\n            this.moveColumn(srcColName, destColName);\r\n        }\r\n    }\r\n    $($headerCell).removeClass('drag-over');\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._clearSortArrows = function () {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (p.$table) {\r\n        let tableClassName = this.o.tableClassName;\r\n        let sortedColumns = p.$headerRow.find('>div.' + tableClassName + '-header-cell.sorted');\r\n        let arrows = sortedColumns.find('>div>.sort-arrow');\r\n        for (let arrow of arrows) {\r\n            let col = p.columns.get(arrow.parentNode.parentNode['columnName']);\r\n            if (col) {\r\n                col.arrowProposedWidth = 0;\r\n            }\r\n        }\r\n        arrows.remove();\r\n        sortedColumns.removeClass('sorted').removeClass('desc');\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {String} column the name of the sort column\r\n * @param {Boolean} descending table is sorted descending\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._showSortArrow = function (column, descending) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (!col) return false;\r\n    \r\n    let arrow = createElement('span');\r\n    arrow.className = 'sort-arrow';\r\n\r\n    if (col.element) {\r\n        col.element.addClass(descending ? 'sorted desc' : 'sorted');\r\n        col.element[0].firstChild.insertBefore(arrow, col.element[0].firstChild.firstChild);\r\n    }\r\n\r\n    if (col.widthMode != ColumnWidthMode.RELATIVE && this.o.adjustColumnWidthForSortArrow) {\r\n        col.arrowProposedWidth = arrow.scrollWidth + (parseFloat($(arrow).css('margin-right')) || 0) + (parseFloat($(arrow).css('margin-left')) || 0);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Number} cellIndex index of the column in the DOM\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._resizeColumnElements = function (cellIndex) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let headerCells = p.$headerRow.find('div.' + this.o.tableClassName + '-header-cell');\r\n    let col = p.columns.get(headerCells[cellIndex]['columnName']);\r\n\r\n    if (col) {\r\n        headerCells[cellIndex].style.width = (col.actualWidthConsideringScrollbarWidth || col.actualWidth) + 'px';\r\n\r\n        let width = (col.actualWidthConsideringScrollbarWidth || col.actualWidth) + 'px';\r\n        let tbodyChildren = p.$tbody[0].childNodes;\r\n        for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n            let headerRow = tbodyChildren[i];\r\n            if (headerRow.nodeType !== 1) continue;\r\n            headerRow.childNodes[cellIndex].style.width = width;\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @returns {DGTable} self\r\n * */\r\nDGTable.prototype._destroyHeaderCells = function() {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (p.$headerRow) {\r\n        this.trigger('headerrowdestroy', p.headerRow);\r\n        p.$headerRow.find('div.' + o.tableClassName + '-header-cell').remove();\r\n        p.$headerRow = null;\r\n        p.headerRow = null;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonBase = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n    \r\n    // Clean up old elements\r\n    \r\n    if (p.$table && o.virtualTable) {\r\n        p.$table.remove();\r\n        if (p.$tbody) {\r\n            let rows = p.$tbody[0].childNodes;\r\n            for (let i = 0, len = rows.length; i < len; i++) {\r\n                that.trigger('rowdestroy', rows[i]);\r\n                that._unbindCellEventsForRow(rows[i]);\r\n            }\r\n        }\r\n        p.$table = p.table = p.$tbody = p.tbody = null;\r\n    }\r\n    \r\n    that._destroyHeaderCells();\r\n    p.currentTouchId = null;\r\n    if (p.$header) {\r\n        p.$header.remove();\r\n    }    \r\n\r\n    // Create new base elements\r\n    let tableClassName = o.tableClassName,\r\n        headerCellClassName = tableClassName + '-header-cell',\r\n        header = createElement('div'),\r\n        $header = $(header),\r\n        headerRow = createElement('div'),\r\n        $headerRow = $(headerRow);\r\n\r\n    header.className = tableClassName + '-header';\r\n    headerRow.className = tableClassName + '-header-row';\r\n    \r\n    p.$header = $header;\r\n    p.header = header;\r\n    p.$headerRow = $headerRow;\r\n    p.headerRow = headerRow;\r\n    $headerRow.appendTo(p.$header);\r\n    $header.prependTo(this.$el);\r\n    \r\n    relativizeElement(that.$el);\r\n    \r\n    if (o.width == DGTable.Width.SCROLL) {\r\n        this.el.style.overflow = 'hidden';\r\n    } else {\r\n        this.el.style.overflow = '';\r\n    }\r\n    \r\n    if (!o.height && o.virtualTable) {\r\n        o.height = CssUtil.innerHeight(this.$el);\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonHeaderCells = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n        \r\n    let allowCellPreview = o.allowCellPreview,\r\n        allowHeaderCellPreview = o.allowHeaderCellPreview;\r\n\r\n    let tableClassName = o.tableClassName,\r\n        headerCellClassName = tableClassName + '-header-cell',\r\n        header = p.header,\r\n        $header = p.$header,\r\n        headerRow = p.headerRow,\r\n        $headerRow = p.$headerRow;\r\n\r\n    let ieDragDropHandler;\r\n    if (hasIeDragAndDropBug) {\r\n        ieDragDropHandler = function(evt) {\r\n            evt.preventDefault();\r\n            this.dragDrop();\r\n            return false;\r\n        };\r\n    }\r\n\r\n    let preventDefault = function (event) { event.preventDefault(); };\r\n\r\n    // Create header cells\r\n    for (let i = 0; i < p.visibleColumns.length; i++) {\r\n        let column = p.visibleColumns[i];\r\n        if (column.visible) {\r\n            let cell = createElement('div');\r\n            let $cell = $(cell);\r\n            cell.draggable = true;\r\n            cell.className = headerCellClassName;\r\n            cell.style.width = column.actualWidth + 'px';\r\n            if (o.sortableColumns && column.sortable) {\r\n                cell.className += ' sortable';\r\n            }\r\n            cell['columnName'] = column.name;\r\n            cell.setAttribute('data-column', column.name);\r\n            \r\n            let cellInside = createElement('div');\r\n            cellInside.innerHTML = o.headerCellFormatter(column.label, column.name);\r\n            cell.appendChild(cellInside);\r\n            if (allowCellPreview && allowHeaderCellPreview) {\r\n                p._bindCellHoverIn(cell);\r\n            }\r\n            headerRow.appendChild(cell);\r\n\r\n            p.visibleColumns[i].element = $cell;\r\n\r\n            $cell.on('mousedown.dgtable', that._onMouseDownColumnHeader.bind(that))\r\n                .on('mousemove.dgtable', that._onMouseMoveColumnHeader.bind(that))\r\n                .on('mouseup.dgtable', that._onMouseUpColumnHeader.bind(that))\r\n                .on('mouseleave.dgtable', that._onMouseLeaveColumnHeader.bind(that))\r\n                .on('touchstart.dgtable', that._onTouchStartColumnHeader.bind(that))\r\n                .on('dragstart.dgtable', that._onStartDragColumnHeader.bind(that))\r\n                .on('click.dgtable', that._onClickColumnHeader.bind(that))\r\n                .on('contextmenu.dgtable', preventDefault);\r\n            $(cellInside)\r\n                .on('dragenter.dgtable', that._onDragEnterColumnHeader.bind(that))\r\n                .on('dragover.dgtable', that._onDragOverColumnHeader.bind(that))\r\n                .on('dragleave.dgtable', that._onDragLeaveColumnHeader.bind(that))\r\n                .on('drop.dgtable', that._onDropColumnHeader.bind(that));\r\n\r\n            if (hasIeDragAndDropBug) {\r\n                $cell.on('selectstart.dgtable', ieDragDropHandler.bind(cell));\r\n            }\r\n\r\n            // Disable these to allow our own context menu events without interruption\r\n            $cell.css({ '-webkit-touch-callout': 'none', '-webkit-user-select': 'none', '-moz-user-select': 'none', '-ms-user-select': 'none', '-o-user-select': 'none', 'user-select': 'none' });\r\n        }\r\n    }\r\n\r\n    this.trigger('headerrowcreate', headerRow);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonBody = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n\r\n    let tableClassName = o.tableClassName;\r\n        \r\n    // Calculate virtual row heights\r\n    if (o.virtualTable && !p.virtualRowHeight) {\r\n        let createDummyRow = function() {\r\n            let row = createElement('div'),\r\n                cell = row.appendChild(createElement('div')),\r\n                cellInner = cell.appendChild(createElement('div'));\r\n            row.className = tableClassName + '-row';\r\n            cell.className = tableClassName + '-cell';\r\n            cellInner.innerHTML = '0';\r\n            row.style.visibility = 'hidden';\r\n            row.style.position = 'absolute';\r\n            return row;\r\n        };\r\n\r\n        let $dummyTbody, $dummyWrapper = $('<div>')\r\n            .addClass(that.el.className)\r\n            .css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px', width: '1px', overflow: 'hidden' })\r\n            .append(\r\n                $('<div>').addClass(tableClassName).append(\r\n                    $dummyTbody = $('<div>').addClass(tableClassName + '-body').css('width', 99999),\r\n                ),\r\n            );\r\n\r\n        $dummyWrapper.appendTo(document.body);\r\n\r\n        let row1 = createDummyRow(), row2 = createDummyRow(), row3 = createDummyRow();\r\n        $dummyTbody.append(row1, row2, row3);\r\n\r\n        p.virtualRowHeightFirst = CssUtil.outerHeight(row1);\r\n        p.virtualRowHeight = CssUtil.outerHeight(row2);\r\n        p.virtualRowHeightLast = CssUtil.outerHeight(row3);\r\n\r\n        p.virtualRowHeightMin = Math.min(Math.min(p.virtualRowHeightFirst, p.virtualRowHeight), p.virtualRowHeightLast);\r\n        p.virtualRowHeightMax = Math.max(Math.max(p.virtualRowHeightFirst, p.virtualRowHeight), p.virtualRowHeightLast);\r\n\r\n        $dummyWrapper.remove();\r\n    }\r\n\r\n    // Create inner table and tbody\r\n    if (!p.$table) {\r\n\r\n        let fragment = document.createDocumentFragment();\r\n        \r\n        // Create the inner table element\r\n        let table = createElement('div');\r\n        let $table = $(table);\r\n        table.className = tableClassName;\r\n\r\n        if (o.virtualTable) {\r\n            table.className += ' virtual';\r\n        }\r\n\r\n        let tableHeight = (o.height - CssUtil.outerHeight(p.$headerRow));\r\n        if ($table.css('box-sizing') !== 'border-box') {\r\n            tableHeight -= parseFloat($table.css('border-top-width')) || 0;\r\n            tableHeight -= parseFloat($table.css('border-bottom-width')) || 0;\r\n            tableHeight -= parseFloat($table.css('padding-top')) || 0;\r\n            tableHeight -= parseFloat($table.css('padding-bottom')) || 0;\r\n        }\r\n        p.visibleHeight = tableHeight;\r\n        table.style.height = o.height ? tableHeight + 'px' : 'auto';\r\n        table.style.display = 'block';\r\n        table.style.overflowY = 'auto';\r\n        table.style.overflowX = o.width == DGTable.Width.SCROLL ? 'auto' : 'hidden';\r\n        fragment.appendChild(table);\r\n\r\n        // Create the \"tbody\" element\r\n        let tbody = createElement('div');\r\n        let $tbody = $(tbody);\r\n        tbody.className = o.tableClassName + '-body';\r\n        p.table = table;\r\n        p.tbody = tbody;\r\n        p.$table = $table;\r\n        p.$tbody = $tbody;\r\n\r\n        if (o.virtualTable) {\r\n            p.virtualVisibleRows = Math.ceil(p.visibleHeight / p.virtualRowHeightMin);\r\n        }\r\n\r\n        that._calculateVirtualHeight();\r\n\r\n        relativizeElement($tbody);\r\n        relativizeElement($table);\r\n\r\n        table.appendChild(tbody);\r\n        that.el.appendChild(fragment);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n * @deprecated\r\n */\r\nDGTable.prototype._renderSkeleton = function () {\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._updateLastCellWidthFromScrollbar = function(force) {\r\n\r\n    const p = this.p;\r\n\r\n    // Calculate scrollbar's width and reduce from lat column's width\r\n    let scrollbarWidth = p.table.offsetWidth - p.table.clientWidth;\r\n    if (scrollbarWidth != p.scrollbarWidth || force) {\r\n        p.scrollbarWidth = scrollbarWidth;\r\n        for (let i = 0; i < p.columns.length; i++) {\r\n            p.columns[i].actualWidthConsideringScrollbarWidth = null;\r\n        }\r\n\r\n        if (p.scrollbarWidth > 0 && p.visibleColumns.length > 0) {\r\n            // (There should always be at least 1 column visible, but just in case)\r\n            let lastColIndex = p.visibleColumns.length - 1;\r\n\r\n            p.visibleColumns[lastColIndex].actualWidthConsideringScrollbarWidth = p.visibleColumns[lastColIndex].actualWidth - p.scrollbarWidth;\r\n            let lastColWidth = p.visibleColumns[lastColIndex].actualWidthConsideringScrollbarWidth + 'px';\r\n            let tbodyChildren = p.tbody.childNodes;\r\n            for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n                let row = tbodyChildren[i];\r\n                if (row.nodeType !== 1) continue;\r\n                row.childNodes[lastColIndex].style.width = lastColWidth;\r\n            }\r\n\r\n            p.headerRow.childNodes[lastColIndex].style.width = lastColWidth;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Explicitly set the width of the table based on the sum of the column widths\r\n * @private\r\n * @param {boolean} parentSizeMayHaveChanged Parent size may have changed, treat rendering accordingly\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._updateTableWidth = function (parentSizeMayHaveChanged) {\r\n    const o = this.o, p = this.p;\r\n    let width = this._calculateTbodyWidth();\r\n\r\n    p.tbody.style.minWidth = width + 'px';\r\n    p.headerRow.style.minWidth = (width + (p.scrollbarWidth || 0)) + 'px';\r\n\r\n    p.$table.off('scroll', p.onTableScrolledHorizontallyBound);\r\n\r\n    if (o.width == DGTable.Width.AUTO) {\r\n        // Update wrapper element's size to fully contain the table body\r\n\r\n        CssUtil.width(p.$table, CssUtil.outerWidth(p.$tbody));\r\n        CssUtil.width(this.$el, CssUtil.outerWidth(p.$table));\r\n\r\n    } else if (o.width == DGTable.Width.SCROLL) {\r\n\r\n        if (parentSizeMayHaveChanged) {\r\n            let lastScrollTop = p.table ? p.table.scrollTop : 0,\r\n                lastScrollLeft = p.table ? p.table.scrollLeft : 0;\r\n\r\n            // BUGFIX: Relayout before recording the widths\r\n            webkitRenderBugfix(this.el);\r\n\r\n            p.table.scrollTop = lastScrollTop;\r\n            p.table.scrollLeft = lastScrollLeft;\r\n            p.header.scrollLeft = lastScrollLeft;\r\n        }\r\n\r\n        p.$table.on('scroll', p.onTableScrolledHorizontallyBound);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {Boolean}\r\n */\r\nDGTable.prototype._isTableRtl = function() {\r\n    return this.p.$table.css('direction') === 'rtl';\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Object} column column object\r\n * @returns {String}\r\n */\r\nDGTable.prototype._serializeColumnWidth = function(column) {\r\n    return column.widthMode === ColumnWidthMode.AUTO ? 'auto' :\r\n        column.widthMode === ColumnWidthMode.RELATIVE ? column.width * 100 + '%' :\r\n            column.width;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} el\r\n */\r\nDGTable.prototype._cellMouseOverEvent = function(el) {\r\n    const o = this.o, p = this.p;\r\n\r\n    let elInner = el.firstChild;\r\n\r\n    if ((elInner.scrollWidth - elInner.clientWidth > 1) ||\r\n        (elInner.scrollHeight - elInner.clientHeight > 1)) {\r\n\r\n        this.hideCellPreview();\r\n        p.abortCellPreview = false;\r\n\r\n        let $el = $(el), $elInner = $(elInner);\r\n        let previewCell = createElement('div'), $previewCell = $(previewCell);\r\n        previewCell.innerHTML = el.innerHTML;\r\n        previewCell.className = o.cellPreviewClassName;\r\n\r\n        let isHeaderCell = $el.hasClass(o.tableClassName + '-header-cell');\r\n        if (isHeaderCell) {\r\n            previewCell.className += ' header';\r\n            if ($el.hasClass('sortable')) {\r\n                previewCell.className += ' sortable';\r\n            }\r\n\r\n            previewCell.draggable = true;\r\n\r\n            $(previewCell).on('mousedown', this._onMouseDownColumnHeader.bind(this))\r\n                .on('mousemove', this._onMouseMoveColumnHeader.bind(this))\r\n                .on('mouseup', this._onMouseUpColumnHeader.bind(this))\r\n                .on('mouseleave', this._onMouseLeaveColumnHeader.bind(this))\r\n                .on('touchstart', this._onTouchStartColumnHeader.bind(this))\r\n                .on('dragstart', this._onStartDragColumnHeader.bind(this))\r\n                .on('click', this._onClickColumnHeader.bind(this))\r\n                .on('contextmenu.dgtable', function (event) { event.preventDefault(); });\r\n            $(previewCell.firstChild)\r\n                .on('dragenter', this._onDragEnterColumnHeader.bind(this))\r\n                .on('dragover', this._onDragOverColumnHeader.bind(this))\r\n                .on('dragleave', this._onDragLeaveColumnHeader.bind(this))\r\n                .on('drop', this._onDropColumnHeader.bind(this));\r\n\r\n            if (hasIeDragAndDropBug) {\r\n                $(previewCell).on('selectstart', (function(evt) {\r\n                    evt.preventDefault();\r\n                    this.dragDrop();\r\n                    return false;\r\n                }).bind(previewCell));\r\n            }\r\n        }\r\n\r\n        let paddingL = parseFloat($el.css('padding-left')) || 0,\r\n            paddingR = parseFloat($el.css('padding-right')) || 0,\r\n            paddingT = parseFloat($el.css('padding-top')) || 0,\r\n            paddingB = parseFloat($el.css('padding-bottom')) || 0;\r\n\r\n        let requiredWidth = elInner.scrollWidth + (el.clientWidth - elInner.offsetWidth);\r\n\r\n        let borderBox = $el.css('box-sizing') === 'border-box';\r\n        if (borderBox) {\r\n            $previewCell.css('box-sizing', 'border-box');\r\n        } else {\r\n            requiredWidth -= paddingL + paddingR;\r\n            $previewCell.css('margin-top', parseFloat($(el).css('border-top-width')) || 0);\r\n        }\r\n\r\n        if (!p.transparentBgColor1) {\r\n            // Detect browser's transparent spec\r\n            let tempDiv = document.createElement('div');\r\n            tempDiv.style.backgroundColor = 'transparent';\r\n            p.transparentBgColor1 = $(tempDiv).css('background-color');\r\n            tempDiv.style.backgroundColor = 'rgba(0,0,0,0)';\r\n            p.transparentBgColor2 = $(tempDiv).css('background-color');\r\n        }\r\n\r\n        let css = {\r\n            'box-sizing': borderBox ? 'border-box' : 'content-box',\r\n            'width': requiredWidth,\r\n            'min-height': CssUtil.height($el),\r\n            'padding-left': paddingL,\r\n            'padding-right': paddingR,\r\n            'padding-top': paddingT,\r\n            'padding-bottom': paddingB,\r\n            'overflow': 'hidden',\r\n            'position': 'absolute',\r\n            'z-index': '-1',\r\n            'left': '0',\r\n            'top': '0',\r\n            'cursor': 'default',\r\n        };\r\n\r\n        if (css) {\r\n            let bgColor = $(el).css('background-color');\r\n            if (bgColor === p.transparentBgColor1 || bgColor === p.transparentBgColor2) {\r\n                bgColor = $(el.parentNode).css('background-color');\r\n            }\r\n            if (bgColor === p.transparentBgColor1 || bgColor === p.transparentBgColor2) {\r\n                bgColor = '#fff';\r\n            }\r\n            css['background-color'] = bgColor;\r\n        }\r\n\r\n        $previewCell.css(css);\r\n\r\n        this.el.appendChild(previewCell);\r\n\r\n        $(previewCell.firstChild).css({\r\n            'direction': $elInner.css('direction'),\r\n            'white-space': $elInner.css('white-space'),\r\n        });\r\n\r\n        if (isHeaderCell) {\r\n            // Disable these to allow our own context menu events without interruption\r\n            $previewCell.css({\r\n                '-webkit-touch-callout': 'none',\r\n                '-webkit-user-select': 'none',\r\n                '-moz-user-select': 'none',\r\n                '-ms-user-select': 'none',\r\n                '-o-user-select': 'none',\r\n                'user-select': 'none',\r\n            });\r\n        }\r\n\r\n        previewCell['rowIndex'] = el.parentNode['rowIndex'];\r\n        let physicalRowIndex = previewCell['physicalRowIndex'] = el.parentNode['physicalRowIndex'];\r\n        previewCell['columnName'] = p.visibleColumns[nativeIndexOf.call(el.parentNode.childNodes, el)].name;\r\n\r\n        try {\r\n            let selection = SelectionHelper.saveSelection(el);\r\n            if (selection)\r\n                SelectionHelper.restoreSelection(previewCell, selection);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n        \r\n        this.trigger(\r\n            'cellpreview',\r\n            previewCell.firstChild,\r\n            physicalRowIndex == null ? null : physicalRowIndex,\r\n            previewCell['columnName'],\r\n            physicalRowIndex == null ? null : p.rows[physicalRowIndex],\r\n            el,\r\n        );\r\n\r\n        if (p.abortCellPreview) {\r\n            $previewCell.remove();\r\n            return;\r\n        }\r\n\r\n        let $parent = this.$el;\r\n        let $scrollParent = $parent[0] === window ? $(document) : $parent;\r\n\r\n        let offset = $el.offset();\r\n        let parentOffset = $parent.offset();\r\n        let rtl = $el.css('float') === 'right';\r\n        let prop = rtl ? 'right' : 'left';\r\n\r\n        // Handle RTL, go from the other side\r\n        if (rtl) {\r\n            let windowWidth = $(window).width();\r\n            offset.right = windowWidth - (offset.left + CssUtil.outerWidth($el));\r\n            parentOffset.right = windowWidth - (parentOffset.left + CssUtil.outerWidth($parent));\r\n        }\r\n\r\n        // If the parent has borders, then it would offset the offset...\r\n        offset.left -= parseFloat($parent.css('border-left-width')) || 0;\r\n        offset.right -= parseFloat($parent.css('border-right-width')) || 0;\r\n        offset.top -= parseFloat($parent.css('border-top-width')) || 0;\r\n\r\n        // Handle border widths of the element being offset\r\n        offset[prop] += parseFloat($(el).css('border-' + prop + '-width')) || 0;\r\n        offset.top += parseFloat($(el).css('border-top-width')) || parseFloat($(el).css('border-bottom-width')) || 0;\r\n\r\n        // Subtract offsets to get offset relative to parent\r\n        offset.left -= parentOffset.left;\r\n        offset.right -= parentOffset.right;\r\n        offset.top -= parentOffset.top;\r\n\r\n        // Constrain horizontally\r\n        let minHorz = 0,\r\n            maxHorz = $parent - CssUtil.outerWidth($previewCell);\r\n        offset[prop] = offset[prop] < minHorz ?\r\n            minHorz :\r\n            (offset[prop] > maxHorz ? maxHorz : offset[prop]);\r\n\r\n        // Constrain vertically\r\n        let totalHeight = CssUtil.outerHeight($el);\r\n        let maxTop = $scrollParent.scrollTop() + CssUtil.innerHeight($parent) - totalHeight;\r\n        if (offset.top > maxTop) {\r\n            offset.top = Math.max(0, maxTop);\r\n        }\r\n\r\n        // Apply css to preview cell\r\n        let previewCss = {\r\n            top: offset.top,\r\n            'z-index': 9999,\r\n        };\r\n        previewCss[prop] = offset[prop];\r\n\r\n        $previewCell.css(previewCss);\r\n\r\n        previewCell['__cell'] = el;\r\n        p.$cellPreviewCell = $previewCell;\r\n        el['__previewCell'] = previewCell;\r\n\r\n        p._bindCellHoverOut(el);\r\n        p._bindCellHoverOut(previewCell);\r\n\r\n        $previewCell.on('mousewheel', (event) => {\r\n            let originalEvent = event.originalEvent;\r\n            let xy = originalEvent.wheelDelta || -originalEvent.detail,\r\n                x = originalEvent.wheelDeltaX || (originalEvent.axis == 1 ? xy : 0),\r\n                y = originalEvent.wheelDeltaY || (originalEvent.axis == 2 ? xy : 0);\r\n\r\n            if (xy) {\r\n                this.hideCellPreview();\r\n            }\r\n\r\n            if (y && p.table.scrollHeight > p.table.clientHeight) {\r\n                let scrollTop = (y * -1) + p.$table.scrollTop();\r\n                p.$table.scrollTop(scrollTop);\r\n            }\r\n\r\n            if (x && p.table.scrollWidth > p.table.clientWidth) {\r\n                let scrollLeft = (x * -1) + p.$table.scrollLeft();\r\n                p.$table.scrollLeft(scrollLeft);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} el\r\n */\r\nDGTable.prototype._cellMouseOutEvent = function(_el) {\r\n    this.hideCellPreview();\r\n};\r\n\r\n/**\r\n * Hides the current cell preview,\r\n * or prevents the one that is currently trying to show (in the 'cellpreview' event)\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.hideCellPreview = function() {\r\n    const p = this.p;\r\n    \r\n    if (p.$cellPreviewCell) {\r\n        let previewCell = p.$cellPreviewCell[0];\r\n        let origCell = previewCell['__cell'];\r\n        let selection;\r\n        \r\n        try {\r\n            selection = SelectionHelper.saveSelection(previewCell);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n        \r\n        p.$cellPreviewCell.remove();\r\n        p._unbindCellHoverOut(origCell);\r\n        p._unbindCellHoverOut(previewCell);\r\n        \r\n        try {\r\n            if (selection)\r\n                SelectionHelper.restoreSelection(origCell, selection);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n\r\n        this.trigger('cellpreviewdestroy', previewCell.firstChild, previewCell['physicalRowIndex'], previewCell['columnName'], origCell);\r\n\r\n        origCell['__previewCell'] = null;\r\n        previewCell['__cell'] = null;\r\n\r\n        p.$cellPreviewCell = null;\r\n        p.abortCellPreview = false;\r\n    } else {\r\n        p.abortCellPreview = true;\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n// It's a shame the Google Closure Compiler does not support exposing a nested @param\r\n\r\n/**\r\n * @typedef {Object} SERIALIZED_COLUMN\r\n * @property {Number|null|undefined} [order=0]\r\n * @property {String|null|undefined} [width='auto']\r\n * @property {Boolean|null|undefined} [visible=true]\r\n * */\r\n\r\n/**\r\n * @typedef {Object} SERIALIZED_COLUMN_SORT\r\n * @property {String|null|undefined} [column='']\r\n * @property {Boolean|null|undefined} [descending=false]\r\n * */\r\n\r\n/**\r\n * @enum {ColumnWidthMode|number|undefined}\r\n * @const\r\n * @typedef {ColumnWidthMode}\r\n */\r\nconst ColumnWidthMode = {\r\n    /** @const*/ AUTO: 0,\r\n    /** @const*/ ABSOLUTE: 1,\r\n    /** @const*/ RELATIVE: 2,\r\n};\r\n\r\n/**\r\n * @enum {DGTable.Width|String|undefined}\r\n * @const\r\n * @typedef {DGTable.Width}\r\n */\r\nDGTable.Width = {\r\n    /** @const*/ NONE: 'none',\r\n    /** @const*/ AUTO: 'auto',\r\n    /** @const*/ SCROLL: 'scroll',\r\n};\r\n\r\n/**\r\n * @expose\r\n * @typedef {Object} COLUMN_SORT_OPTIONS\r\n * @property {String|null|undefined} column\r\n * @property {Boolean|null|undefined} [descending=false]\r\n * */\r\n\r\n/**\r\n * @expose\r\n * @typedef {Object} COLUMN_OPTIONS\r\n * @property {String|null|undefined} width\r\n * @property {String|null|undefined} name\r\n * @property {String|null|undefined} label\r\n * @property {String|null|undefined} dataPath - defaults to `name`\r\n * @property {String|null|undefined} comparePath - defaults to `dataPath`\r\n * @property {Number|String|null|undefined} comparePath\r\n * @property {Boolean|null|undefined} [resizable=true]\r\n * @property {Boolean|null|undefined} [movable=true]\r\n * @property {Boolean|null|undefined} [sortable=true]\r\n * @property {Boolean|null|undefined} [visible=true]\r\n * @property {String|null|undefined} [cellClasses]\r\n * @property {Boolean|null|undefined} [ignoreMin=false]\r\n * */\r\n\r\n/**\r\n * @typedef {Object} DGTable.Options\r\n * @property {COLUMN_OPTIONS[]} [columns]\r\n * @property {Number} [height]\r\n * @property {DGTable.Width} [width]\r\n * @property {Boolean|null|undefined} [virtualTable=true]\r\n * @property {Boolean|null|undefined} [resizableColumns=true]\r\n * @property {Boolean|null|undefined} [movableColumns=true]\r\n * @property {Number|null|undefined} [sortableColumns=1]\r\n * @property {Boolean|null|undefined} [adjustColumnWidthForSortArrow=true]\r\n * @property {Boolean|null|undefined} [relativeWidthGrowsToFillWidth=true]\r\n * @property {Boolean|null|undefined} [relativeWidthShrinksToFillWidth=false]\r\n * @property {Boolean|null|undefined} [convertColumnWidthsToRelative=false]\r\n * @property {Boolean|null|undefined} [autoFillTableWidth=false]\r\n * @property {String|null|undefined} [cellClasses]\r\n * @property {String|String[]|COLUMN_SORT_OPTIONS|COLUMN_SORT_OPTIONS[]} [sortColumn]\r\n * @property {Function|null|undefined} [cellFormatter=null]\r\n * @property {Function|null|undefined} [headerCellFormatter=null]\r\n * @property {Number|null|undefined} [rowsBufferSize=10]\r\n * @property {Number|null|undefined} [minColumnWidth=35]\r\n * @property {Number|null|undefined} [resizeAreaWidth=8]\r\n * @property {{function(string,boolean):{function(a:*,b:*):boolean}}} [onComparatorRequired]\r\n * @property {String|null|undefined} [resizerClassName=undefined]\r\n * @property {String|null|undefined} [tableClassName=undefined]\r\n * @property {Boolean|null|undefined} [allowCellPreview=true]\r\n * @property {Boolean|null|undefined} [allowHeaderCellPreview=true]\r\n * @property {String|null|undefined} [cellPreviewClassName=undefined]\r\n * @property {Boolean|null|undefined} [cellPreviewAutoBackground=true]\r\n * @property {Element|null|undefined} [el=undefined]\r\n * @property {String|null|undefined} [className=undefined]\r\n * @property {Function|null|undefined} [filter=undefined]\r\n * */\r\n\r\n/**\r\n * @typedef {{\r\n     *  currentTarget: Element,\r\n     *  data: Object.<string, *>,\r\n     *  delegateTarget: Element,\r\n     *  isDefaultPrevented: Boolean,\r\n     *  isImmediatePropagationStopped: Boolean,\r\n     *  isPropagationStopped: Boolean,\r\n     *  namespace: string,\r\n     *  originalEvent: MouseEvent|TouchEvent|Event,\r\n     *  pageX: Number,\r\n     *  pageY: Number,\r\n     *  preventDefault: Function,\r\n     *  props: Object.<string, *>,\r\n     *  relatedTarget: Element,\r\n     *  result: *,\r\n     *  stopImmediatePropagation: Function,\r\n     *  stopPropagation: Function,\r\n     *  target: Element,\r\n     *  timeStamp: Number,\r\n     *  type: string,\r\n     *  which: Number\r\n     * }} jQuery_Event\r\n * */\r\n\r\nif (!$.controls) {\r\n    $.controls = {};\r\n}\r\n\r\n$.controls.dgtable = DGTable;\r\n\r\nexport default DGTable;"],"names":["indexOf","Array","prototype","includes","array","item","call","find","predicate","i","len","length","htmlEncode","text","replace","RowCollection","collection","Object","assign","initialize","apply","arguments","options","sortColumn","add","rows","at","isArray","splice","push","reset","filteredCollection","filterFunc","args","row","onComparatorRequired","onSort","nativeSort","sort","getDefaultComparator","column","descending","columnName","comparePath","split","pathLength","hasPath","lessVal","moreVal","leftRow","rightRow","leftVal","rightVal","silent","comparators","comparator","bind","value","ColumnCollection","get","name","getByOrder","order","normalizeOrder","ordered","col1","col2","getVisibleColumns","visible","getMaxOrder","moveColumn","src","dest","srcOrder","destOrder","col","$","jQuery","hasComputedStyle","document","defaultView","getComputedStyle","jQuerySupportsFractions","fn","jquery","cssExpands","sizeKeys","CssUtil","generateSizeFunction","key","cssExpand","inner","outer","el","Element","style","currentStyle","isBoxing","size","border","padding","includeMargins","parseFloat","margin","undefined","generatejQueryFunction","ret","slice","isChildOf","child","parent","parentNode","SelectionHelper","saveSelection","range","window","getSelection","getRangeAt","commonAncestorContainer","preSelectionRange","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","start","toString","end","restoreSelection","savedSel","charIndex","nodeStack","node","foundStart","stop","createRange","setStart","collapse","pop","nodeType","nextCharIndex","childNodes","sel","removeAllRanges","addRange","rtlScrollType","detectRtlScrollType","definer","createElement","dir","direction","fontSize","width","height","position","top","overflow","textContent","body","appendChild","type","scrollLeft","removeChild","ScrollHelper","normalizeScrollLeft","rtl","scrollWidth","clientWidth","denormalizeScrollLeft","scrollLeftNormalized","x","normalizeScrollHorz","denormalizeScrollHorz","scrollHorzNormalized","ByColumnFilter","keyword","actualVal","caseSensitive","toLowerCase","nativeIndexOf","userAgent","navigator","ieVersion","substr","hasIeDragAndDropBug","hasOwnProperty","webkitRenderBugfix","oldDisplay","display","offsetHeight","relativizeElement","$el","css","DGTable","Function","concat","VERSION","that","o","p","events","addClass","className","data","on","destroy","onMouseMoveResizeAreaBound","_onMouseMoveResizeArea","onEndDragColumnHeaderBound","_onEndDragColumnHeader","onTableScrolledHorizontallyBound","_onTableScrolledHorizontally","tableSkeletonNeedsRendering","virtualTable","rowsBufferSize","minColumnWidth","Math","max","resizeAreaWidth","resizableColumns","movableColumns","sortableColumns","parseInt","adjustColumnWidthForSortArrow","convertColumnWidthsToRelative","autoFillTableWidth","cellClasses","resizerClassName","tableClassName","allowCellPreview","allowHeaderCellPreview","cellPreviewClassName","cellPreviewAutoBackground","Width","NONE","relativeWidthGrowsToFillWidth","relativeWidthShrinksToFillWidth","setCellFormatter","cellFormatter","setHeaderCellFormatter","headerCellFormatter","setFilter","filter","setColumns","columns","sortColumns","tmpSortColumns","dataPath","filteredRows","hoverMouseOverHandler","evt","event","relatedTarget","fromElement","contains","_cellMouseOverEvent","hoverMouseOutHandler","toElement","_cellMouseOutEvent","_bindCellHoverIn","addEventListener","_unbindCellHoverIn","removeEventListener","_bindCellHoverOut","_unbindCellHoverOut","attachEvent","detachEvent","eventName","callback","cb","once","off","callbacks","trigger","_parseColumnWidth","minWidth","widthSize","widthMode","ColumnWidthMode","AUTO","RELATIVE","ABSOLUTE","mode","_initColumnFromData","columnData","parsedWidth","ignoreMin","label","resizable","sortable","movable","close","remove","__removed","$resizer","$tbody","trs","_destroyHeaderCells","_unbindCellEventsForTable","$table","empty","workerListeners","j","worker","listener","_deferredRender","clearTimeout","prop","headerRow","rowCount","rowToClean","cells","cellCount","tbody","_unbindCellEventsForRow","render","offsetParent","setTimeout","renderedRows","_clearSortArrows","lastScrollTop","table","scrollTop","NaN","lastScrollLeft","_renderSkeletonBase","_renderSkeletonBody","tableWidthChanged","_renderSkeletonHeaderCells","renderRows","html","append","_updateLastCellWidthFromScrollbar","_updateTableWidth","_showSortArrow","isNaN","header","_onVirtualTableScrolled","firstVisible","floor","virtualRowHeightFirst","virtualRowHeight","lastVisible","ceil","visibleHeight","oldFirstVisible","oldLastVisible","tbodyChildNodes","countToRemove","min","prepend","clearAndRender","first","last","rowClassName","cellClassName","isDataFiltered","visibleColumns","isVirtual","physicalRowIndex","colCount","colIndex","_finalWidth","actualWidthConsideringScrollbarWidth","actualWidth","bodyFragment","createDocumentFragment","isRtl","_isTableRtl","virtualRowXAttr","rowData","cell","setAttribute","cellInner","innerHTML","_getHtmlForCell","_calculateVirtualHeight","virtualRowHeightLast","_calculateTbodyWidth","$row","sumActualWidth","$thisWrapper","left","appendTo","fractionTest","hasFractions","round","outerWidth","scrollbarWidth","normalizedCols","normalizedColumn","_ensureVisibleColumns","addColumn","before","beforeColumn","to","removeColumn","colIdx","formatter","val","hadFilter","filterArgs","extend","clearFilter","_refilter","setColumnLabel","element","firstChild","destCol","headerCell","$headerRow","beforePos","fromPos","insertBefore","srcWidth","destWidth","tbodyChildren","count","currentSort","_tableSkeletonNeedsRendering","sorts","resort","setColumnVisible","isColumnVisible","setMinColumnWidth","getMinColumnWidth","setSortableColumns","getSortableColumns","setMovableColumns","getMovableColumns","setResizableColumns","getResizableColumns","setComparatorCallback","comparatorCallback","setColumnWidth","oldWidth","_serializeColumnWidth","newWidth","getColumnWidth","getColumnConfig","getColumnsConfig","config","getSortedColumns","sorted","getHtmlForCell","colValue","dataPathIndex","content","getRowYPos","rowIndex","offsetTop","getDataForRow","getRowCount","getIndexForRow","getFilteredRowCount","getIndexForFilteredRow","getDataForFilteredRow","getHeaderRowElement","_horizontalPadding","_horizontalBorderWidth","_calculateWidthAvailableForColumns","detectedWidth","$header","$cells","$cell","getTextWidth","$tableWrapper","lastDetectedWidth","forceUpdate","renderColumns","sizeLeft","relatives","tableWidthBeforeCalculations","absWidthTotal","changedColumnIndexes","totalRelativePercentage","arrowProposedWidth","sizeLeftForRelative","minColumnWidthRelative","extraRelative","delta","nonResizableTotal","sizeLeftToFill","conv","tableWidth","_resizeColumnElements","tableHeightChanged","innerHeight","outerHeight","addRows","firstRow","lastRow","removeRows","lastRowIndex","index","removeRow","refreshRow","isRowVisible","renderedRow","getRowElement","refreshAllVirtualRows","rowsToRender","setRows","getUrlForElementContent","id","blob","getElementById","Blob","BlobBuilder","global","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","getBlob","URL","webkitURL","createObjectURL","isWorkerSupported","createWebWorker","url","Worker","postMessage","unbindWebWorker","abortCellPreview","hideCellPreview","cancelColumnResize","_event","_getColumnByResizePosition","e","$headerCell","target","closest","previousElementSibling","previousSibling","firstCol","mouseX","pageX","originalEvent","clientX","offset","_onTouchStartColumnHeader","currentTouchId","startTouch","changedTouches","identifier","$eventTarget","currentTarget","startPos","y","pageY","currentPos","distanceTreshold","tapAndHoldTimeout","unbind","fakeEvent","Event","extendObjects","each","one","preventDefault","distanceTravelled","sqrt","pow","abs","touch","_onMouseDownColumnHeader","which","selectedHeaderCell","commonAncestor","posCol","posRelative","resizerWidth","zIndex","ignored","_onMouseMoveColumnHeader","cursor","_onMouseUpColumnHeader","bounds","_onMouseLeaveColumnHeader","_onClickColumnHeader","_onStartDragColumnHeader","opacity","dragId","random","dataTransfer","setData","JSON","stringify","actualX","minX","baseX","sizeToSet","unNormalizedSizeToSet","_onDragEnterColumnHeader","dataTransferred","getData","parse","_onDragOverColumnHeader","_onDragLeaveColumnHeader","has","removeClass","_onDropColumnHeader","srcColName","destColName","srcCol","sortedColumns","arrows","arrow","cellIndex","headerCells","headerCellClassName","prependTo","SCROLL","ieDragDropHandler","dragDrop","draggable","cellInside","createDummyRow","visibility","$dummyTbody","$dummyWrapper","row1","row2","row3","virtualRowHeightMin","virtualRowHeightMax","fragment","tableHeight","overflowY","overflowX","virtualVisibleRows","_renderSkeleton","force","offsetWidth","lastColIndex","lastColWidth","parentSizeMayHaveChanged","elInner","scrollHeight","clientHeight","$elInner","previewCell","$previewCell","isHeaderCell","hasClass","paddingL","paddingR","paddingT","paddingB","requiredWidth","borderBox","transparentBgColor1","tempDiv","backgroundColor","transparentBgColor2","bgColor","selection","$parent","$scrollParent","parentOffset","windowWidth","right","minHorz","maxHorz","totalHeight","maxTop","previewCss","$cellPreviewCell","xy","wheelDelta","detail","wheelDeltaX","axis","wheelDeltaY","_el","origCell","controls","dgtable"],"mappings":"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"}