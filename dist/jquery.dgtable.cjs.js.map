{"version":3,"file":"index.js","sources":["src/util.js","src/row_collection.js","src/column_collection.js","src/css_util.js","src/selection_helper.js","src/by_column_filter.js","src/index.js"],"sourcesContent":["'use strict';\r\n\r\nconst nativeBind = Function.prototype.bind;\r\n\r\nexport const bind = function bind (what, oThis) {\r\n\r\n    if (nativeBind) {\r\n        return what.bind(oThis);\r\n    }\r\n\r\n    if (typeof this !== 'function') {\r\n        // closest thing possible to the ECMAScript 5\r\n        // internal IsCallable function\r\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n    }\r\n\r\n    let aArgs   = Array.prototype.slice.call(arguments, 1),\r\n        fToBind = this,\r\n        fNOP    = function() {},\r\n        fBound  = function() {\r\n            return fToBind.apply(this instanceof fNOP\r\n                    ? this\r\n                    : oThis,\r\n                aArgs.concat(Array.prototype.slice.call(arguments)));\r\n        };\r\n\r\n    if (this.prototype) {\r\n        // Function.prototype doesn't have a prototype property\r\n        fNOP.prototype = this.prototype;\r\n    }\r\n\r\n    fBound.prototype = new fNOP();\r\n\r\n    return fBound;\r\n};\r\n\r\nconst nativeIndexOf = Function.prototype.indexOf;\r\n\r\nexport const indexOf = function indexOf (array, searchElement, fromIndex) {\r\n\r\n    if (nativeIndexOf) {\r\n        return array.indexOf(searchElement, fromIndex);\r\n    }\r\n\r\n    let k;\r\n\r\n    if (array == null) {\r\n      throw new TypeError('\"this\" is null or not defined');\r\n    }\r\n\r\n    let len = array.length >>> 0;\r\n\r\n    if (len === 0) {\r\n      return -1;\r\n    }\r\n\r\n    let n = fromIndex | 0;\r\n\r\n    if (n >= len) {\r\n      return -1;\r\n    }\r\n\r\n    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n    while (k < len) {\r\n      if (k in array && array[k] === searchElement) {\r\n        return k;\r\n      }\r\n      k++;\r\n    }\r\n\r\n    return -1;\r\n};\r\n\r\nexport const contains = function contains (array, item) {\r\n    return indexOf(array, item) >= 0;\r\n};\r\n\r\nexport const find = function find (array, predicate) {\r\n\r\n    for (let i = 0, len = array.length; i >= 0 && i < len; i += 1) {\r\n        if (predicate(array[i], i, array))\r\n            return array[i];\r\n    }\r\n\r\n};\r\n\r\nconst nativeForEach = Function.prototype.forEach;\r\n\r\nexport const forEach = function forEach (array, callback, thisArg) {\r\n    if (nativeForEach) {\r\n        return array.forEach(callback, thisArg);\r\n    }\r\n\r\n    let T, k;\r\n\r\n    if (this === null) {\r\n        throw new TypeError(' this is null or not defined');\r\n    }\r\n\r\n    let len = array.length >>> 0;\r\n\r\n    if (typeof callback !== \"function\") {\r\n        throw new TypeError(callback + ' is not a function');\r\n    }\r\n\r\n    if (arguments.length > 1) {\r\n        T = thisArg;\r\n    }\r\n\r\n    k = 0;\r\n\r\n    while (k < len) {\r\n        if (k in array) {\r\n            let kValue = array[k];\r\n            callback.call(T, kValue, k, array);\r\n        }\r\n\r\n        k++;\r\n    }\r\n};","'use strict';\r\n\r\nimport { bind } from './util';\r\n\r\n// Define class RowCollection\r\nfunction RowCollection () {\r\n\r\n    // Instantiate an Array. Seems like the `.length = ` of an inherited Array does not work well.\r\n    // I will not use the IFRAME solution either in fear of memory leaks, and we're supporting large datasets...\r\n    let collection = [];\r\n\r\n    // Synthetically set the 'prototype'\r\n    Object.assign(collection, RowCollection.prototype);\r\n\r\n    // Call initializer\r\n    collection.initialize.apply(collection, arguments);\r\n\r\n    return collection;\r\n}\r\n\r\n// Inherit Array\r\nRowCollection.prototype = [];\r\n\r\nRowCollection.prototype.initialize = function (options) {\r\n\r\n    options = options || {};\r\n\r\n    /** @field {string} sortColumn */\r\n    this.sortColumn = options.sortColumn == null ? [] : options.sortColumn;\r\n};\r\n\r\n/**\r\n * @param {Object|Object[]} rows - row or array of rows to add to this collection\r\n * @param {number?} at - position to insert rows at\r\n */\r\nRowCollection.prototype.add = function (rows, at) {\r\n    let isArray = ('splice' in rows && 'length' in rows), i, len;\r\n    if (isArray) {\r\n        if (at) {\r\n            for (i = 0, len = rows.length; i < len; i++) {\r\n                this.splice(at++, 0, rows[i]);\r\n            }\r\n        } else {\r\n            for (i = 0, len = rows.length; i < len; i++) {\r\n                this.push(rows[i]);\r\n            }\r\n        }\r\n    } else {\r\n        if (at) {\r\n            this.splice(at, 0, rows);\r\n        } else {\r\n            this.push(rows);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Object|Object[]=} rows Row or array of rows to add to this collection\r\n */\r\nRowCollection.prototype.reset = function (rows) {\r\n    this.length = 0;\r\n    if (rows) {\r\n        this.add(rows);\r\n    }\r\n};\r\n\r\n/**\r\n * @param {Function} filterFunc - Filtering function\r\n * @param {Object|null} args? - Options to pass to the function\r\n * @returns {RowCollection} success result\r\n */\r\nRowCollection.prototype.filteredCollection = function (filterFunc, args) {\r\n    if (filterFunc && args) {\r\n        let rows = new RowCollection({ sortColumn: this.sortColumn });\r\n        \r\n        for (let i = 0, len = this.length, row; i < len; i++) {\r\n            row = this[i];\r\n            if (filterFunc(row, args)) {\r\n                row['__i'] = i;\r\n                rows.push(row);\r\n            }\r\n        }\r\n        return rows;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * @type {Function|null|undefined}\r\n */\r\nRowCollection.prototype.onComparatorRequired = null;\r\n\r\n/**\r\n * @type {Function|null|undefined}\r\n */\r\nRowCollection.prototype.onSort = null;\r\n\r\nlet nativeSort = RowCollection.prototype.sort;\r\n\r\nfunction getDefaultComparator(column, descending) {\r\n    let columnName = column.column;\r\n    let comparePath = column.comparePath || columnName;\r\n    if (typeof comparePath === 'string') {\r\n        comparePath = comparePath.split('.');\r\n    }\r\n    let pathLength = comparePath.length,\r\n        hasPath = pathLength > 1,\r\n        i;\r\n\r\n    let lessVal = descending ? 1 : -1, moreVal = descending ? -1 : 1;\r\n    return function(leftRow, rightRow) {\r\n        let leftVal = leftRow[comparePath[0]],\r\n            rightVal = rightRow[comparePath[0]];\r\n        if (hasPath) {\r\n            for (i = 1; i < pathLength; i++) {\r\n                leftVal = leftVal && leftVal[comparePath[i]];\r\n                rightVal = rightVal && rightVal[comparePath[i]];\r\n            }\r\n        }\r\n        if (leftVal === rightVal) return 0;\r\n        if (leftVal == null) return lessVal;\r\n        if (leftVal < rightVal) return lessVal;\r\n        return moreVal;\r\n    };\r\n}\r\n\r\n/**\r\n * @param {Boolean=false} silent\r\n * @returns {RowCollection} self\r\n */\r\nRowCollection.prototype.sort = function (silent) {\r\n    if (this.sortColumn.length) {\r\n        let comparators = [], i, comparator;\r\n\r\n        for (i = 0; i < this.sortColumn.length; i++) {\r\n            comparator = null;\r\n            if (this.onComparatorRequired) {\r\n                comparator = this.onComparatorRequired(this.sortColumn[i].column, this.sortColumn[i].descending);\r\n            }\r\n            if (!comparator) {\r\n                comparator = getDefaultComparator(this.sortColumn[i], this.sortColumn[i].descending);\r\n            }\r\n            comparators.push(bind(comparator, this));\r\n        }\r\n\r\n        if (comparators.length === 1) {\r\n            nativeSort.call(this, comparators[0]);\r\n        } else {\r\n            let len = comparators.length,\r\n                value;\r\n\r\n            comparator = function(leftRow, rightRow) {\r\n                for (i = 0; i < len; i++) {\r\n                    value = comparators[i](leftRow, rightRow);\r\n                    if (value !== 0) {\r\n                        return value;\r\n                    }\r\n                }\r\n                return value;\r\n            };\r\n\r\n            nativeSort.call(this, comparator);\r\n        }\r\n\r\n        if (!silent) {\r\n            if (this.onSort) {\r\n                this.onSort();\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\nexport default RowCollection;","'use strict';\r\n\r\n// Define class RowCollection\r\nfunction ColumnCollection () {\r\n\r\n    // Instantiate an Array. Seems like the `.length = ` of an inherited Array does not work well.\r\n    // I will not use the IFRAME solution either in fear of memory leaks, and we're supporting large datasets...\r\n    let collection = [];\r\n\r\n    // Synthetically set the 'prototype'\r\n    Object.assign(collection, ColumnCollection.prototype);\r\n\r\n    // Call initializer\r\n    collection.initialize.apply(collection, arguments);\r\n\r\n    return collection;\r\n}\r\n\r\n// Inherit Array\r\nColumnCollection.prototype = [];\r\n\r\nColumnCollection.prototype.initialize = function () {\r\n\r\n};\r\n\r\n/**\r\n * Get the column by this name\r\n * @param {String} column column name\r\n * @returns {Object} the column object\r\n */\r\nColumnCollection.prototype.get = function (column) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].name == column) {\r\n            return this[i];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Get the index of the column by this name\r\n * @param {String} column column name\r\n * @returns {int} the index of this column\r\n */\r\nColumnCollection.prototype.indexOf = function (column) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].name == column) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n};\r\n\r\n/**\r\n * Get the column by the specified order\r\n * @param {Number} order the column's order\r\n * @returns {Object} the column object\r\n */\r\nColumnCollection.prototype.getByOrder = function (order) {\r\n    for (let i = 0, len = this.length; i < len; i++) {\r\n        if (this[i].order == order) {\r\n            return this[i];\r\n        }\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Normalize order\r\n * @returns {ColumnCollection} self\r\n */\r\nColumnCollection.prototype.normalizeOrder = function () {\r\n    let ordered = [], i;\r\n    for (i = 0; i < this.length; i++) {\r\n        ordered.push(this[i]);\r\n    }\r\n    ordered.sort(function(col1, col2){ return col1.order < col2.order ? -1 : (col1.order > col2.order ? 1 : 0); });\r\n    for (i = 0; i < ordered.length; i++) {\r\n        ordered[i].order = i;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the array of visible columns, order by the order property\r\n * @returns {Array<Object>} ordered array of visible columns\r\n */\r\nColumnCollection.prototype.getVisibleColumns = function () {\r\n    let visible = [];\r\n    for (let i = 0, column; i < this.length; i++) {\r\n        column = this[i];\r\n        if (column.visible) {\r\n            visible.push(column);\r\n        }\r\n    }\r\n    visible.sort((col1, col2) => col1.order < col2.order ? -1 : (col1.order > col2.order ? 1 : 0));\r\n    return visible;\r\n};\r\n\r\n/**\r\n * @returns {int} maximum order currently in the array\r\n */\r\nColumnCollection.prototype.getMaxOrder = function () {\r\n    let order = 0;\r\n    for (let i = 0, column; i < this.length; i++) {\r\n        column = this[i];\r\n        if (column.order > order) {\r\n            order = column.order;\r\n        }\r\n    }\r\n    return order;\r\n};\r\n\r\n/**\r\n * Move a column to a new spot in the collection\r\n * @param {Object} src the column to move\r\n * @param {Object} dest the destination column\r\n * @returns {ColumnCollection} self\r\n */\r\nColumnCollection.prototype.moveColumn = function (src, dest) {\r\n    if (src && dest) {\r\n        let srcOrder = src.order, destOrder = dest.order, i, col;\r\n        if (srcOrder < destOrder) {\r\n            for (i = srcOrder + 1; i <= destOrder; i++) {\r\n                col = this.getByOrder(i);\r\n                col.order--;\r\n            }\r\n        } else {\r\n            for (i = srcOrder - 1; i >= destOrder; i--) {\r\n                col = this.getByOrder(i);\r\n                col.order++;\r\n            }\r\n        }\r\n        src.order = destOrder;\r\n    }\r\n    return this;\r\n};\r\n\r\nexport default ColumnCollection;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\nimport jQuery from 'jquery';\r\n\r\nconst $ = jQuery;\r\n\r\nconst hasComputedStyle = document.defaultView && document.defaultView.getComputedStyle;\r\n\r\nconst jQuerySupportsFractions = $ && $.fn.jquery >= '3';\r\n\r\nconst cssExpands = {\r\n    'width': [\r\n        'Left',\r\n        'Right',\r\n        'Width',\r\n    ],\r\n    'height': [\r\n        'Top',\r\n        'Bottom',\r\n        'Height',\r\n    ],\r\n};\r\n\r\nconst sizeKeys = ['width', 'height'];\r\n\r\nconst CssUtil = {};\r\n\r\nlet generateSizeFunction = function (key, cssExpand, inner, outer) {\r\n\r\n    return function () {\r\n        let el = arguments[0];\r\n        let value = arguments[1];\r\n\r\n        if (el && !(el instanceof Element) && 'length' in el) {\r\n            el = el[0];\r\n        }\r\n\r\n        if (!el) {\r\n            return null;\r\n        }\r\n\r\n        let style = hasComputedStyle ? document.defaultView.getComputedStyle(el) : el.currentStyle;\r\n        let isBoxing = style['boxSizing'] === 'border-box';\r\n        let size, border, padding;\r\n        let includeMargins = outer && arguments[2] === true || arguments[1] === true;\r\n\r\n        if (isBoxing || outer || inner) {\r\n            border = parseFloat(style['border' + cssExpand[0] + 'Width'] || 0)\r\n                + parseFloat(style['border' + cssExpand[1] + 'Width'] || 0);\r\n\r\n            padding = parseFloat(style['padding' + cssExpand[0]] || 0)\r\n                + parseFloat(style['padding' + cssExpand[1]] || 0);\r\n        }\r\n\r\n        let margin = includeMargins ?\r\n            (parseFloat(style['margin' + cssExpand[0]] || 0)\r\n            + parseFloat(style['margin' + cssExpand[1]] || 0)) : 0;\r\n\r\n        if (value == undefined) {\r\n            size = parseFloat(style[key]);\r\n\r\n            if (isBoxing) {\r\n\r\n                if (padding + border > size) {\r\n                    size = padding + border;\r\n                }\r\n\r\n                if (outer) {\r\n                    if (includeMargins) {\r\n                        size += margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size -= border;\r\n                }\r\n                else {\r\n                    size -= padding + border;\r\n                }\r\n\r\n            } else {\r\n\r\n                if (outer) {\r\n                    size += padding + border;\r\n\r\n                    if (includeMargins) {\r\n                        size += margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size += padding;\r\n                }\r\n\r\n            }\r\n\r\n            return size;\r\n        } else {\r\n            value = value || 0;\r\n            size = value;\r\n\r\n            if (isBoxing) {\r\n\r\n                if (outer) {\r\n                    if (includeMargins) {\r\n                        size -= margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size += border;\r\n                }\r\n                else {\r\n                    size += padding + border;\r\n                }\r\n\r\n            } else {\r\n\r\n                if (outer) {\r\n                    size -= padding + border;\r\n\r\n                    if (includeMargins) {\r\n                        size -= margin;\r\n                    }\r\n                }\r\n                else if (inner) {\r\n                    size -= padding;\r\n                }\r\n\r\n                if (size < 0) {\r\n                    size = 0;\r\n                }\r\n            }\r\n\r\n            el.style[key] = size + 'px';\r\n\r\n            return value;\r\n        }\r\n    };\r\n};\r\n\r\nlet generatejQueryFunction = function (key) {\r\n    return function () {\r\n        let collection = arguments[0];\r\n        if (!$.isArray(collection) && !(collection instanceof $)) {\r\n            collection = [collection];\r\n        }\r\n        \r\n        let ret = $.fn[key].apply(collection, Array.prototype.slice.call(arguments, 1));\r\n        \r\n        if (arguments.length > 1) {\r\n            return this;\r\n        }\r\n        \r\n        return ret;\r\n    };\r\n};\r\n\r\nfor (let i = 0; i < sizeKeys.length; i++) {\r\n    let key = sizeKeys[i];\r\n    let cssExpand = cssExpands[key];\r\n\r\n    if (jQuerySupportsFractions) {\r\n\r\n        CssUtil[key] = generatejQueryFunction(key);\r\n        CssUtil['inner' + cssExpand[2]] = generatejQueryFunction('inner' + cssExpand[2]);\r\n        CssUtil['outer' + cssExpand[2]] = generatejQueryFunction('outer' + cssExpand[2]);\r\n\r\n    } else {\r\n\r\n        CssUtil[key] = generateSizeFunction(key, cssExpand, false, false);\r\n        CssUtil['inner' + cssExpand[2]] = generateSizeFunction(key, cssExpand, true, false);\r\n        CssUtil['outer' + cssExpand[2]] = generateSizeFunction(key, cssExpand, false, true);\r\n\r\n    }\r\n}\r\n\r\n// Remove that huge function from memory\r\ngenerateSizeFunction = null;\r\n\r\nexport default CssUtil;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\n// saveSelection/restoreSelection courtesy of Tim Down, with my improvements\r\n// https://stackoverflow.com/questions/13949059/persisting-the-changes-of-range-objects-after-selection-in-html/13950376#13950376\r\n\r\nfunction isChildOf(child, parent) {\r\n  while ((child = child.parentNode) && child !== parent); \r\n  return !!child; \r\n}\r\n\r\nclass SelectionHelper {\r\n    \r\n    static saveSelection(el) {\r\n        let range = window.getSelection().getRangeAt(0);\r\n        \r\n        if (el !== range.commonAncestorContainer && !isChildOf(range.commonAncestorContainer, el))\r\n            return null;\r\n        \r\n        let preSelectionRange = range.cloneRange();\r\n        preSelectionRange.selectNodeContents(el);\r\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n        let start = preSelectionRange.toString().length;\r\n\r\n        return {\r\n            start: start,\r\n            end: start + range.toString().length,\r\n        };\r\n    }\r\n    \r\n    static restoreSelection(el, savedSel) {\r\n        let charIndex = 0;\r\n        let nodeStack = [el], node, foundStart = false, stop = false;\r\n        let range = document.createRange();\r\n        range.setStart(el, 0);\r\n        range.collapse(true);\r\n        \r\n        while (!stop && (node = nodeStack.pop())) {\r\n            if (node.nodeType == 3) {\r\n                let nextCharIndex = charIndex + node.length;\r\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\r\n                    range.setStart(node, savedSel.start - charIndex);\r\n                    foundStart = true;\r\n                }\r\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\r\n                    range.setEnd(node, savedSel.end - charIndex);\r\n                    stop = true;\r\n                }\r\n                charIndex = nextCharIndex;\r\n            } else {\r\n                let i = node.childNodes.length;\r\n                while (i--) {\r\n                    nodeStack.push(node.childNodes[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    }\r\n}\r\n\r\nexport default SelectionHelper;\r\n","'use strict';\r\n\r\nfunction ByColumnFilter (row, args) {\r\n    \r\n    let column = args.column;\r\n    let keyword = args.keyword == null ? '' : args.keyword.toString();\r\n    \r\n    if (!keyword || !column) return true;\r\n\r\n    let actualVal = row[column];\r\n    if (actualVal == null) {\r\n        return false;\r\n    }\r\n    \r\n    actualVal = actualVal.toString();\r\n    \r\n    if (!args.caseSensitive) {\r\n        actualVal = actualVal.toLowerCase();\r\n        keyword = keyword.toLowerCase();\r\n    }\r\n    \r\n    return actualVal.indexOf(keyword) !== -1;\r\n}\r\n\r\nexport default ByColumnFilter;","/* eslint-env browser */\r\n\r\n'use strict';\r\n\r\nimport jQuery from 'jquery';\r\nimport { bind, indexOf, contains, find, forEach } from './util';\r\nimport RowCollection from './row_collection';\r\nimport ColumnCollection from './column_collection';\r\nimport CssUtil from './css_util';\r\nimport SelectionHelper from './selection_helper';\r\nimport ByColumnFilter from './by_column_filter';\r\n\r\nconst $ = jQuery;\r\n\r\nlet userAgent = navigator.userAgent;\r\nlet ieVersion = userAgent.indexOf('MSIE ') != -1 ? parseFloat(userAgent.substr(userAgent.indexOf('MSIE ') + 5)) : null;\r\nlet hasIeDragAndDropBug = ieVersion && ieVersion < 10;\r\nlet createElement = bind(document.createElement, document);\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction webkitRenderBugfix(el) {\r\n    // BUGFIX: WebKit has a bug where it does not relayout, and this affects us because scrollbars \r\n    //   are still calculated even though they are not there yet. This is the last resort.\r\n    let oldDisplay = el.style.display;\r\n    el.style.display = 'none';\r\n    //noinspection BadExpressionStatementJS\r\n    el.offsetHeight; // No need to store this anywhere, the reference is enough\r\n    el.style.display = oldDisplay;\r\n    return el;\r\n}\r\n\r\nfunction relativizeElement($el) {\r\n    if (!contains(['relative', 'absolute', 'fixed'], $el.css('position'))) {\r\n        $el.css('position', 'relative');\r\n    }\r\n}\r\n\r\n/** @class DGTable */\r\nlet DGTable = function DGTable () {\r\n    if (!(this instanceof DGTable)) {\r\n        // Allow constructing without `new`\r\n        return new (Function.prototype.bind.apply(\r\n            DGTable,\r\n            [DGTable].concat(Array.prototype.slice.call(arguments, 0))));\r\n    }\r\n\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @type {string}\r\n */\r\nDGTable.VERSION = '@@VERSION';\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @type {string}\r\n */\r\nDGTable.prototype.VERSION = DGTable.VERSION;\r\n\r\n/**\r\n * @constructs\r\n * @param {DGTable.Options?} options - initialization options\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.initialize = function (options) {\r\n    let that = this;\r\n\r\n    options = options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {DGTable.Options}\r\n     * */\r\n    let o = that.o = {};\r\n\r\n    /**\r\n     * @private\r\n     * This is for encapsulating private data */\r\n    let p = that.p = {};\r\n\r\n    /** This is for encapsulating event callback */\r\n    p.events = {};\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * */\r\n    that.el = (options.el && options.el instanceof Element) ? options.el : document.createElement('div');\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * */\r\n    let $el = that.$el = $(that.el);\r\n    \r\n    if (that.el !== options.el) {\r\n        $el.addClass(options.className || 'dgtable-wrapper');\r\n    }\r\n\r\n    // Set control data\r\n    $el\r\n        .data('control', that)\r\n        .data('dgtable', that);\r\n\r\n    // For jQuery.UI or jquery.removeevent\r\n    $el.on('remove', function () {\r\n        that.destroy();\r\n    });\r\n\r\n    p.onMouseMoveResizeAreaBound = bind(this._onMouseMoveResizeArea, this);\r\n    p.onEndDragColumnHeaderBound = bind(this._onEndDragColumnHeader, this);\r\n    p.onTableScrolledHorizontallyBound = bind(this._onTableScrolledHorizontally, this);\r\n\r\n    this.$el.on('dragend', p.onEndDragColumnHeaderBound);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} _tableSkeletonNeedsRendering */\r\n    p.tableSkeletonNeedsRendering = true;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} virtualTable */\r\n    o.virtualTable = options.virtualTable === undefined ? true : !!options.virtualTable;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} rowsBufferSize */\r\n    o.rowsBufferSize = options.rowsBufferSize || 3;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} minColumnWidth */\r\n    o.minColumnWidth = Math.max(options.minColumnWidth || 35, 0);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} resizeAreaWidth */\r\n    o.resizeAreaWidth = options.resizeAreaWidth || 8;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} resizableColumns */\r\n    o.resizableColumns = options.resizableColumns === undefined ? true : !!options.resizableColumns;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} movableColumns */\r\n    o.movableColumns = options.movableColumns === undefined ? true : !!options.movableColumns;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Number} sortableColumns */\r\n    o.sortableColumns = options.sortableColumns === undefined ? 1 : (parseInt(options.sortableColumns, 10) || 1);\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} adjustColumnWidthForSortArrow */\r\n    o.adjustColumnWidthForSortArrow = options.adjustColumnWidthForSortArrow === undefined ? true : !!options.adjustColumnWidthForSortArrow;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} convertColumnWidthsToRelative */\r\n    o.convertColumnWidthsToRelative = options.convertColumnWidthsToRelative === undefined ? false : !!options.convertColumnWidthsToRelative;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} autoFillTableWidth */\r\n    o.autoFillTableWidth = options.autoFillTableWidth === undefined ? false : !!options.autoFillTableWidth;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} cellClasses */\r\n    o.cellClasses = options.cellClasses === undefined ? '' : options.cellClasses;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} resizerClassName */\r\n    o.resizerClassName = options.resizerClassName === undefined ? 'dgtable-resize' : options.resizerClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} tableClassName */\r\n    o.tableClassName = options.tableClassName === undefined ? 'dgtable' : options.tableClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} allowCellPreview */\r\n    o.allowCellPreview = options.allowCellPreview === undefined ? true : options.allowCellPreview;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} allowHeaderCellPreview */\r\n    o.allowHeaderCellPreview = options.allowHeaderCellPreview === undefined ? true : options.allowHeaderCellPreview;\r\n\r\n    /**\r\n     * @private\r\n     * @field {String} cellPreviewClassName */\r\n    o.cellPreviewClassName = options.cellPreviewClassName === undefined ? 'dgtable-cell-preview' : options.cellPreviewClassName;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} cellPreviewAutoBackground */\r\n    o.cellPreviewAutoBackground = options.cellPreviewAutoBackground === undefined ? true : options.cellPreviewAutoBackground;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Function(String,Boolean)Function(a,b)Boolean} onComparatorRequired */\r\n    o.onComparatorRequired = options.onComparatorRequired === undefined ? null : options.onComparatorRequired;\r\n    if (!o.onComparatorRequired && typeof options['comparatorCallback'] === 'function') {\r\n        o.onComparatorRequired = options['comparatorCallback'];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} width */\r\n    o.width = options.width === undefined ? DGTable.Width.NONE : options.width;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} relativeWidthGrowsToFillWidth */\r\n    o.relativeWidthGrowsToFillWidth = options.relativeWidthGrowsToFillWidth === undefined ? true : !!options.relativeWidthGrowsToFillWidth;\r\n\r\n    /**\r\n     * @private\r\n     * @field {Boolean} relativeWidthShrinksToFillWidth */\r\n    o.relativeWidthShrinksToFillWidth = options.relativeWidthShrinksToFillWidth === undefined ? false : !!options.relativeWidthShrinksToFillWidth;\r\n\r\n    this.setCellFormatter(options.cellFormatter);\r\n    this.setHeaderCellFormatter(options.headerCellFormatter);\r\n    this.setFilter(options.filter);\r\n\r\n    /** @private\r\n     * @field {Number} height */\r\n    o.height = options.height;\r\n\r\n    // Prepare columns\r\n    that.setColumns(options.columns || [], false);\r\n\r\n    // Set sorting columns\r\n    let sortColumns = [];\r\n\r\n    if (options.sortColumn) {\r\n\r\n        let tmpSortColumns = options.sortColumn;\r\n\r\n        if (tmpSortColumns && typeof tmpSortColumns !== 'object') {\r\n            tmpSortColumns = [tmpSortColumns];\r\n        }\r\n\r\n        if (tmpSortColumns instanceof Array ||\r\n            typeof tmpSortColumns === 'object') {\r\n\r\n            for (let i = 0, len = tmpSortColumns.length; i < len; i++) {\r\n                let sortColumn = tmpSortColumns[i];\r\n                if (typeof sortColumn === 'string') {\r\n                    sortColumn = { column: sortColumn, descending: false };\r\n                }\r\n                let col = p.columns.get(sortColumn.column);\r\n                sortColumns.push({\r\n                    column: sortColumn.column,\r\n                    comparePath: col.comparePath,\r\n                    descending: sortColumn.descending,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @field {RowCollection} _rows */\r\n    p.rows = new RowCollection({ sortColumn: sortColumns });\r\n    p.rows.onComparatorRequired = function(column, descending){\r\n        if (o.onComparatorRequired) {\r\n            return o.onComparatorRequired(column, descending);\r\n        }\r\n    };\r\n\r\n    /** @private\r\n     * @field {RowCollection} _filteredRows */\r\n    p.filteredRows = null;\r\n\r\n    /*\r\n     Setup hover mechanism.\r\n     We need this to be high performance, as there may be MANY cells to call this on, on creation and destruction.\r\n     Using native events to spare the overhead of jQuery's event binding, and even just the creation of the jQuery collection object.\r\n     */\r\n\r\n    /**\r\n     * @param {MouseEvent} evt\r\n     * @this {HTMLElement}\r\n     * */\r\n    let hoverMouseOverHandler = function (evt) {\r\n        evt = evt || event;\r\n        let relatedTarget = evt.fromElement || evt.relatedTarget;\r\n        if (relatedTarget == this || $.contains(this, relatedTarget)) return;\r\n        if (this['__previewCell'] && (relatedTarget == this['__previewCell'] || $.contains(this['__previewCell'], relatedTarget))) return;\r\n        that._cellMouseOverEvent.call(that, this);\r\n    };\r\n\r\n    /**\r\n     * @param {MouseEvent} evt\r\n     * @this {HTMLElement}\r\n     * */\r\n    let hoverMouseOutHandler = function (evt) {\r\n        evt = evt || event;\r\n        let relatedTarget = evt.toElement || evt.relatedTarget;\r\n        if (relatedTarget == this || $.contains(this, relatedTarget)) return;\r\n        if (this['__previewCell'] && (relatedTarget == this['__previewCell'] || $.contains(this['__previewCell'], relatedTarget))) return;\r\n        that._cellMouseOutEvent.call(that, this);\r\n    };\r\n\r\n    if ('addEventListener' in window) {\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverIn = function (el) {\r\n            if (!el['__hoverIn']) {\r\n                el.addEventListener('mouseover', el['__hoverIn'] = bind(hoverMouseOverHandler, el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._unbindCellHoverIn = function (el) {\r\n            if (el['__hoverIn']) {\r\n                el.removeEventListener('mouseover', el['__hoverIn']);\r\n                el['__hoverIn'] = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._bindCellHoverOut = function (el) {\r\n            if (!el['__hoverOut']) {\r\n                el.addEventListener('mouseout', el['__hoverOut'] = bind(hoverMouseOutHandler, el['__cell'] || el));\r\n            }\r\n            return this;\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._unbindCellHoverOut = function (el) {\r\n            if (el['__hoverOut']) {\r\n                el.removeEventListener('mouseout', el['__hoverOut']);\r\n                el['__hoverOut'] = null;\r\n            }\r\n            return this;\r\n        };\r\n\r\n    } else {\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverIn = function (el) {\r\n            if (!el['__hoverIn']) {\r\n                el.attachEvent('mouseover', el['__hoverIn'] = bind(hoverMouseOverHandler, el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._unbindCellHoverIn = function (el) {\r\n            if (el['__hoverIn']) {\r\n                el.detachEvent('mouseover', el['__hoverIn']);\r\n                el['__hoverIn'] = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * */\r\n        p._bindCellHoverOut = function (el) {\r\n            if (!el['__hoverOut']) {\r\n                el.attachEvent('mouseout', el['__hoverOut'] = bind(hoverMouseOutHandler, el['__cell'] || el));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * @param {HTMLElement} el cell or header-cell\r\n         * @returns {DGTable} self\r\n         * */\r\n        p._unbindCellHoverOut = function (el) {\r\n            if (el['__hoverOut']) {\r\n                el.detachEvent('mouseout', el['__hoverOut']);\r\n                el['__hoverOut'] = null;\r\n            }\r\n            return this;\r\n        };\r\n\r\n    }\r\n};\r\n\r\n/**\r\n * Add an event listener\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.on = function (eventName, callback) {\r\n    let that = this, events = that.p.events;\r\n\r\n    if (typeof callback !== 'function')\r\n        return that;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        events[eventName] = [];\r\n\r\n    events[eventName].push({\r\n        cb: callback,\r\n        once: false,\r\n    });\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Add an event listener for a one shot\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.once = function (eventName, callback) {\r\n    let that = this, events = that.p.events;\r\n\r\n    if (typeof callback !== 'function')\r\n        return that;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        events[eventName] = [];\r\n\r\n    events[eventName].push({\r\n        cb: callback,\r\n        once: true,\r\n    });\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Remove an event listener\r\n * @public\r\n * @expose\r\n * @param {String} eventName\r\n * @param {Function} callback\r\n * @returns {DGTable}\r\n */\r\nDGTable.prototype.off = function (eventName, callback) {\r\n    let events = this.p.events;\r\n\r\n    if (!hasOwnProperty.call(events, eventName))\r\n        return this;\r\n\r\n    let callbacks = events[eventName];\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        let item = callbacks[i];\r\n        if (callback && item.cb !== callback) continue;\r\n        callbacks.splice(i--, 1);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nDGTable.prototype.trigger = function (eventName) {\r\n    let events = this.p.events;\r\n\r\n    if (hasOwnProperty.call(events, eventName)) {\r\n        let callbacks = events[eventName];\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            let item = callbacks[i];\r\n            if (item.once) {\r\n                callbacks.splice(i--, 1);\r\n            }\r\n            item.cb.apply(this, Array.prototype.slice.call(arguments, 1));\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Detect column width mode\r\n * @private\r\n * @param {Number|String} width\r\n * @param {Number} minWidth\r\n * @returns {Object} parsed width\r\n */\r\nDGTable.prototype._parseColumnWidth = function (width, minWidth) {\r\n\r\n    let widthSize = Math.max(0, parseFloat(width)),\r\n        widthMode = ColumnWidthMode.AUTO; // Default\r\n\r\n    if (widthSize > 0) {\r\n        // Well, it's sure is not AUTO, as we have a value\r\n\r\n        if (width == widthSize + '%') {\r\n            // It's a percentage!\r\n\r\n            widthMode = ColumnWidthMode.RELATIVE;\r\n            widthSize /= 100;\r\n        } else if (widthSize > 0 && widthSize < 1) {\r\n            // It's a decimal value, as a relative value!\r\n\r\n            widthMode = ColumnWidthMode.RELATIVE;\r\n        } else {\r\n            // It's an absolute size!\r\n\r\n            if (widthSize < minWidth) {\r\n                widthSize = minWidth;\r\n            }\r\n            widthMode = ColumnWidthMode.ABSOLUTE;\r\n        }\r\n    }\r\n\r\n    return { width: widthSize, mode: widthMode };\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {COLUMN_OPTIONS} columnData\r\n */\r\nDGTable.prototype._initColumnFromData = function(columnData) {\r\n\r\n    let parsedWidth = this._parseColumnWidth(columnData.width, columnData.ignoreMin ? 0 : this.o.minColumnWidth);\r\n\r\n    let col = {\r\n        name: columnData.name,\r\n        label: columnData.label === undefined ? columnData.name : columnData.label,\r\n        width: parsedWidth.width,\r\n        widthMode: parsedWidth.mode,\r\n        resizable: columnData.resizable === undefined ? true : columnData.resizable,\r\n        sortable: columnData.sortable === undefined ? true : columnData.sortable,\r\n        movable: columnData.movable === undefined ? true : columnData.movable,\r\n        visible: columnData.visible === undefined ? true : columnData.visible,\r\n        cellClasses: columnData.cellClasses === undefined ? this.o.cellClasses : columnData.cellClasses,\r\n        ignoreMin: columnData.ignoreMin === undefined ? false : !!columnData.ignoreMin,\r\n    };\r\n\r\n    col.dataPath = columnData.dataPath === undefined ? col.name : columnData.dataPath;\r\n    col.comparePath = columnData.comparePath === undefined ? col.dataPath : columnData.comparePath;\r\n\r\n    if (typeof col.dataPath === 'string') {\r\n        col.dataPath = col.dataPath.split('.');\r\n    }\r\n    if (typeof col.comparePath === 'string') {\r\n        col.comparePath = col.comparePath.split('.');\r\n    }\r\n\r\n    return col;\r\n};\r\n\r\n/**\r\n * Destroy, releasing all memory, events and DOM elements\r\n * @public\r\n * @expose\r\n */\r\nDGTable.prototype.close = DGTable.prototype.remove = DGTable.prototype.destroy = function () {\r\n\r\n    let that = this,\r\n        p = that.p || {},\r\n        $el = that.$el;\r\n\r\n    if (that.__removed) {\r\n        return that;\r\n    }\r\n\r\n    if (p.$resizer) {\r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n    }\r\n\r\n    if (p.$tbody) {\r\n        let trs = p.$tbody[0].childNodes;\r\n        for (let i = 0, len = trs.length; i < len; i++) {\r\n            that.trigger('rowdestroy', trs[i]);\r\n        }\r\n    }\r\n\r\n    // Using quotes for __super__ because Google Closure Compiler has a bug...\r\n\r\n    this._destroyHeaderCells()._unbindCellEventsForTable();\r\n    if (p.$table) {\r\n        p.$table.empty();\r\n    }\r\n    if (p.$tbody) {\r\n        p.$tbody.empty();\r\n    }\r\n\r\n    if (p.workerListeners) {\r\n        for (let j = 0; j < p.workerListeners.length; j++) {\r\n            let worker = p.workerListeners[j];\r\n            worker.worker.removeEventListener('message', worker.listener, false);\r\n        }\r\n        p.workerListeners.length = 0;\r\n    }\r\n\r\n    p.rows.length = p.columns.length = 0;\r\n\r\n    if (p._deferredRender) {\r\n        clearTimeout(p._deferredRender);\r\n    }\r\n\r\n    // Cleanup\r\n    for (let prop in that) {\r\n        if (hasOwnProperty.call(that, prop)) {\r\n            that[prop] = null;\r\n        }\r\n    }\r\n\r\n    that.__removed = true;\r\n\r\n    if ($el) {\r\n        $el.remove();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._unbindCellEventsForTable = function() {\r\n    const p = this.p;\r\n    \r\n    if (p.headerRow) {\r\n        for (let i = 0, rows = p.headerRow.childNodes, rowCount = rows.length; i < rowCount; i++) {\r\n            let rowToClean = rows[i];\r\n            for (let j = 0, cells = rowToClean.childNodes, cellCount = cells.length; j < cellCount; j++) {\r\n                p._unbindCellHoverIn(cells[j]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (p.tbody) {\r\n        for (let i = 0, rows = p.tbody.childNodes, rowCount = rows.length; i < rowCount; i++) {\r\n            this._unbindCellEventsForRow(rows[i]);\r\n        }\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} rowToClean\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._unbindCellEventsForRow = function(rowToClean) {\r\n    const p = this.p;\r\n    for (let i = 0, cells = rowToClean.childNodes, cellCount = cells.length; i < cellCount; i++) {\r\n        p._unbindCellHoverIn(cells[i]);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.render = function () {\r\n    const o = this.o, p = this.p;\r\n\r\n    if (!this.el.offsetParent) {\r\n        if (!p._deferredRender) {\r\n            p._deferredRender = setTimeout(() => {\r\n                p._deferredRender = null;\r\n                if (!this.__removed && this.el.offsetParent) {\r\n                    this.render();\r\n                }\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    let renderedRows, rowCount;\r\n\r\n    if (p.tableSkeletonNeedsRendering === true) {\r\n        p.tableSkeletonNeedsRendering = false;\r\n\r\n        if (o.width == DGTable.Width.AUTO) {\r\n            // We need to do this to return to the specified widths instead. The arrows added to the column widths...\r\n            this._clearSortArrows();\r\n        }\r\n\r\n        let lastScrollTop = p.table ? p.table.scrollTop : 0,\r\n            lastScrollLeft = p.table ? p.table.scrollLeft : 0;\r\n\r\n        this._renderSkeletonBase()\r\n            ._renderSkeletonBody()\r\n            .tableWidthChanged(true, false) // Take this chance to calculate required column widths\r\n            ._renderSkeletonHeaderCells();\r\n            \r\n        if (!o.virtualTable) {\r\n            let rows = p.filteredRows || p.rows;\r\n            rowCount = rows.length;\r\n            renderedRows = this.renderRows(0, rowCount - 1);\r\n            p.$tbody.html('').append(renderedRows);\r\n            this._updateLastCellWidthFromScrollbar(true);\r\n        } else {\r\n            this._updateLastCellWidthFromScrollbar(); // Detect vertical scrollbar height\r\n        }\r\n\r\n        p.table.scrollTop = lastScrollTop;\r\n        p.table.scrollLeft = lastScrollLeft;\r\n        p.header.scrollLeft = lastScrollLeft;\r\n\r\n        this._updateTableWidth(true);\r\n\r\n        // Show sort arrows\r\n        for (let i = 0; i < p.rows.sortColumn.length; i++) {\r\n            this._showSortArrow(p.rows.sortColumn[i].column, p.rows.sortColumn[i].descending);\r\n        }\r\n        if (o.adjustColumnWidthForSortArrow && p.rows.sortColumn.length) {\r\n            this.tableWidthChanged(true);\r\n        } else if (!o.virtualTable) {\r\n            this.tableWidthChanged();\r\n        }\r\n\r\n        this.trigger('renderskeleton');\r\n\r\n        if (o.virtualTable) {\r\n            p.$table.on('scroll', bind(this._onVirtualTableScrolled, this));\r\n            this.render();\r\n        }\r\n\r\n    } else if (o.virtualTable) {\r\n        rowCount = (p.filteredRows || p.rows).length;\r\n        let scrollTop = p.table.scrollTop;\r\n        let firstVisible = Math.floor((scrollTop - p.virtualRowHeightFirst) / p.virtualRowHeight) + 1 - o.rowsBufferSize;\r\n        let lastVisible = Math.ceil(((scrollTop - p.virtualRowHeightFirst + p.visibleHeight) / p.virtualRowHeight)) + o.rowsBufferSize;\r\n        if (firstVisible < 0) firstVisible = 0;\r\n        if (lastVisible >= rowCount) {\r\n            lastVisible = rowCount - 1;\r\n        }\r\n\r\n        let oldFirstVisible = -1, oldLastVisible = -1;\r\n        let tbodyChildNodes = p.tbody.childNodes;\r\n        if (tbodyChildNodes.length) {\r\n            oldFirstVisible = tbodyChildNodes[0]['rowIndex'];\r\n            oldLastVisible = tbodyChildNodes[tbodyChildNodes.length - 1]['rowIndex'];\r\n        }\r\n\r\n        let countToRemove;\r\n\r\n        if (oldFirstVisible !== -1 && oldFirstVisible < firstVisible) {\r\n            countToRemove = Math.min(oldLastVisible + 1, firstVisible) - oldFirstVisible;\r\n            for (let i = 0; i < countToRemove; i++) {\r\n                this.trigger('rowdestroy', tbodyChildNodes[0]);\r\n                this._unbindCellEventsForRow(tbodyChildNodes[0]);\r\n                p.tbody.removeChild(tbodyChildNodes[0]);\r\n            }\r\n            oldFirstVisible += countToRemove;\r\n            if (oldFirstVisible > oldLastVisible) {\r\n                oldFirstVisible = oldLastVisible = -1;\r\n            }\r\n        } else if (oldLastVisible !== -1 && oldLastVisible > lastVisible) {\r\n            countToRemove = oldLastVisible - Math.max(oldFirstVisible - 1, lastVisible);\r\n            for (let i = 0; i < countToRemove; i++) {\r\n                this.trigger('rowdestroy', tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n                this._unbindCellEventsForRow(tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n                p.tbody.removeChild(tbodyChildNodes[tbodyChildNodes.length - 1]);\r\n            }\r\n            if (oldLastVisible < oldFirstVisible) {\r\n                oldFirstVisible = oldLastVisible = -1;\r\n            }\r\n        }\r\n\r\n        if (firstVisible < oldFirstVisible) {\r\n            renderedRows = this.renderRows(firstVisible, Math.min(lastVisible, oldFirstVisible - 1));\r\n            p.$tbody.prepend(renderedRows);\r\n        }\r\n        if (lastVisible > oldLastVisible || oldLastVisible === -1) {\r\n            renderedRows = this.renderRows(oldLastVisible === -1 ? firstVisible : oldLastVisible + 1, lastVisible);\r\n            p.$tbody.append(renderedRows);\r\n        }\r\n    }\r\n    this.trigger('render');\r\n    return this;\r\n};\r\n\r\n/**\r\n * Forces a full render of the table\r\n * @public\r\n * @expose\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.clearAndRender = function (render) {\r\n    let p = this.p;\r\n\r\n    p.tableSkeletonNeedsRendering = true;\r\n\r\n    if (render === undefined || render) {\r\n        this.render();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Render rows\r\n * @private\r\n * @param {Number} first first row to render\r\n * @param {Number} last last row to render\r\n * @returns {DocumentFragment} fragment containing all rendered rows\r\n */\r\nDGTable.prototype.renderRows = function (first, last) {\r\n    const o = this.o, p = this.p;\r\n        \r\n    let tableClassName = o.tableClassName,\r\n        rowClassName = tableClassName + '-row',\r\n        cellClassName = tableClassName + '-cell',\r\n        rows = p.filteredRows || p.rows,\r\n        isDataFiltered = !!p.filteredRows,\r\n        allowCellPreview = o.allowCellPreview,\r\n        visibleColumns = p.visibleColumns,\r\n        isVirtual = o.virtualTable,\r\n        virtualRowHeightFirst = p.virtualRowHeightFirst,\r\n        virtualRowHeight = p.virtualRowHeight,\r\n        top,\r\n        physicalRowIndex;\r\n\r\n    let colCount = visibleColumns.length;\r\n    for (let colIndex = 0, column; colIndex < colCount; colIndex++) {\r\n        column = visibleColumns[colIndex];\r\n        column._finalWidth = (column.actualWidthConsideringScrollbarWidth || column.actualWidth);\r\n    }\r\n\r\n    let bodyFragment = document.createDocumentFragment();\r\n\r\n    let isRtl = this._isTableRtl(),\r\n        virtualRowXAttr = isRtl ? 'right' : 'left';\r\n\r\n    for (let i = first, rowCount = rows.length;\r\n         i < rowCount && i <= last;\r\n         i++) {\r\n\r\n        let rowData = rows[i];\r\n        physicalRowIndex = isDataFiltered ? rowData['__i'] : i;\r\n\r\n        let row = createElement('div');\r\n        row.className = rowClassName;\r\n        row['rowIndex'] = i;\r\n        row['physicalRowIndex'] = physicalRowIndex;\r\n\r\n        for (let colIndex = 0; colIndex < colCount; colIndex++) {\r\n            let column = visibleColumns[colIndex];\r\n            let cell = createElement('div');\r\n            cell['columnName'] = column.name;\r\n            cell.setAttribute('data-column', column.name);\r\n            cell.className = cellClassName;\r\n            cell.style.width = column._finalWidth + 'px';\r\n            if (column.cellClasses) cell.className += ' ' + column.cellClasses;\r\n            if (allowCellPreview) {\r\n                p._bindCellHoverIn(cell);\r\n            }\r\n            \r\n            let cellInner = cell.appendChild(createElement('div'));\r\n            cellInner.innerHTML = this._getHtmlForCell(rowData, column);\r\n            \r\n            row.appendChild(cell);\r\n        }\r\n\r\n        if (isVirtual) {\r\n            top = i > 0 ? virtualRowHeightFirst + (i - 1) * virtualRowHeight : 0;\r\n            row.style.position = 'absolute';\r\n            row.style[virtualRowXAttr] = 0;\r\n            row.style.top = top + 'px';\r\n        }\r\n\r\n        bodyFragment.appendChild(row);\r\n\r\n        this.trigger('rowcreate', i, physicalRowIndex, row, rowData);\r\n    }\r\n\r\n    return bodyFragment;\r\n};\r\n\r\n/**\r\n * Calculate virtual table height for scrollbar\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._calculateVirtualHeight = function () {\r\n    let p = this.p;\r\n\r\n    if (p.tbody) {\r\n        let rowCount = (p.filteredRows || p.rows).length;\r\n        let height = p.virtualRowHeight * rowCount;\r\n        if (rowCount) {\r\n            height += (p.virtualRowHeightFirst - p.virtualRowHeight);\r\n            height += (p.virtualRowHeightLast - p.virtualRowHeight);\r\n        }\r\n        // At least 1 pixel - to show scrollers correctly.\r\n        if (height < 1) {\r\n            height = 1;\r\n        }\r\n        p.tbody.style.height = height + 'px';\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculate the size required for the table body width (which is the row's width)\r\n * @private\r\n * @returns {Number} calculated width\r\n */\r\nDGTable.prototype._calculateTbodyWidth = function () {\r\n    const p = this.p;\r\n        \r\n    let tableClassName = this.o.tableClassName,\r\n        rowClassName = tableClassName + '-row',\r\n        cellClassName = tableClassName + '-cell',\r\n        visibleColumns = p.visibleColumns,\r\n        colCount = visibleColumns.length,\r\n        cell,\r\n        cellInner,\r\n        colIndex,\r\n        column;\r\n\r\n    let $row = $('<div>').addClass(rowClassName).css('float', 'left');\r\n    let sumActualWidth = 0;\r\n\r\n    for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n        column = visibleColumns[colIndex];\r\n        cell = createElement('div');\r\n        cell.className = cellClassName;\r\n        cell.style.width = column.actualWidth + 'px';\r\n        if (column.cellClasses) cell.className += ' ' + column.cellClasses;\r\n        cellInner = cell.appendChild(createElement('div'));\r\n        $row.append(cell);\r\n        sumActualWidth += column.actualWidth;\r\n    }\r\n\r\n    let $thisWrapper = $('<div>')\r\n        .addClass(this.el.className)\r\n        .css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px', 'float': 'left', width: '1px', overflow: 'hidden' })\r\n        .append(\r\n            $('<div>').addClass(tableClassName).append(\r\n                $('<div>').addClass(tableClassName + '-body').css('width', sumActualWidth + 10000).append(\r\n                    $row\r\n                )\r\n            )\r\n        );\r\n\r\n    $thisWrapper.appendTo(document.body);\r\n\r\n    let fractionTest = $('<div style=\"border:1.5px solid #000;width:0;height:0;position:absolute;left:0;top:-9999px\">').appendTo(document.body);\r\n    let hasFractions = parseFloat(fractionTest.css('border-width'));\r\n    hasFractions = Math.round(hasFractions) != hasFractions;\r\n    fractionTest.remove();\r\n\r\n    let width = CssUtil.outerWidth($row);\r\n    width -= p.scrollbarWidth || 0;\r\n\r\n    if (hasFractions) {\r\n        width++;\r\n    }\r\n\r\n    $thisWrapper.remove();\r\n    return width;\r\n};\r\n\r\n/**\r\n * Sets the columns of the table\r\n * @public\r\n * @expose\r\n * @param {COLUMN_OPTIONS[]} columns - Column definitions array\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumns = function (columns, render) {\r\n    const p = this.p;\r\n        \r\n    columns = columns || [];\r\n\r\n    let normalizedCols = new ColumnCollection();\r\n    for (let i = 0, order = 0; i < columns.length; i++) {\r\n\r\n        let columnData = columns[i];\r\n        let normalizedColumn = this._initColumnFromData(columnData);\r\n\r\n        if (columnData.order !== undefined) {\r\n            if (columnData.order > order) {\r\n                order = columnData.order + 1;\r\n            }\r\n            normalizedColumn.order = columnData.order;\r\n        } else {\r\n            normalizedColumn.order = order++;\r\n        }\r\n\r\n        normalizedCols.push(normalizedColumn);\r\n    }\r\n    normalizedCols.normalizeOrder();\r\n\r\n    p.columns = normalizedCols;\r\n    p.visibleColumns = normalizedCols.getVisibleColumns();\r\n    \r\n    this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Add a column to the table\r\n * @public\r\n * @expose\r\n * @param {COLUMN_OPTIONS} columnData column properties\r\n * @param {String|Number} [before=-1] column name or order to be inserted before\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.addColumn = function (columnData, before, render) {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    if (columnData && !columns.get(columnData.name)) {\r\n        let beforeColumn = null;\r\n        if (before !== undefined) {\r\n            beforeColumn = columns.get(before) || columns.getByOrder(before);\r\n        }\r\n\r\n        let column = this._initColumnFromData(columnData);\r\n        column.order = beforeColumn ? beforeColumn.order : (columns.getMaxOrder() + 1);\r\n\r\n        for (let i = columns.getMaxOrder(), to = column.order; i >= to ; i--) {\r\n            let col = columns.getByOrder(i);\r\n            if (col) {\r\n                col.order++;\r\n            }\r\n        }\r\n\r\n        columns.push(column);\r\n        columns.normalizeOrder();\r\n\r\n        p.visibleColumns = columns.getVisibleColumns();\r\n        this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n        this.trigger('addcolumn', column.name);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Remove a column from the table\r\n * @public\r\n * @expose\r\n * @param {String} column column name\r\n * @param {Boolean=true} render - Should render now?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeColumn = function (column, render) {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    let colIdx = columns.indexOf(column);\r\n    if (colIdx > -1) {\r\n        columns.splice(colIdx, 1);\r\n        columns.normalizeOrder();\r\n\r\n        p.visibleColumns = columns.getVisibleColumns();\r\n        this._ensureVisibleColumns().clearAndRender(render);\r\n\r\n        this.trigger('removecolumn', column);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a new cell formatter.\r\n * @public\r\n * @expose\r\n * @param {function(value: *, columnName: String, row: Object):String|null} [formatter=null] - The cell formatter. Should return an HTML.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setCellFormatter = function (formatter) {\r\n    /**\r\n     * @private\r\n     * @field {Function} cellFormatter */\r\n    this.o.cellFormatter = formatter || function (val) {\r\n        return val;\r\n    };\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sets a new header cell formatter.\r\n * @public\r\n * @expose\r\n * @param {function(label: String, columnName: String):String|null} [formatter=null] - The cell formatter. Should return an HTML.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setHeaderCellFormatter = function (formatter) {\r\n    /**\r\n     * @private\r\n     * @field {Function} headerCellFormatter */\r\n    this.o.headerCellFormatter = formatter || function (val) {\r\n        return val;\r\n    };\r\n        \r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {function(row:Object,args:Object):Boolean|null} [filterFunc=null] - The filter function to work with filters. Default is a by-colum filter.\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setFilter = function (filterFunc) {\r\n    /** @private\r\n     * @field {Function} filter */\r\n    this.o.filter = filterFunc;\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Object|null} args - Options to pass to the filter function\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.filter = function (args) {\r\n    const p = this.p;\r\n    \r\n    let filterFunc = this.o.filter || ByColumnFilter;\r\n    \r\n    // Deprecated use of older by-column filter\r\n    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'string') {\r\n        args = {\r\n            column: arguments[0],\r\n            keyword: arguments[1],\r\n            caseSensitive: arguments[2],\r\n        };\r\n    }\r\n    \r\n    let hadFilter = !!p.filteredRows;\r\n    if (p.filteredRows) {\r\n        p.filteredRows = null; // Allow releasing array memory now\r\n    }\r\n\r\n    // Shallow-clone the args, as the filter function may want to modify it for keeping state\r\n    p.filterArgs = (typeof args === 'object' && !Array.isArray(args)) ? $.extend({}, args) : args;\r\n    p.filteredRows = p.rows.filteredCollection(filterFunc, args);\r\n\r\n    if (hadFilter || p.filteredRows) {\r\n        this.clearAndRender();\r\n        this.trigger('filter', args);\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._refilter = function() {\r\n    const p = this.p;\r\n\r\n    if (p.filteredRows && p.filterArgs) {\r\n        let filterFunc = this.o.filter || ByColumnFilter;\r\n        p.filteredRows = p.rows.filteredCollection(filterFunc, p.filterArgs);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set a new label to a column\r\n * @public\r\n * @expose\r\n * @param {String} column Name of the column\r\n * @param {String} label New label for the column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnLabel = function (column, label) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        col.label = label === undefined ? col.name : label;\r\n\r\n        if (col.element) {\r\n            for (let i = 0; i < col.element[0].firstChild.childNodes.length; i++) {\r\n                let node = col.element[0].firstChild.childNodes[i];\r\n                if (node.nodeType === 3) {\r\n                    node.textContent = col.label;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Move a column to a new position\r\n * @public\r\n * @expose\r\n * @param {String|Number} src Name or position of the column to be moved\r\n * @param {String|Number} dest Name of the column currently in the desired position, or the position itself\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.moveColumn = function (src, dest) {\r\n    const o = this.o, p = this.p;\r\n        \r\n    let columns = p.columns,\r\n        col, destCol;\r\n\r\n    if (typeof src === 'string') {\r\n        col = columns.get(src);\r\n    } else if (typeof src === 'number') {\r\n        col = p.visibleColumns[src];\r\n    }\r\n    if (typeof dest === 'string') {\r\n        destCol = columns.get(dest);\r\n    } else if (typeof dest === 'number') {\r\n        destCol = p.visibleColumns[dest];\r\n    }\r\n\r\n    if (col && destCol && src !== dest) {\r\n        let srcOrder = col.order, destOrder = destCol.order;\r\n\r\n        p.visibleColumns = columns.moveColumn(col, destCol).getVisibleColumns();\r\n        this._ensureVisibleColumns();\r\n\r\n        if (o.virtualTable) {\r\n            this.clearAndRender()\r\n                ._updateLastCellWidthFromScrollbar(true);\r\n        } else {\r\n            let headerCell = p.$headerRow.find('>div.' + o.tableClassName + '-header-cell');\r\n            let beforePos = srcOrder < destOrder ? destOrder + 1 : destOrder,\r\n                fromPos = srcOrder;\r\n            headerCell[0].parentNode.insertBefore(headerCell[fromPos], headerCell[beforePos]);\r\n\r\n            let srcWidth = p.visibleColumns[srcOrder];\r\n            srcWidth = (srcWidth.actualWidthConsideringScrollbarWidth || srcWidth.actualWidth) + 'px';\r\n            let destWidth = p.visibleColumns[destOrder];\r\n            destWidth = (destWidth.actualWidthConsideringScrollbarWidth || destWidth.actualWidth) + 'px';\r\n\r\n            let tbodyChildren = p.$tbody[0].childNodes;\r\n            for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n                let row = tbodyChildren[i];\r\n                if (row.nodeType !== 1) continue;\r\n                row.insertBefore(row.childNodes[fromPos], row.childNodes[beforePos]);\r\n                row.childNodes[destOrder].firstChild.style.width = destWidth;\r\n                row.childNodes[srcOrder].firstChild.style.width = srcWidth;\r\n            }\r\n        }\r\n\r\n        this.trigger('movecolumn', col.name, srcOrder, destOrder);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Sort the table\r\n * @public\r\n * @expose\r\n * @param {String?} column Name of the column to sort on (or null to remove sort arrow)\r\n * @param {Boolean=} descending Sort in descending order\r\n * @param {Boolean} [add=false] Should this sort be on top of the existing sort? (For multiple column sort)\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.sort = function (column, descending, add) {\r\n    const o = this.o, p = this.p;\r\n    \r\n    let columns = p.columns,\r\n        col = columns.get(column);\r\n\r\n    let currentSort = p.rows.sortColumn;\r\n        \r\n    if (col) {\r\n\r\n        if (currentSort.length && currentSort[currentSort.length - 1].column == column) {\r\n            // Recognize current descending mode, if currently sorting by this column\r\n            descending = descending === undefined ? !currentSort[currentSort.length - 1].descending : descending;\r\n        }\r\n\r\n        if (add) { // Add the sort to current sort stack\r\n\r\n            for (let i = 0; i < currentSort.length; i++) {\r\n                if (currentSort[i].column == col.name) {\r\n                    if (i < currentSort.length - 1) {\r\n                        currentSort.length = 0;\r\n                    } else {\r\n                        currentSort.splice(currentSort.length - 1, 1);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if ((o.sortableColumns > 0 /* allow manual sort when disabled */ && currentSort.length >= o.sortableColumns) || currentSort.length >= p.visibleColumns.length) {\r\n                currentSort.length = 0;\r\n            }\r\n\r\n        } else { // Sort only by this column\r\n            currentSort.length = 0;\r\n        }\r\n\r\n        // Default to ascending\r\n        descending = descending === undefined ? false : descending;\r\n\r\n        // Set the required column in the front of the stack\r\n        currentSort.push({\r\n            column: col.name,\r\n            comparePath: col.comparePath,\r\n            descending: !!descending,\r\n        });\r\n    } else {\r\n        currentSort.length = 0;\r\n    }\r\n\r\n    this._clearSortArrows();\r\n\r\n    for (let i = 0; i < currentSort.length; i++) {\r\n        this._showSortArrow(currentSort[i].column, currentSort[i].descending);\r\n    }\r\n\r\n    if (o.adjustColumnWidthForSortArrow && !o._tableSkeletonNeedsRendering) {\r\n        this.tableWidthChanged(true);\r\n    }\r\n\r\n    if (o.virtualTable) {\r\n        while (p.tbody && p.tbody.firstChild) {\r\n            this.trigger('rowdestroy', p.tbody.firstChild);\r\n            this._unbindCellEventsForRow(p.tbody.firstChild);\r\n            p.tbody.removeChild(p.tbody.firstChild);\r\n        }\r\n    } else {\r\n        p.tableSkeletonNeedsRendering = true;\r\n    }\r\n\r\n    p.rows.sortColumn = currentSort;\r\n    \r\n    if (currentSort.length) {\r\n        p.rows.sort(!!p.filteredRows);\r\n        if (p.filteredRows) {\r\n            p.filteredRows.sort(!!p.filteredRows);\r\n        }\r\n    }\r\n\r\n    // Build output for event, with option names that will survive compilers\r\n    let sorts = [];\r\n    for (let i = 0; i < currentSort.length; i++) {\r\n        sorts.push({ 'column': currentSort[i].column, 'descending': currentSort[i].descending });\r\n    }\r\n    this.trigger('sort', sorts);\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Re-sort the table using current sort specifiers\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.resort = function () {\r\n    const p = this.p;\r\n    let columns = p.columns;\r\n\r\n    let currentSort = p.rows.sortColumn;\r\n    if (currentSort.length) {\r\n        \r\n        for (let i = 0; i < currentSort.length; i++) {\r\n            if (!columns.get(currentSort[i].column)) {\r\n                currentSort.splice(i--, 1);\r\n            }\r\n        }\r\n        \r\n        p.rows.sortColumn = currentSort;\r\n        if (currentSort.length) {\r\n            p.rows.sort(!!p.filteredRows);\r\n            if (p.filteredRows) {\r\n                p.filteredRows.sort(!!p.filteredRows);\r\n            }\r\n        }\r\n\r\n        // Build output for event, with option names that will survive compilers\r\n        let sorts = [];\r\n        for (let i = 0; i < currentSort.length; i++) {\r\n            sorts.push({ 'column': currentSort[i].column, 'descending': currentSort[i].descending });\r\n        }\r\n        this.trigger('sort', sorts);\r\n    }\r\n    \r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Make sure there's at least one column visible\r\n * @private\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._ensureVisibleColumns = function () {\r\n    const p = this.p;\r\n\r\n    if (p.visibleColumns.length === 0 && p.columns.length) {\r\n        p.columns[0].visible = true;\r\n        p.visibleColumns.push(p.columns[0]);\r\n        this.trigger('showcolumn', p.columns[0].name);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Show or hide a column\r\n * @public\r\n * @expose\r\n * @param {String} column Unique column name\r\n * @param {Boolean} visible New visibility mode for the column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnVisible = function (column, visible) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n\r\n    //noinspection PointlessBooleanExpressionJS\r\n    visible = !!visible;\r\n\r\n    if (col && !!col.visible != visible) {\r\n        col.visible = visible;\r\n        p.visibleColumns = p.columns.getVisibleColumns();\r\n        this.trigger(visible ? 'showcolumn' : 'hidecolumn', column);\r\n        this._ensureVisibleColumns();\r\n        this.clearAndRender();\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the visibility mode of a column\r\n * @public\r\n * @expose\r\n * @returns {Boolean} true if visible\r\n */\r\nDGTable.prototype.isColumnVisible = function (column) {\r\n    const p = this.p;\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return col.visible;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * Globally set the minimum column width\r\n * @public\r\n * @expose\r\n * @param {Number} minColumnWidth Minimum column width\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setMinColumnWidth = function (minColumnWidth) {\r\n    let o = this.o;\r\n    minColumnWidth = Math.max(minColumnWidth, 0);\r\n    if (o.minColumnWidth != minColumnWidth) {\r\n        o.minColumnWidth = minColumnWidth;\r\n        this.tableWidthChanged(true);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the current minimum column width\r\n * @public\r\n * @expose\r\n * @returns {Number} Minimum column width\r\n */\r\nDGTable.prototype.getMinColumnWidth = function () {\r\n    return this.o.minColumnWidth;\r\n};\r\n\r\n/**\r\n * Set the limit on concurrent columns sorted\r\n * @public\r\n * @expose\r\n * @param {Number} sortableColumns How many sortable columns to allow?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setSortableColumns = function (sortableColumns) {\r\n    const p = this.p, o = this.o;\r\n    if (o.sortableColumns != sortableColumns) {\r\n        o.sortableColumns = sortableColumns;\r\n        if (p.$table) {\r\n            let headerCell = p.$headerRow.find('>div.' + o.tableClassName + '-header-cell');\r\n            for (let i = 0; i < headerCell.length; i++) {\r\n                $(headerCell[0])[(o.sortableColumns > 0 && p.visibleColumns[i].sortable) ? 'addClass' : 'removeClass']('sortable');\r\n            }\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the limit on concurrent columns sorted\r\n * @public\r\n * @expose\r\n * @returns {Number} How many sortable columns are allowed?\r\n */\r\nDGTable.prototype.getSortableColumns = function () {\r\n    return this.o.sortableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Boolean?} movableColumns=true are the columns movable?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setMovableColumns = function (movableColumns) {\r\n    let o = this.o;\r\n    //noinspection PointlessBooleanExpressionJS\r\n    movableColumns = movableColumns === undefined ? true : !!movableColumns;\r\n    if (o.movableColumns != movableColumns) {\r\n        o.movableColumns = movableColumns;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} are the columns movable?\r\n */\r\nDGTable.prototype.getMovableColumns = function () {\r\n    return this.o.movableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {Boolean} resizableColumns=true are the columns resizable?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setResizableColumns = function (resizableColumns) {\r\n    let o = this.o;\r\n    //noinspection PointlessBooleanExpressionJS\r\n    resizableColumns = resizableColumns === undefined ? true : !!resizableColumns;\r\n    if (o.resizableColumns != resizableColumns) {\r\n        o.resizableColumns = resizableColumns;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} are the columns resizable?\r\n */\r\nDGTable.prototype.getResizableColumns = function () {\r\n    return this.o.resizableColumns;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {{function(string,boolean):{function(a:*,b:*):boolean}}} comparatorCallback a callback function that returns the comparator for a specific column\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setComparatorCallback = function (comparatorCallback) {\r\n    let o = this.o;\r\n    if (o.onComparatorRequired != comparatorCallback) {\r\n        o.onComparatorRequired = comparatorCallback;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Set a new width to a column\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column to resize\r\n * @param {Number|String} width new column as pixels, or relative size (0.5, 50%)\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setColumnWidth = function (column, width) {\r\n\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n\r\n    let parsedWidth = this._parseColumnWidth(width, col.ignoreMin ? 0 : this.o.minColumnWidth);\r\n\r\n    if (col) {\r\n        let oldWidth = this._serializeColumnWidth(col);\r\n\r\n        col.width = parsedWidth.width;\r\n        col.widthMode = parsedWidth.mode;\r\n\r\n        let newWidth = this._serializeColumnWidth(col);\r\n\r\n        if (oldWidth != newWidth) {\r\n            this.tableWidthChanged(true); // Calculate actual sizes\r\n        }\r\n\r\n        this.trigger('columnwidth', col.name, oldWidth, newWidth);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column\r\n * @returns {String|null} the serialized width of the specified column, or null if column not found\r\n */\r\nDGTable.prototype.getColumnWidth = function (column) {\r\n    const p = this.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return this._serializeColumnWidth(col);\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @param {String} column name of the column\r\n * @returns {SERIALIZED_COLUMN|null} configuration for all columns\r\n */\r\nDGTable.prototype.getColumnConfig = function (column) {\r\n    const p = this.p;\r\n    let col = p.columns.get(column);\r\n    if (col) {\r\n        return {\r\n            'order': col.order,\r\n            'width': this._serializeColumnWidth(col),\r\n            'visible': col.visible,\r\n            'label': col.label,\r\n        };\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Returns a config object for the columns, to allow saving configurations for next time...\r\n * @public\r\n * @expose\r\n * @returns {Object} configuration for all columns\r\n */\r\nDGTable.prototype.getColumnsConfig = function () {\r\n    const p = this.p;\r\n\r\n    let config = {};\r\n    for (let i = 0; i < p.columns.length; i++) {\r\n        config[p.columns[i].name] = this.getColumnConfig(p.columns[i].name);\r\n    }\r\n    return config;\r\n};\r\n\r\n/**\r\n * Returns an array of the currently sorted columns\r\n * @public\r\n * @expose\r\n * @returns {Array.<SERIALIZED_COLUMN_SORT>} configuration for all columns\r\n */\r\nDGTable.prototype.getSortedColumns = function () {\r\n    const p = this.p;\r\n\r\n    let sorted = [];\r\n    for (let i = 0; i < p.rows.sortColumn.length; i++) {\r\n        let sort = p.rows.sortColumn[i];\r\n        sorted.push({ column: sort.column, descending: sort.descending });\r\n    }\r\n    return sorted;\r\n};\r\n\r\n/**\r\n * Returns the HTML string for a specific cell. Can be used externally for special cases (i.e. when setting a fresh HTML in the cell preview through the callback).\r\n * @public\r\n * @expose\r\n * @param {Number} row - index of the row\r\n * @param {String} columnName - name of the column\r\n * @returns {String} HTML string for the specified cell\r\n */\r\nDGTable.prototype.getHtmlForCell = function (row, columnName) {\r\n    const p = this.p;\r\n\r\n    if (row < 0 || row > p.rows.length - 1) return null;\r\n    let column = p.columns.get(columnName);\r\n    if (!column) return null;\r\n    let rowData = p.rows[row];\r\n\r\n    let dataPath = column.dataPath;\r\n    let colValue = rowData[dataPath[0]];\r\n    for (let dataPathIndex = 1; dataPathIndex < dataPath.length; dataPathIndex++) {\r\n        colValue = colValue[dataPath[dataPathIndex]];\r\n    }\r\n\r\n    let content = this.o.cellFormatter(colValue, column.name, rowData);\r\n    if (content === undefined) {\r\n        content = '';\r\n    }\r\n    return content;\r\n};\r\n\r\n/**\r\n * Returns the HTML string for a specific cell. Can be used externally for special cases (i.e. when setting a fresh HTML in the cell preview through the callback).\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - row data\r\n * @param {Object} column - column data\r\n * @returns {String} HTML string for the specified cell\r\n */\r\nDGTable.prototype._getHtmlForCell = function (rowData, column) {\r\n    let dataPath = column.dataPath;\r\n    let colValue = rowData[dataPath[0]];\r\n    for (let dataPathIndex = 1; dataPathIndex < dataPath.length; dataPathIndex++) {\r\n        if (colValue == null) break;\r\n        colValue = colValue && colValue[dataPath[dataPathIndex]];\r\n    }\r\n\r\n    let content = this.o.cellFormatter(colValue, column.name, rowData);\r\n    if (content === undefined) {\r\n        content = '';\r\n    }\r\n    \r\n    return content;\r\n};\r\n\r\n/**\r\n * Returns the y pos of a row by index\r\n * @public\r\n * @expose\r\n * @param {Number} rowIndex - index of the row\r\n * @returns {Number|null} Y pos\r\n */\r\nDGTable.prototype.getRowYPos = function (rowIndex) {\r\n    const p = this.p;\r\n    \r\n    if (this.o.virtualTable) {\r\n        return rowIndex > 0 ? p.virtualRowHeightFirst + (rowIndex - 1) * p.virtualRowHeight : 0;\r\n    } else {\r\n        let row = p.tbody.childNodes[rowIndex];\r\n        return row ? row.offsetTop : null;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the row data for a specific row\r\n * @public\r\n * @expose\r\n * @param {Number} row index of the row\r\n * @returns {Object} Row data\r\n */\r\nDGTable.prototype.getDataForRow = function (row) {\r\n    const p = this.p;\r\n\r\n    if (row < 0 || row > p.rows.length - 1) return null;\r\n    return p.rows[row];\r\n};\r\n\r\n/**\r\n * Gets the number of rows\r\n * @public\r\n * @expose\r\n * @returns {Number} Row count\r\n */\r\nDGTable.prototype.getRowCount = function () {\r\n    const p = this.p;\r\n    return p.rows ? p.rows.length : 0;\r\n};\r\n\r\n/**\r\n * Returns the physical row index for specific row\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - Row data to find\r\n * @returns {Number} Row index\r\n */\r\nDGTable.prototype.getIndexForRow = function (rowData) {\r\n    const p = this.p;\r\n    return p.rows.indexOf(rowData);\r\n};\r\n\r\n/**\r\n * Gets the number of filtered rows\r\n * @public\r\n * @expose\r\n * @returns {Number} Filtered row count\r\n */\r\nDGTable.prototype.getFilteredRowCount = function () {\r\n    const p = this.p;\r\n    return (p.filteredRows || p.rows).length;\r\n};\r\n\r\n/**\r\n * Returns the filtered row index for specific row\r\n * @public\r\n * @expose\r\n * @param {Object} rowData - Row data to find\r\n * @returns {Number} Row index\r\n */\r\nDGTable.prototype.getIndexForFilteredRow = function (rowData) {\r\n    const p = this.p;\r\n    return (p.filteredRows || p.rows).indexOf(rowData);\r\n};\r\n\r\n/**\r\n * Returns the row data for a specific row\r\n * @public\r\n * @expose\r\n * @param {Number} row index of the filtered row\r\n * @returns {Object} Row data\r\n */\r\nDGTable.prototype.getDataForFilteredRow = function (row) {\r\n    const p = this.p;\r\n    if (row < 0 || row > (p.filteredRows || p.rows).length - 1) return null;\r\n    return (p.filteredRows || p.rows)[row];\r\n};\r\n\r\n/**\r\n * Returns DOM element of the header row\r\n * @public\r\n * @expose\r\n * @returns {Element} Row element\r\n */\r\nDGTable.prototype.getHeaderRowElement = function () {\r\n    return this.p.headerRow;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Element} el\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._horizontalPadding = function(el) {\r\n    return ((parseFloat($.css(el, 'padding-left')) || 0) +\r\n    (parseFloat($.css(el, 'padding-right')) || 0));\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Element} el\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._horizontalBorderWidth = function(el) {\r\n    return ((parseFloat($.css(el, 'border-left')) || 0) +\r\n    (parseFloat($.css(el, 'border-right')) || 0));\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {Number} width\r\n */\r\nDGTable.prototype._calculateWidthAvailableForColumns = function() {\r\n    const o = this.o, p = this.p;\r\n\r\n    // Changing display mode briefly, to prevent taking in account the  parent's scrollbar width when we are the cause for it\r\n    let oldDisplay, lastScrollTop, lastScrollLeft;\r\n    if (p.$table) {\r\n        lastScrollTop = p.table ? p.table.scrollTop : 0;\r\n        lastScrollLeft = p.table ? p.table.scrollLeft : 0;\r\n\r\n        if (o.virtualTable) {\r\n            oldDisplay = p.$table[0].style.display;\r\n            p.$table[0].style.display = 'none';\r\n        }\r\n    }\r\n\r\n    let detectedWidth = CssUtil.width(this.$el);\r\n\r\n    if (p.$table) {\r\n        if (o.virtualTable) {\r\n            p.$table[0].style.display = oldDisplay;\r\n        }\r\n\r\n        p.table.scrollTop = lastScrollTop;\r\n        p.table.scrollLeft = lastScrollLeft;\r\n        p.header.scrollLeft = lastScrollLeft;\r\n    }\r\n\r\n    let tableClassName = o.tableClassName;\r\n\r\n    let $thisWrapper = $('<div>').addClass(this.el.className).css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px' });\r\n    let $header = $('<div>').addClass(tableClassName + '-header').appendTo($thisWrapper);\r\n    let $headerRow = $('<div>').addClass(tableClassName + '-header-row').appendTo($header);\r\n    for (let i = 0; i < p.visibleColumns.length; i++) {\r\n        $headerRow.append($('<div><div></div></div>').addClass(tableClassName + '-header-cell').addClass(p.visibleColumns[i].cellClasses || ''));\r\n    }\r\n    $thisWrapper.appendTo(document.body);\r\n\r\n    detectedWidth -= this._horizontalBorderWidth($headerRow[0]);\r\n\r\n    let $cells = $headerRow.find('>div.' + tableClassName + '-header-cell');\r\n    for (let i = 0; i < $cells.length; i++) {\r\n        let $cell = $($cells[i]);\r\n\r\n        let isBoxing = $cell.css('boxSizing') === 'border-box';\r\n        if (!isBoxing) {\r\n            detectedWidth -=\r\n                (parseFloat($cell.css('border-right-width')) || 0) +\r\n                (parseFloat($cell.css('border-left-width')) || 0) +\r\n                (this._horizontalPadding($cell[0])); // CELL's padding\r\n        }\r\n    }\r\n\r\n    if ($thisWrapper) {\r\n        $thisWrapper.remove();\r\n    }\r\n\r\n    return Math.max(0, detectedWidth);\r\n};\r\n\r\n/**\r\n * Notify the table that its width has changed\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.tableWidthChanged = (function () {\r\n\r\n    let getTextWidth = function(text) {\r\n        let tableClassName = this.o.tableClassName;\r\n\r\n        let $cell, $tableWrapper = $('<div>').addClass(this.$el).append(\r\n            $('<div>').addClass(tableClassName + '-header').append(\r\n                $('<div>').addClass(tableClassName + '-header-row').append(\r\n                    $cell = $('<div>').addClass(tableClassName + '-header-cell').append(\r\n                        $('<div>').text(text)\r\n                    )\r\n                )\r\n            )\r\n        ).css({ 'position': 'absolute', top: '-9999px', 'visibility': 'hidden' });\r\n        $tableWrapper.appendTo(document.body);\r\n\r\n        let width = CssUtil.width($cell);\r\n\r\n        $tableWrapper.remove();\r\n\r\n        return width;\r\n    };\r\n\r\n    let lastDetectedWidth = null;\r\n\r\n    /**\r\n     * @public\r\n     * @expose\r\n     * @param {Boolean} [forceUpdate=false]\r\n     * @param {Boolean} [renderColumns=true]\r\n     * @returns {DGTable} self\r\n     */\r\n    return function(forceUpdate, renderColumns) {\r\n\r\n        let that = this,\r\n            o = that.o,\r\n            p = that.p,\r\n            detectedWidth = this._calculateWidthAvailableForColumns(),\r\n            sizeLeft = detectedWidth,\r\n            relatives = 0;\r\n\r\n        renderColumns = renderColumns === undefined || renderColumns;\r\n\r\n        let tableWidthBeforeCalculations = 0;\r\n\r\n        if (!p.tbody) {\r\n            renderColumns = false;\r\n        }\r\n\r\n        if (renderColumns) {\r\n            tableWidthBeforeCalculations = parseFloat(p.tbody.style.minWidth) || 0;\r\n        }\r\n\r\n        if (sizeLeft != lastDetectedWidth || forceUpdate) {\r\n            lastDetectedWidth = detectedWidth;\r\n\r\n            let absWidthTotal = 0, changedColumnIndexes = [], totalRelativePercentage = 0;\r\n\r\n            for (let i = 0; i < p.columns.length; i++) {\r\n                p.columns[i].actualWidthConsideringScrollbarWidth = null;\r\n            }\r\n\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.widthMode === ColumnWidthMode.ABSOLUTE) {\r\n                    let width = col.width;\r\n                    width += col.arrowProposedWidth || 0; // Sort-arrow width\r\n                    if (!col.ignoreMin && width < o.minColumnWidth) {\r\n                        width = o.minColumnWidth;\r\n                    }\r\n                    sizeLeft -= width;\r\n                    absWidthTotal += width;\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        changedColumnIndexes.push(i);\r\n                    }\r\n                } else if (col.widthMode === ColumnWidthMode.AUTO) {\r\n                    let width = getTextWidth.call(this, col.label) + 20;\r\n                    width += col.arrowProposedWidth || 0; // Sort-arrow width\r\n                    if (!col.ignoreMin && width < o.minColumnWidth) {\r\n                        width = o.minColumnWidth;\r\n                    }\r\n                    sizeLeft -= width;\r\n                    absWidthTotal += width;\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        if (!o.convertColumnWidthsToRelative) {\r\n                            changedColumnIndexes.push(i);\r\n                        }\r\n                    }\r\n                } else if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                    totalRelativePercentage += col.width;\r\n                    relatives++;\r\n                }\r\n            }\r\n\r\n            // Normalize relative sizes if needed\r\n            if (o.convertColumnWidthsToRelative) {\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.AUTO) {\r\n                        col.widthMode = ColumnWidthMode.RELATIVE;\r\n                        sizeLeft += col.actualWidth;\r\n                        col.width = col.actualWidth / absWidthTotal;\r\n                        totalRelativePercentage += col.width;\r\n                        relatives++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize relative sizes if needed\r\n            if (relatives && ((totalRelativePercentage < 1 && o.relativeWidthGrowsToFillWidth) ||\r\n                (totalRelativePercentage > 1 && o.relativeWidthShrinksToFillWidth))) {\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        col.width /= totalRelativePercentage;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let sizeLeftForRelative = Math.max(0, sizeLeft); // Use this as the space to take the relative widths out of\r\n            if (sizeLeftForRelative === 0) {\r\n                sizeLeftForRelative = p.table.clientWidth;\r\n            }\r\n\r\n            let minColumnWidthRelative = (o.minColumnWidth / sizeLeftForRelative);\r\n            if (isNaN(minColumnWidthRelative)) {\r\n                minColumnWidthRelative = 0;\r\n            }\r\n            if (minColumnWidthRelative > 0) {\r\n                let extraRelative = 0, delta;\r\n\r\n                // First pass - make sure they are all constrained to the minimum width\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        if (!col.ignoreMin && col.width < minColumnWidthRelative) {\r\n                            extraRelative += minColumnWidthRelative - col.width;\r\n                            col.width = minColumnWidthRelative;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Second pass - try to take the extra width out of the other columns to compensate\r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        if (!col.ignoreMin && col.width > minColumnWidthRelative) {\r\n                            if (extraRelative > 0) {\r\n                                delta = Math.min(extraRelative, col.width - minColumnWidthRelative);\r\n                                col.width -= delta;\r\n                                extraRelative -= delta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Try to fill width\r\n            if (o.autoFillTableWidth && sizeLeft > 0) {\r\n                let nonResizableTotal = 0;\r\n                let sizeLeftToFill = sizeLeft;\r\n                \r\n                for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (!col.resizable && col.widthMode === ColumnWidthMode.ABSOLUTE)\r\n                        nonResizableTotal += col.width;\r\n                    \r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE)\r\n                        sizeLeftToFill -= Math.round(sizeLeftForRelative * col.width);\r\n                }\r\n                \r\n                let conv = ((detectedWidth - nonResizableTotal) / (detectedWidth - sizeLeftToFill - nonResizableTotal)) || NaN;\r\n                for (let i = 0; i < p.visibleColumns.length && sizeLeftToFill > 0; i++) {\r\n                    let col = p.visibleColumns[i];\r\n                    if (!col.resizable && col.widthMode === ColumnWidthMode.ABSOLUTE)\r\n                        continue;\r\n                    \r\n                    if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                        col.width *= conv;\r\n                    } else {\r\n                        let width = col.actualWidth * conv;\r\n                        if (col.actualWidth !== width) {\r\n                            col.actualWidth = width;\r\n                            if (changedColumnIndexes.indexOf(i) === -1)\r\n                                changedColumnIndexes.push(i);\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n            \r\n            // Materialize relative sizes\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.widthMode === ColumnWidthMode.RELATIVE) {\r\n                    let width = Math.round(sizeLeftForRelative * col.width);\r\n                    sizeLeft -= width;\r\n                    relatives--;\r\n\r\n                    // Take care of rounding errors\r\n                    if (relatives === 0 && sizeLeft === 1) { // Take care of rounding errors\r\n                        width++;\r\n                        sizeLeft--;\r\n                    }\r\n                    if (sizeLeft === -1) {\r\n                        width--;\r\n                        sizeLeft++;\r\n                    }\r\n\r\n                    // Update actualWidth\r\n                    if (width !== col.actualWidth) {\r\n                        col.actualWidth = width;\r\n                        changedColumnIndexes.push(i);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (p.visibleColumns.length) {\r\n                // (There should always be at least 1 column visible, but just in case)\r\n                p.visibleColumns[p.visibleColumns.length - 1].actualWidthConsideringScrollbarWidth =\r\n                    p.visibleColumns[p.visibleColumns.length - 1].actualWidth - (p.scrollbarWidth || 0);\r\n            }\r\n\r\n            if (renderColumns) {\r\n                let tableWidth = this._calculateTbodyWidth();\r\n\r\n                if (tableWidthBeforeCalculations < tableWidth) {\r\n                    this._updateTableWidth(false);\r\n                }\r\n\r\n                for (let i = 0; i < changedColumnIndexes.length; i++) {\r\n                    this._resizeColumnElements(changedColumnIndexes[i]);\r\n                }\r\n\r\n                if (tableWidthBeforeCalculations > tableWidth) {\r\n                    this._updateTableWidth(false);\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n})();\r\n\r\n/**\r\n * Notify the table that its height has changed\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.tableHeightChanged = function () {\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (!p.$table) {\r\n        return that;\r\n    }\r\n\r\n    let height = CssUtil.innerHeight(that.$el)\r\n        - (parseFloat(p.$table.css('border-top-width')) || 0) // Subtract top border of inner element\r\n        - (parseFloat(p.$table.css('border-bottom-width')) || 0); // Subtract bottom border of inner element\r\n\r\n    if (height != o.height) {\r\n\r\n        o.height = height;\r\n\r\n        if (p.tbody) {\r\n            // At least 1 pixel - to show scrollers correctly.\r\n            p.tbody.style.height = Math.max(o.height - CssUtil.outerHeight(p.$headerRow), 1) + 'px';\r\n        }\r\n\r\n        if (o.virtualTable) {\r\n            that.clearAndRender();\r\n        }\r\n    }\r\n\r\n    return that;\r\n};\r\n\r\n/**\r\n * Add rows to the table\r\n * @public\r\n * @expose\r\n * @param {Object[]} data - array of rows to add to the table\r\n * @param {Number} [at=-1] - where to add the rows at\r\n * @param {Boolean} [resort=false] - should resort all rows?\r\n * @param {Boolean} [render=true]\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.addRows = function (data, at, resort, render) {\r\n    let that = this,\r\n        p = that.p;\r\n        \r\n    if (typeof at === 'boolean') {\r\n        render = resort;\r\n        resort = at;\r\n        at = -1;\r\n    }\r\n    \r\n    if (typeof at !== 'number')\r\n        at = -1;\r\n    \r\n    if (at < 0 || at > p.rows.length)\r\n        at = p.rows.length;\r\n    \r\n    render = (render === undefined) ? true : !!render;\r\n\r\n    if (data) {\r\n        p.rows.add(data, at);\r\n        \r\n        if (p.filteredRows || (resort && p.rows.sortColumn.length)) {\r\n            \r\n            if (resort && p.rows.sortColumn.length) {\r\n                this.resort();\r\n            } else {\r\n                this._refilter();\r\n            }\r\n            \r\n            p.tableSkeletonNeedsRendering = true;\r\n            \r\n            if (render) {\r\n                // Render the skeleton with all rows from scratch\r\n                this.render();\r\n            }\r\n            \r\n        } else if (render) {\r\n            let childNodes = p.tbody.childNodes;\r\n            \r\n            if (that.o.virtualTable) {\r\n                \r\n                while (p.tbody.firstChild) {\r\n                    this.trigger('rowdestroy', p.tbody.firstChild);\r\n                    this._unbindCellEventsForRow(p.tbody.firstChild);\r\n                    p.tbody.removeChild(p.tbody.firstChild);\r\n                }\r\n\r\n                this._calculateVirtualHeight() // Calculate virtual height\r\n                    ._updateLastCellWidthFromScrollbar() // Detect vertical scrollbar height\r\n                    .render()\r\n                    ._updateTableWidth(false); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n            } else if (p.$tbody) {\r\n                \r\n                let firstRow = at,\r\n                    lastRow = at + data.length - 1;\r\n                \r\n                let renderedRows = that.renderRows(firstRow, lastRow);\r\n                p.tbody.insertBefore(renderedRows, childNodes[at] || null);\r\n                \r\n                for (let i = lastRow + 1; i < childNodes.length; i++) {\r\n                    let row = childNodes[i];\r\n                    row['rowIndex'] += data.length;\r\n                    row['physicalRowIndex'] += data.length;\r\n                }\r\n                               \r\n                this.render()\r\n                    ._updateLastCellWidthFromScrollbar() // Detect vertical scrollbar height, and update existing last cells\r\n                    ._updateTableWidth(true); // Update table width to suit the required width considering vertical scrollbar\r\n\r\n            }\r\n        }\r\n\r\n        this.trigger('addrows', data.length, false);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a row from the table\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex - index\r\n * @param {Number} count - how many rows to remove\r\n * @param {Boolean=true} render\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeRows = function (physicalRowIndex, count, render) {\r\n    let that = this,\r\n        p = that.p;\r\n        \r\n    if (typeof count !== 'number' || count <= 0) return this;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return this;\r\n\r\n    p.rows.splice(physicalRowIndex, count);\r\n    render = (render === undefined) ? true : !!render;\r\n    \r\n    if (p.filteredRows) {\r\n        \r\n        this._refilter();\r\n        \r\n        p.tableSkeletonNeedsRendering = true;\r\n        \r\n        if (render) {\r\n            // Render the skeleton with all rows from scratch\r\n            this.render();\r\n        }\r\n        \r\n    } else if (render) {\r\n        \r\n        let childNodes = p.tbody.childNodes;\r\n        \r\n        if (this.o.virtualTable) {\r\n                \r\n            while (p.tbody.firstChild) {\r\n                this.trigger('rowdestroy', p.tbody.firstChild);\r\n                this._unbindCellEventsForRow(p.tbody.firstChild);\r\n                p.tbody.removeChild(p.tbody.firstChild);\r\n            }\r\n            \r\n            this._calculateVirtualHeight()\r\n                ._updateLastCellWidthFromScrollbar()\r\n                .render()\r\n                ._updateTableWidth(false); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n                \r\n        } else {\r\n            \r\n            let countRemoved = 0, lastRowIndex = physicalRowIndex + count - 1;\r\n            \r\n            for (let i = 0; i < childNodes.length; i++) {\r\n                let row = childNodes[i];\r\n                let index = row['physicalRowIndex'];\r\n                \r\n                if (index >= physicalRowIndex) {\r\n                    if (index <= lastRowIndex) {\r\n                        this.trigger('rowdestroy', row);\r\n                        this._unbindCellEventsForRow(row);\r\n                        p.tbody.removeChild(row);\r\n                        i--;\r\n                    } else {\r\n                        row['physicalRowIndex'] -= count;\r\n                    }\r\n                } else {\r\n                    row['rowIndex'] = i;\r\n                }\r\n            }\r\n                        \r\n            this.render()\r\n                ._updateLastCellWidthFromScrollbar()\r\n                ._updateTableWidth(true); // Update table width to suit the required width considering vertical scrollbar\r\n                \r\n        }\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes a row from the table\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex - index\r\n * @param {Boolean=true} render\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.removeRow = function (physicalRowIndex, render) {\r\n    return this.removeRows(physicalRowIndex, 1, render);\r\n};\r\n\r\n/**\r\n * Refreshes the row specified\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex index\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.refreshRow = function(physicalRowIndex) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return this;\r\n\r\n    // Find out if the row is in the rendered dataset\r\n    let rowIndex = -1;\r\n    if (p.filteredRows && (rowIndex = indexOf(p.filteredRows, p.rows[physicalRowIndex])) === -1) return this;\r\n\r\n    if (rowIndex === -1) {\r\n        rowIndex = physicalRowIndex;\r\n    }\r\n\r\n    let childNodes = p.tbody.childNodes;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        let isRowVisible = false;\r\n        let i = 0;\r\n        \r\n        for (; i < childNodes.length; i++) {\r\n            if (childNodes[i]['physicalRowIndex'] === physicalRowIndex) {\r\n                isRowVisible = true;\r\n                this.trigger('rowdestroy', childNodes[i]);\r\n                this._unbindCellEventsForRow(childNodes[i]);\r\n                p.tbody.removeChild(childNodes[i]);\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if (isRowVisible) {\r\n            let renderedRow = this.renderRows(rowIndex, rowIndex);\r\n            p.tbody.insertBefore(renderedRow, childNodes[i] || null);\r\n        }\r\n    } else {\r\n        this.trigger('rowdestroy', childNodes[rowIndex]);\r\n        this._unbindCellEventsForRow(childNodes[rowIndex]);\r\n        p.tbody.removeChild(childNodes[rowIndex]);\r\n        let renderedRow = this.renderRows(rowIndex, rowIndex);\r\n        p.tbody.insertBefore(renderedRow, childNodes[rowIndex] || null);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Get the DOM element for the specified row, if it exists\r\n * @public\r\n * @expose\r\n * @param {Number} physicalRowIndex index\r\n * @returns {Element?} row or null\r\n */\r\nDGTable.prototype.getRowElement = function(physicalRowIndex) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (physicalRowIndex < 0 || physicalRowIndex > p.rows.length - 1) return null;\r\n\r\n    // Find out if the row is in the rendered dataset\r\n    let rowIndex = -1;\r\n    if (p.filteredRows && (rowIndex = indexOf(p.filteredRows, p.rows[physicalRowIndex])) === -1) return this;\r\n\r\n    if (rowIndex === -1) {\r\n        rowIndex = physicalRowIndex;\r\n    }\r\n\r\n    let childNodes = p.tbody.childNodes;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        for (let i = 0; i < childNodes.length; i++) {\r\n            if (childNodes[i]['physicalRowIndex'] === physicalRowIndex) {\r\n                return childNodes[i];\r\n            }\r\n        }\r\n    } else {\r\n        return childNodes[rowIndex];\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * Refreshes all virtual rows\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.refreshAllVirtualRows = function () {\r\n\r\n    const p = this.p;\r\n\r\n    if (this.o.virtualTable) {\r\n        // Now make sure that the row actually rendered, as this is a virtual table\r\n        let rowsToRender = [];\r\n        let childNodes = p.tbody.childNodes;\r\n        \r\n        for (let i = 0, rowCount = childNodes.length; i < rowCount; i++) {\r\n            rowsToRender.push(childNodes[i]['physicalRowIndex']);\r\n            this.trigger('rowdestroy', childNodes[i]);\r\n            this._unbindCellEventsForRow(childNodes[i]);\r\n            p.tbody.removeChild(childNodes[i]);\r\n            i--;\r\n            rowCount--;\r\n        }\r\n        \r\n        for (let i = 0; i < rowsToRender.length; i++) {\r\n            let renderedRow = this.renderRows(rowsToRender[i], rowsToRender[i]);\r\n            p.tbody.appendChild(renderedRow);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Replace the whole dataset\r\n * @public\r\n * @expose\r\n * @param {Object[]} data array of rows to add to the table\r\n * @param {Boolean} [resort=false] should resort all rows?\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.setRows = function (data, resort) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    // this.scrollTop = this.$el.find('.table').scrollTop();\r\n    p.rows.reset(data);\r\n\r\n    if (resort && p.rows.sortColumn.length) {\r\n        this.resort();\r\n    } else {\r\n        this._refilter();\r\n    }\r\n\r\n    this.clearAndRender().trigger('addrows', data.length, true);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * Creates a URL representing the data in the specified element.\r\n * This uses the Blob or BlobBuilder of the modern browsers.\r\n * The url can be used for a Web Worker.\r\n * @public\r\n * @expose\r\n * @param {string} id Id of the element containing your data\r\n * @returns {String|null} the url, or null if not supported\r\n */\r\nDGTable.prototype.getUrlForElementContent = function (id) {\r\n    let blob,\r\n        el = document.getElementById(id);\r\n    if (el) {\r\n        let data = el.textContent;\r\n        if (typeof Blob === 'function') {\r\n            blob = new Blob([data]);\r\n        } else {\r\n            let BlobBuilder = global.BlobBuilder || global.WebKitBlobBuilder || global.MozBlobBuilder || global.MSBlobBuilder;\r\n            if (!BlobBuilder) {\r\n                return null;\r\n            }\r\n            let builder = new BlobBuilder();\r\n            builder.append(data);\r\n            blob = builder.getBlob();\r\n        }\r\n        return (global.URL || global.webkitURL).createObjectURL(blob);\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * @public\r\n * @expose\r\n * @returns {Boolean} A value indicating whether Web Workers are supported\r\n */\r\nDGTable.prototype.isWorkerSupported = function() {\r\n    return global['Worker'] instanceof Function;\r\n};\r\n\r\n/**\r\n * Creates a Web Worker for updating the table.\r\n * @public\r\n * @expose\r\n * @param {string} url Url to the script for the Web Worker\r\n * @param {Boolean=true} start if true, starts the Worker immediately\r\n * @returns {Worker?} the Web Worker, or null if not supported\r\n */\r\nDGTable.prototype.createWebWorker = function (url, start, resort) {\r\n    if (this.isWorkerSupported()) {\r\n        let that = this,\r\n            p = that.p;\r\n\r\n        let worker = new Worker(url);\r\n        let listener = function (evt) {\r\n            if (evt.data.append) {\r\n                that.addRows(evt.data.rows, resort);\r\n            } else {\r\n                that.setRows(evt.data.rows, resort);\r\n            }\r\n        };\r\n        worker.addEventListener('message', listener, false);\r\n        if (!p.workerListeners) {\r\n            p.workerListeners = [];\r\n        }\r\n        p.workerListeners.push({ worker: worker, listener: listener });\r\n        if (start || start === undefined) {\r\n            worker.postMessage(null);\r\n        }\r\n        return worker;\r\n    }\r\n    return null;\r\n};\r\n\r\n/**\r\n * Unbinds a Web Worker from the table, stopping updates.\r\n * @public\r\n * @expose\r\n * @param {Worker} worker the Web Worker\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.unbindWebWorker = function (worker) {\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (p.workerListeners) {\r\n        for (let j = 0; j < p.workerListeners.length; j++) {\r\n            if (p.workerListeners[j].worker == worker) {\r\n                worker.removeEventListener('message', p.workerListeners[j].listener, false);\r\n                p.workerListeners.splice(j, 1);\r\n                j--;\r\n            }\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * A synonym for hideCellPreview()\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.abortCellPreview = function() {\r\n    this.hideCellPreview();\r\n    return this;\r\n};\r\n\r\n/**\r\n * Cancel a resize in progress\r\n * @expose\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.cancelColumnResize = function() {\r\n    const p = this.p;\r\n\r\n    if (p.$resizer) {\r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n        $(document).off('mousemove.dgtable', p.onMouseMoveResizeAreaBound)\r\n            .off('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onVirtualTableScrolled = function (_event) {\r\n    this.render();\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onTableScrolledHorizontally = function (_event) {\r\n    const p = this.p;\r\n\r\n    p.header.scrollLeft = p.table.scrollLeft;\r\n};\r\n\r\n/**previousElementSibling\r\n * Reverse-calculate the column to resize from mouse position\r\n * @private\r\n * @param {jQuery_Event} e jQuery mouse event\r\n * @returns {String} name of the column which the mouse is over, or null if the mouse is not in resize position\r\n */\r\nDGTable.prototype._getColumnByResizePosition = function (e) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        rtl = this._isTableRtl();\r\n\r\n    let $headerCell = $(e.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName),\r\n        headerCell = $headerCell[0];\r\n    if (headerCell['__cell']) {\r\n        headerCell = headerCell['__cell'];\r\n        $headerCell = $(headerCell);\r\n    }\r\n\r\n    let previousElementSibling = $headerCell[0].previousSibling;\r\n    while (previousElementSibling && previousElementSibling.nodeType != 1) {\r\n        previousElementSibling = previousElementSibling.previousSibling;\r\n    }\r\n\r\n    let firstCol = !previousElementSibling;\r\n\r\n    let mouseX = ((e.pageX != null ? e.pageX : e.originalEvent.pageX) || e.originalEvent.clientX) - $headerCell.offset().left;\r\n\r\n    if (rtl) {\r\n        if (!firstCol && CssUtil.outerWidth($headerCell) - mouseX <= o.resizeAreaWidth / 2) {\r\n            return previousElementSibling['columnName'];\r\n        } else if (mouseX <= o.resizeAreaWidth / 2) {\r\n            return headerCell['columnName'];\r\n        }\r\n    } else {\r\n        if (!firstCol && mouseX <= o.resizeAreaWidth / 2) {\r\n            return previousElementSibling['columnName'];\r\n        } else if (CssUtil.outerWidth($headerCell) - mouseX <= o.resizeAreaWidth / 2) {\r\n            return headerCell['columnName'];\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onTouchStartColumnHeader = function (event) {\r\n    const p = this.p;\r\n\r\n    if (p.currentTouchId) return;\r\n\r\n    let startTouch = event.originalEvent.changedTouches[0];\r\n    p.currentTouchId = startTouch.identifier;\r\n\r\n    let $eventTarget = $(event.currentTarget);\r\n\r\n    let startPos = { x: startTouch.pageX, y: startTouch.pageY },\r\n        currentPos = startPos,\r\n        distanceTreshold = 9;\r\n        \r\n    let tapAndHoldTimeout;\r\n\r\n    let unbind = function () {\r\n        p.currentTouchId = null;\r\n        $eventTarget.off('touchend').off('touchcancel');\r\n        clearTimeout(tapAndHoldTimeout);\r\n    };\r\n\r\n    let fakeEvent = function (name) {\r\n        let fakeEvent = $.Event(name);\r\n        let extendObjects = Array.prototype.slice.call(arguments, 1);\r\n        $.each(['target', 'clientX', 'clientY', 'offsetX', 'offsetY', 'screenX', 'screenY', 'pageX', 'pageY', 'which'],\r\n            function () {\r\n                fakeEvent[this] = event[this];\r\n                for (let i = 0; i < extendObjects.length; i++) {\r\n                    if (extendObjects[i][this] != null) {\r\n                        fakeEvent[this] = extendObjects[i][this];\r\n                    }\r\n                }\r\n            });\r\n        return fakeEvent;\r\n    };\r\n\r\n    $eventTarget.trigger(fakeEvent('mousedown', event.originalEvent.changedTouches[0], { 'which': 1 }));\r\n\r\n    tapAndHoldTimeout = setTimeout(() => {\r\n        unbind();\r\n\r\n        // Prevent simulated mouse events after touchend\r\n        $eventTarget\r\n            .one('touchend', (event) => {\r\n                event.preventDefault();\r\n                $eventTarget.off('touchend').off('touchcancel');\r\n            })\r\n            .one('touchcancel', (_event) => {\r\n                $eventTarget.off('touchend').off('touchcancel');\r\n            });\r\n\r\n        let distanceTravelled = Math.sqrt(Math.pow(Math.abs(currentPos.x - startPos.x), 2) + Math.pow(Math.abs(currentPos.y - startPos.y), 2));\r\n\r\n        if (distanceTravelled < distanceTreshold) {\r\n            this.cancelColumnResize();\r\n            $eventTarget.trigger(fakeEvent('mouseup', event.originalEvent.changedTouches[0], { 'which': 3 }));\r\n        }\r\n\r\n    }, 500);\r\n\r\n    $eventTarget\r\n        .on('touchend', (event) => {\r\n            let touch = find(event.originalEvent.changedTouches, (touch) => touch.identifier === p.currentTouchId);\r\n            if (!touch) return;\r\n\r\n            unbind();\r\n\r\n            event.preventDefault(); // Prevent simulated mouse events\r\n\r\n            currentPos = { x: touch.pageX, y: touch.pageY };\r\n            let distanceTravelled = Math.sqrt(Math.pow(Math.abs(currentPos.x - startPos.x), 2) + Math.pow(Math.abs(currentPos.y - startPos.y), 2));\r\n\r\n            if (distanceTravelled < distanceTreshold || p.$resizer) {\r\n                $eventTarget.trigger(fakeEvent('mouseup', touch, { 'which': 1 }));\r\n                $eventTarget.trigger(fakeEvent('click', touch, { 'which': 1 }));\r\n            }\r\n\r\n        })\r\n        .on('touchcancel', () => {\r\n            unbind();\r\n        })\r\n        .on('touchmove', (event) => {\r\n            let touch = find(event.originalEvent.changedTouches, (touch) => touch.identifier === p.currentTouchId);\r\n            if (!touch) return;\r\n\r\n            // Keep track of current position, so we know if we need to cancel the tap-and-hold\r\n            currentPos = { x: touch.pageX, y: touch.pageY };\r\n\r\n            if (p.$resizer) {\r\n                event.preventDefault();\r\n\r\n                $eventTarget.trigger(fakeEvent('mousemove', touch));\r\n            }\r\n        });\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} e event\r\n */\r\nDGTable.prototype._onMouseDownColumnHeader = function (event) {\r\n    if (event.which !== 1) return this; // Only treat left-clicks\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p,\r\n        col = this._getColumnByResizePosition(event);\r\n\r\n    if (col) {\r\n        let column = p.columns.get(col);\r\n        if (!o.resizableColumns || !column || !column.resizable) {\r\n            return false;\r\n        }\r\n\r\n        let rtl = this._isTableRtl();\r\n\r\n        if (p.$resizer) {\r\n            $(p.$resizer).remove();\r\n        }\r\n        p.$resizer = $('<div></div>')\r\n            .addClass(o.resizerClassName)\r\n            .css({\r\n                'position': 'absolute',\r\n                'display': 'block',\r\n                'z-index': -1,\r\n                'visibility': 'hidden',\r\n                'width': '2px',\r\n                'background': '#000',\r\n                'opacity': 0.7,\r\n            })\r\n            .appendTo(this.$el);\r\n\r\n        let selectedHeaderCell = column.element,\r\n            commonAncestor = p.$resizer.parent();\r\n\r\n        let posCol = selectedHeaderCell.offset(),\r\n            posRelative = commonAncestor.offset();\r\n        if (ieVersion === 8) {\r\n            posCol = selectedHeaderCell.offset(); // IE8 bug, first time it receives zeros...\r\n        }\r\n        posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n        posRelative.top += parseFloat(commonAncestor.css('border-top-width')) || 0;\r\n        posCol.left -= posRelative.left;\r\n        posCol.top -= posRelative.top;\r\n        posCol.top -= parseFloat(selectedHeaderCell.css('border-top-width')) || 0;\r\n        let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n        if (rtl) {\r\n            posCol.left -= Math.ceil((parseFloat(selectedHeaderCell.css('border-left-width')) || 0) / 2);\r\n            posCol.left -= Math.ceil(resizerWidth / 2);\r\n        } else {\r\n            posCol.left += CssUtil.outerWidth(selectedHeaderCell);\r\n            posCol.left += Math.ceil((parseFloat(selectedHeaderCell.css('border-right-width')) || 0) / 2);\r\n            posCol.left -= Math.ceil(resizerWidth / 2);\r\n        }\r\n\r\n        p.$resizer\r\n            .css({\r\n                'z-index': '10',\r\n                'visibility': 'visible',\r\n                'left': posCol.left,\r\n                'top': posCol.top,\r\n                'height': CssUtil.height(this.$el),\r\n            })[0]['columnName'] = selectedHeaderCell[0]['columnName'];\r\n            \r\n        try { p.$resizer[0].style.zIndex = ''; }\r\n        catch (ignored) { /* we're ok with this */ }\r\n\r\n        $(document).on('mousemove.dgtable', p.onMouseMoveResizeAreaBound);\r\n        $(document).on('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onMouseMoveColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.resizableColumns) {\r\n        let col = this._getColumnByResizePosition(event);\r\n        let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n        if (!col || !p.columns.get(col).resizable) {\r\n            headerCell.style.cursor = '';\r\n        } else {\r\n            headerCell.style.cursor = 'e-resize';\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @param {jQuery_Event} event\r\n */\r\nDGTable.prototype._onMouseUpColumnHeader = function (event) {\r\n    if (event.which === 3) {\r\n        let o = this.o;\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        let bounds = $headerCell.offset();\r\n        bounds['width'] = CssUtil.outerWidth($headerCell);\r\n        bounds['height'] = CssUtil.outerHeight($headerCell);\r\n        this.trigger('headercontextmenu', $headerCell[0]['columnName'], event.pageX, event.pageY, bounds);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onMouseLeaveColumnHeader = function (event) {\r\n    let o = this.o;\r\n    let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n    headerCell.style.cursor = '';\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onClickColumnHeader = function (event) {\r\n    if (!this._getColumnByResizePosition(event)) {\r\n\r\n        let that = this,\r\n            o = that.o,\r\n            p = that.p;\r\n\r\n        let headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName)[0];\r\n        if (o.sortableColumns) {\r\n            let column = p.columns.get(headerCell['columnName']);\r\n            if (column && column.sortable) {\r\n                this.sort(headerCell['columnName'], undefined, true).render();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onStartDragColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.movableColumns) {\r\n\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        let column = p.columns.get($headerCell[0]['columnName']);\r\n        if (column && column.movable) {\r\n            $headerCell[0].style.opacity = 0.35;\r\n            p.dragId = Math.random() * 0x9999999; // Recognize this ID on drop\r\n            event.originalEvent.dataTransfer.setData('text', JSON.stringify({ dragId: p.dragId, column: column.name }));\r\n        } else {\r\n            event.preventDefault();\r\n        }\r\n\r\n    } else {\r\n\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {MouseEvent} event event\r\n */\r\nDGTable.prototype._onMouseMoveResizeArea = function (event) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let column = p.columns.get(p.$resizer[0]['columnName']);\r\n    let rtl = this._isTableRtl();\r\n\r\n    let selectedHeaderCell = column.element,\r\n        commonAncestor = p.$resizer.parent();\r\n    let posCol = selectedHeaderCell.offset(), posRelative = commonAncestor.offset();\r\n    posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n    posCol.left -= posRelative.left;\r\n    let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n    \r\n    let isBoxing = selectedHeaderCell.css('box-sizing') === 'border-box';\r\n    \r\n    let actualX = event.pageX - posRelative.left;\r\n    let minX = posCol.left;\r\n\r\n    minX -= Math.ceil(resizerWidth / 2);\r\n\r\n    if (rtl) {\r\n        minX += CssUtil.outerWidth(selectedHeaderCell);\r\n        minX -= column.ignoreMin ? 0 : this.o.minColumnWidth;\r\n\r\n        if (!isBoxing) {\r\n            minX -= Math.ceil((parseFloat(selectedHeaderCell.css('border-left-width')) || 0) / 2);\r\n            minX -= this._horizontalPadding(selectedHeaderCell[0]);\r\n        }\r\n\r\n        if (actualX > minX) {\r\n            actualX = minX;\r\n        }\r\n    } else {\r\n        minX += column.ignoreMin ? 0 : this.o.minColumnWidth;\r\n        \r\n        if (!isBoxing) {\r\n            minX += Math.ceil((parseFloat(selectedHeaderCell.css('border-right-width')) || 0) / 2);\r\n            minX += this._horizontalPadding(selectedHeaderCell[0]);\r\n        }\r\n\r\n        if (actualX < minX) {\r\n            actualX = minX;\r\n        }\r\n    }\r\n\r\n    p.$resizer.css('left', actualX + 'px');\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Event} event event\r\n */\r\nDGTable.prototype._onEndDragColumnHeader = function (event) {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (!p.$resizer) {\r\n        event.target.style.opacity = null;\r\n    } else {\r\n        $(document).off('mousemove.dgtable', p.onMouseMoveResizeAreaBound)\r\n            .off('mouseup.dgtable', p.onEndDragColumnHeaderBound);\r\n\r\n        let column = p.columns.get(p.$resizer[0]['columnName']);\r\n        let rtl = this._isTableRtl();\r\n\r\n        let selectedHeaderCell = column.element,\r\n            commonAncestor = p.$resizer.parent();\r\n        let posCol = selectedHeaderCell.offset(), posRelative = commonAncestor.offset();\r\n        posRelative.left += parseFloat(commonAncestor.css('border-left-width')) || 0;\r\n        posCol.left -= posRelative.left;\r\n        let resizerWidth = CssUtil.outerWidth(p.$resizer);\r\n        \r\n        let isBoxing = selectedHeaderCell.css('box-sizing') === 'border-box';\r\n\r\n        let actualX = event.pageX - posRelative.left;\r\n        let baseX = posCol.left, minX = posCol.left;\r\n        let width = 0;\r\n\r\n        baseX -= Math.ceil(resizerWidth / 2);\r\n\r\n        if (rtl) {\r\n\r\n            if (!isBoxing) {\r\n                actualX += this._horizontalPadding(selectedHeaderCell[0]);\r\n                actualX += parseFloat(selectedHeaderCell.css('border-left-width')) || 0;\r\n                actualX += parseFloat(selectedHeaderCell.css('border-right-width')) || 0;\r\n            }\r\n\r\n            baseX += CssUtil.outerWidth(selectedHeaderCell);\r\n            \r\n            minX = baseX - (column.ignoreMin ? 0 : this.o.minColumnWidth);\r\n            if (actualX > minX) {\r\n                actualX = minX;\r\n            }\r\n\r\n            width = baseX - actualX;\r\n        } else {\r\n\r\n            if (!isBoxing) {\r\n                actualX -= this._horizontalPadding(selectedHeaderCell[0]);\r\n                actualX -= parseFloat(selectedHeaderCell.css('border-left-width')) || 0;\r\n                actualX -= parseFloat(selectedHeaderCell.css('border-right-width')) || 0;\r\n            }\r\n\r\n            minX = baseX + (column.ignoreMin ? 0 : this.o.minColumnWidth);\r\n            if (actualX < minX) {\r\n                actualX = minX;\r\n            }\r\n\r\n            width = actualX - baseX;\r\n        }\r\n        \r\n        p.$resizer.remove();\r\n        p.$resizer = null;\r\n\r\n        let sizeToSet = width;\r\n\r\n        if (column.widthMode === ColumnWidthMode.RELATIVE) {\r\n            let detectedWidth = this._calculateWidthAvailableForColumns();\r\n\r\n            let sizeLeft = detectedWidth;\r\n            //sizeLeft -= p.table.offsetWidth - p.table.clientWidth;\r\n\r\n            let totalRelativePercentage = 0;\r\n            let relatives = 0;\r\n\r\n            for (let i = 0; i < p.visibleColumns.length; i++) {\r\n                let col = p.visibleColumns[i];\r\n                if (col.name === column.name) continue;\r\n\r\n                if (col.widthMode == ColumnWidthMode.RELATIVE) {\r\n                    totalRelativePercentage += col.width;\r\n                    relatives++;\r\n                } else {\r\n                    sizeLeft -= col.actualWidth;\r\n                }\r\n            }\r\n\r\n            sizeLeft = Math.max(1, sizeLeft);\r\n            sizeToSet = width / sizeLeft;\r\n\r\n            if (relatives > 0) {\r\n                // When there's more than one relative overall,\r\n                //   we can do relative enlarging/shrinking.\r\n                // Otherwise, we can end up having a 0 width.\r\n\r\n                let unNormalizedSizeToSet = sizeToSet / ((1 - sizeToSet) / totalRelativePercentage);\r\n\r\n                totalRelativePercentage += sizeToSet;\r\n\r\n                // Account for relative widths scaling later\r\n                if ((totalRelativePercentage < 1 && o.relativeWidthGrowsToFillWidth) ||\r\n                    (totalRelativePercentage > 1 && o.relativeWidthShrinksToFillWidth)) {\r\n                    sizeToSet = unNormalizedSizeToSet;\r\n                }\r\n            }\r\n            \r\n            sizeToSet *= 100;\r\n            sizeToSet += '%';\r\n        }\r\n\r\n        this.setColumnWidth(column.name, sizeToSet);\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragEnterColumnHeader = function (event) {\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (o.movableColumns) {\r\n        let dataTransferred = event.originalEvent.dataTransfer.getData('text');\r\n        if (dataTransferred) {\r\n            dataTransferred = JSON.parse(dataTransferred);\r\n        }\r\n        else {\r\n            dataTransferred = null; // WebKit does not provide the dataTransfer on dragenter?..\r\n        }\r\n\r\n        let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n        if (!dataTransferred ||\r\n            (p.dragId == dataTransferred.dragId && $headerCell['columnName'] !== dataTransferred.column)) {\r\n\r\n            let column = p.columns.get($headerCell[0]['columnName']);\r\n            if (column && (column.movable || column != p.visibleColumns[0])) {\r\n                $($headerCell).addClass('drag-over');\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragOverColumnHeader = function (event) {\r\n    event.preventDefault();\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDragLeaveColumnHeader = function (event) {\r\n    let o = this.o;\r\n    let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n    if ( !$($headerCell[0].firstChild)\r\n            .has(event.originalEvent.relatedTarget).length ) {\r\n        $headerCell.removeClass('drag-over');\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {jQuery_Event} event event\r\n */\r\nDGTable.prototype._onDropColumnHeader = function (event) {\r\n    event.preventDefault();\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    let dataTransferred = JSON.parse(event.originalEvent.dataTransfer.getData('text'));\r\n    let $headerCell = $(event.target).closest('div.' + o.tableClassName + '-header-cell,div.' + o.cellPreviewClassName);\r\n    if (o.movableColumns && dataTransferred.dragId == p.dragId) {\r\n        let srcColName = dataTransferred.column,\r\n            destColName = $headerCell[0]['columnName'],\r\n            srcCol = p.columns.get(srcColName),\r\n            destCol = p.columns.get(destColName);\r\n        if (srcCol && destCol && srcCol.movable && (destCol.movable || destCol != p.visibleColumns[0])) {\r\n            this.moveColumn(srcColName, destColName);\r\n        }\r\n    }\r\n    $($headerCell).removeClass('drag-over');\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._clearSortArrows = function () {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    if (p.$table) {\r\n        let tableClassName = this.o.tableClassName;\r\n        let sortedColumns = p.$headerRow.find('>div.' + tableClassName + '-header-cell.sorted');\r\n        let arrows = sortedColumns.find('>div>.sort-arrow');\r\n        forEach(arrows, bind(function(arrow){\r\n            let col = p.columns.get(arrow.parentNode.parentNode['columnName']);\r\n            if (col) {\r\n                col.arrowProposedWidth = 0;\r\n            }\r\n        }, this));\r\n        arrows.remove();\r\n        sortedColumns.removeClass('sorted').removeClass('desc');\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {String} column the name of the sort column\r\n * @param {Boolean} descending table is sorted descending\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._showSortArrow = function (column, descending) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let col = p.columns.get(column);\r\n    if (!col) return false;\r\n    \r\n    let arrow = createElement('span');\r\n    arrow.className = 'sort-arrow';\r\n\r\n    if (col.element) {\r\n        col.element.addClass(descending ? 'sorted desc' : 'sorted');\r\n        col.element[0].firstChild.insertBefore(arrow, col.element[0].firstChild.firstChild);\r\n    }\r\n\r\n    if (col.widthMode != ColumnWidthMode.RELATIVE && this.o.adjustColumnWidthForSortArrow) {\r\n        col.arrowProposedWidth = arrow.scrollWidth + (parseFloat($(arrow).css('margin-right')) || 0) + (parseFloat($(arrow).css('margin-left')) || 0);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Number} cellIndex index of the column in the DOM\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._resizeColumnElements = function (cellIndex) {\r\n\r\n    let that = this,\r\n        p = that.p;\r\n\r\n    let headerCells = p.$headerRow.find('div.' + this.o.tableClassName + '-header-cell');\r\n    let col = p.columns.get(headerCells[cellIndex]['columnName']);\r\n\r\n    if (col) {\r\n        headerCells[cellIndex].style.width = (col.actualWidthConsideringScrollbarWidth || col.actualWidth) + 'px';\r\n\r\n        let width = (col.actualWidthConsideringScrollbarWidth || col.actualWidth) + 'px';\r\n        let tbodyChildren = p.$tbody[0].childNodes;\r\n        for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n            let headerRow = tbodyChildren[i];\r\n            if (headerRow.nodeType !== 1) continue;\r\n            headerRow.childNodes[cellIndex].style.width = width;\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @returns {DGTable} self\r\n * */\r\nDGTable.prototype._destroyHeaderCells = function() {\r\n\r\n    let that = this,\r\n        o = that.o,\r\n        p = that.p;\r\n\r\n    if (p.$headerRow) {\r\n        this.trigger('headerrowdestroy', p.headerRow);\r\n        p.$headerRow.find('div.' + o.tableClassName + '-header-cell').remove();\r\n        p.$headerRow = null;\r\n        p.headerRow = null;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonBase = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n    \r\n    // Clean up old elements\r\n    \r\n    if (p.$table && o.virtualTable) {\r\n        p.$table.remove();\r\n        if (p.$tbody) {\r\n            let rows = p.$tbody[0].childNodes;\r\n            for (let i = 0, len = rows.length; i < len; i++) {\r\n                that.trigger('rowdestroy', rows[i]);\r\n                that._unbindCellEventsForRow(rows[i]);\r\n            }\r\n        }\r\n        p.$table = p.table = p.$tbody = p.tbody = null;\r\n    }\r\n    \r\n    that._destroyHeaderCells();\r\n    p.currentTouchId = null;\r\n    if (p.$header) {\r\n        p.$header.remove();\r\n    }    \r\n\r\n    // Create new base elements\r\n    let tableClassName = o.tableClassName,\r\n        headerCellClassName = tableClassName + '-header-cell',\r\n        header = createElement('div'),\r\n        $header = $(header),\r\n        headerRow = createElement('div'),\r\n        $headerRow = $(headerRow);\r\n\r\n    header.className = tableClassName + '-header';\r\n    headerRow.className = tableClassName + '-header-row';\r\n    \r\n    p.$header = $header;\r\n    p.header = header;\r\n    p.$headerRow = $headerRow;\r\n    p.headerRow = headerRow;\r\n    $headerRow.appendTo(p.$header);\r\n    $header.prependTo(this.$el);\r\n    \r\n    relativizeElement(that.$el);\r\n    \r\n    if (o.width == DGTable.Width.SCROLL) {\r\n        this.el.style.overflow = 'hidden';\r\n    } else {\r\n        this.el.style.overflow = '';\r\n    }\r\n    \r\n    if (!o.height && o.virtualTable) {\r\n        o.height = CssUtil.innerHeight(this.$el);\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonHeaderCells = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n        \r\n    let allowCellPreview = o.allowCellPreview,\r\n        allowHeaderCellPreview = o.allowHeaderCellPreview;\r\n\r\n    let tableClassName = o.tableClassName,\r\n        headerCellClassName = tableClassName + '-header-cell',\r\n        header = p.header,\r\n        $header = p.$header,\r\n        headerRow = p.headerRow,\r\n        $headerRow = p.$headerRow;\r\n\r\n    let ieDragDropHandler;\r\n    if (hasIeDragAndDropBug) {\r\n        ieDragDropHandler = function(evt) {\r\n            evt.preventDefault();\r\n            this.dragDrop();\r\n            return false;\r\n        };\r\n    }\r\n\r\n    let preventDefault = function (event) { event.preventDefault(); };\r\n\r\n    // Create header cells\r\n    for (let i = 0; i < p.visibleColumns.length; i++) {\r\n        let column = p.visibleColumns[i];\r\n        if (column.visible) {\r\n            let cell = createElement('div');\r\n            let $cell = $(cell);\r\n            cell.draggable = true;\r\n            cell.className = headerCellClassName;\r\n            cell.style.width = column.actualWidth + 'px';\r\n            if (o.sortableColumns && column.sortable) {\r\n                cell.className += ' sortable';\r\n            }\r\n            cell['columnName'] = column.name;\r\n            cell.setAttribute('data-column', column.name);\r\n            \r\n            let cellInside = createElement('div');\r\n            cellInside.innerHTML = o.headerCellFormatter(column.label, column.name);\r\n            cell.appendChild(cellInside);\r\n            if (allowCellPreview && allowHeaderCellPreview) {\r\n                p._bindCellHoverIn(cell);\r\n            }\r\n            headerRow.appendChild(cell);\r\n\r\n            p.visibleColumns[i].element = $cell;\r\n\r\n            $cell.on('mousedown.dgtable', bind(that._onMouseDownColumnHeader, that))\r\n                .on('mousemove.dgtable', bind(that._onMouseMoveColumnHeader, that))\r\n                .on('mouseup.dgtable', bind(that._onMouseUpColumnHeader, that))\r\n                .on('mouseleave.dgtable', bind(that._onMouseLeaveColumnHeader, that))\r\n                .on('touchstart.dgtable', bind(that._onTouchStartColumnHeader, that))\r\n                .on('dragstart.dgtable', bind(that._onStartDragColumnHeader, that))\r\n                .on('click.dgtable', bind(that._onClickColumnHeader, that))\r\n                .on('contextmenu.dgtable', preventDefault);\r\n            $(cellInside)\r\n                .on('dragenter.dgtable', bind(that._onDragEnterColumnHeader, that))\r\n                .on('dragover.dgtable', bind(that._onDragOverColumnHeader, that))\r\n                .on('dragleave.dgtable', bind(that._onDragLeaveColumnHeader, that))\r\n                .on('drop.dgtable', bind(that._onDropColumnHeader, that));\r\n\r\n            if (hasIeDragAndDropBug) {\r\n                $cell.on('selectstart.dgtable', bind(ieDragDropHandler, cell));\r\n            }\r\n\r\n            // Disable these to allow our own context menu events without interruption\r\n            $cell.css({ '-webkit-touch-callout': 'none', '-webkit-user-select': 'none', '-moz-user-select': 'none', '-ms-user-select': 'none', '-o-user-select': 'none', 'user-select': 'none' });\r\n        }\r\n    }\r\n\r\n    this.trigger('headerrowcreate', headerRow);\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._renderSkeletonBody = function () {\r\n    let that = this,\r\n        p = that.p,\r\n        o = that.o;\r\n\r\n    let tableClassName = o.tableClassName;\r\n        \r\n    // Calculate virtual row heights\r\n    if (o.virtualTable && !p.virtualRowHeight) {\r\n        let createDummyRow = function() {\r\n            let row = createElement('div'),\r\n                cell = row.appendChild(createElement('div')),\r\n                cellInner = cell.appendChild(createElement('div'));\r\n            row.className = tableClassName + '-row';\r\n            cell.className = tableClassName + '-cell';\r\n            cellInner.innerHTML = '0';\r\n            row.style.visibility = 'hidden';\r\n            row.style.position = 'absolute';\r\n            return row;\r\n        };\r\n\r\n        let $dummyTbody, $dummyWrapper = $('<div>')\r\n            .addClass(that.el.className)\r\n            .css({ 'z-index': -1, 'position': 'absolute', left: '0', top: '-9999px', width: '1px', overflow: 'hidden' })\r\n            .append(\r\n                $('<div>').addClass(tableClassName).append(\r\n                    $dummyTbody = $('<div>').addClass(tableClassName + '-body').css('width', 99999)\r\n                )\r\n            );\r\n\r\n        $dummyWrapper.appendTo(document.body);\r\n\r\n        let row1 = createDummyRow(), row2 = createDummyRow(), row3 = createDummyRow();\r\n        $dummyTbody.append(row1, row2, row3);\r\n\r\n        p.virtualRowHeightFirst = CssUtil.outerHeight(row1);\r\n        p.virtualRowHeight = CssUtil.outerHeight(row2);\r\n        p.virtualRowHeightLast = CssUtil.outerHeight(row3);\r\n\r\n        p.virtualRowHeightMin = Math.min(Math.min(p.virtualRowHeightFirst, p.virtualRowHeight), p.virtualRowHeightLast);\r\n        p.virtualRowHeightMax = Math.max(Math.max(p.virtualRowHeightFirst, p.virtualRowHeight), p.virtualRowHeightLast);\r\n\r\n        $dummyWrapper.remove();\r\n    }\r\n\r\n    // Create inner table and tbody\r\n    if (!p.$table) {\r\n\r\n        let fragment = document.createDocumentFragment();\r\n        \r\n        // Create the inner table element\r\n        let table = createElement('div');\r\n        let $table = $(table);\r\n        table.className = tableClassName;\r\n\r\n        if (o.virtualTable) {\r\n            table.className += ' virtual';\r\n        }\r\n\r\n        let tableHeight = (o.height - CssUtil.outerHeight(p.$headerRow));\r\n        if ($table.css('box-sizing') !== 'border-box') {\r\n            tableHeight -= parseFloat($table.css('border-top-width')) || 0;\r\n            tableHeight -= parseFloat($table.css('border-bottom-width')) || 0;\r\n            tableHeight -= parseFloat($table.css('padding-top')) || 0;\r\n            tableHeight -= parseFloat($table.css('padding-bottom')) || 0;\r\n        }\r\n        p.visibleHeight = tableHeight;\r\n        table.style.height = o.height ? tableHeight + 'px' : 'auto';\r\n        table.style.display = 'block';\r\n        table.style.overflowY = 'auto';\r\n        table.style.overflowX = o.width == DGTable.Width.SCROLL ? 'auto' : 'hidden';\r\n        fragment.appendChild(table);\r\n\r\n        // Create the \"tbody\" element\r\n        let tbody = createElement('div');\r\n        let $tbody = $(tbody);\r\n        tbody.className = o.tableClassName + '-body';\r\n        p.table = table;\r\n        p.tbody = tbody;\r\n        p.$table = $table;\r\n        p.$tbody = $tbody;\r\n\r\n        if (o.virtualTable) {\r\n            p.virtualVisibleRows = Math.ceil(p.visibleHeight / p.virtualRowHeightMin);\r\n        }\r\n\r\n        that._calculateVirtualHeight();\r\n\r\n        relativizeElement($tbody);\r\n        relativizeElement($table);\r\n\r\n        table.appendChild(tbody);\r\n        that.el.appendChild(fragment);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n * @deprecated\r\n */\r\nDGTable.prototype._renderSkeleton = function () {\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._updateLastCellWidthFromScrollbar = function(force) {\r\n\r\n    const p = this.p;\r\n\r\n    // Calculate scrollbar's width and reduce from lat column's width\r\n    let scrollbarWidth = p.table.offsetWidth - p.table.clientWidth;\r\n    if (scrollbarWidth != p.scrollbarWidth || force) {\r\n        p.scrollbarWidth = scrollbarWidth;\r\n        for (let i = 0; i < p.columns.length; i++) {\r\n            p.columns[i].actualWidthConsideringScrollbarWidth = null;\r\n        }\r\n\r\n        if (p.scrollbarWidth > 0 && p.visibleColumns.length > 0) {\r\n            // (There should always be at least 1 column visible, but just in case)\r\n            let lastColIndex = p.visibleColumns.length - 1;\r\n\r\n            p.visibleColumns[lastColIndex].actualWidthConsideringScrollbarWidth = p.visibleColumns[lastColIndex].actualWidth - p.scrollbarWidth;\r\n            let lastColWidth = p.visibleColumns[lastColIndex].actualWidthConsideringScrollbarWidth + 'px';\r\n            let tbodyChildren = p.tbody.childNodes;\r\n            for (let i = 0, count = tbodyChildren.length; i < count; i++) {\r\n                let row = tbodyChildren[i];\r\n                if (row.nodeType !== 1) continue;\r\n                row.childNodes[lastColIndex].style.width = lastColWidth;\r\n            }\r\n\r\n            p.headerRow.childNodes[lastColIndex].style.width = lastColWidth;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Explicitly set the width of the table based on the sum of the column widths\r\n * @private\r\n * @param {boolean} parentSizeMayHaveChanged Parent size may have changed, treat rendering accordingly\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype._updateTableWidth = function (parentSizeMayHaveChanged) {\r\n    const o = this.o, p = this.p;\r\n    let width = this._calculateTbodyWidth();\r\n\r\n    p.tbody.style.minWidth = width + 'px';\r\n    p.headerRow.style.minWidth = (width + (p.scrollbarWidth || 0)) + 'px';\r\n\r\n    p.$table.off('scroll', p.onTableScrolledHorizontallyBound);\r\n\r\n    if (o.width == DGTable.Width.AUTO) {\r\n        // Update wrapper element's size to fully contain the table body\r\n\r\n        CssUtil.width(p.$table, CssUtil.outerWidth(p.$tbody));\r\n        CssUtil.width(this.$el, CssUtil.outerWidth(p.$table));\r\n\r\n    } else if (o.width == DGTable.Width.SCROLL) {\r\n\r\n        if (parentSizeMayHaveChanged) {\r\n            let lastScrollTop = p.table ? p.table.scrollTop : 0,\r\n                lastScrollLeft = p.table ? p.table.scrollLeft : 0;\r\n\r\n            // BUGFIX: Relayout before recording the widths\r\n            webkitRenderBugfix(this.el);\r\n\r\n            p.table.scrollTop = lastScrollTop;\r\n            p.table.scrollLeft = lastScrollLeft;\r\n            p.header.scrollLeft = lastScrollLeft;\r\n        }\r\n\r\n        p.$table.on('scroll', p.onTableScrolledHorizontallyBound);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n * @returns {Boolean}\r\n */\r\nDGTable.prototype._isTableRtl = function() {\r\n    return this.p.$table.css('direction') === 'rtl';\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {Object} column column object\r\n * @returns {String}\r\n */\r\nDGTable.prototype._serializeColumnWidth = function(column) {\r\n    return column.widthMode === ColumnWidthMode.AUTO ? 'auto' :\r\n        column.widthMode === ColumnWidthMode.RELATIVE ? column.width * 100 + '%' :\r\n            column.width;\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} el\r\n */\r\nDGTable.prototype._cellMouseOverEvent = function(el) {\r\n    const o = this.o, p = this.p;\r\n\r\n    let elInner = el.firstChild;\r\n\r\n    if ((elInner.scrollWidth - elInner.clientWidth > 1) ||\r\n        (elInner.scrollHeight - elInner.clientHeight > 1)) {\r\n\r\n        this.hideCellPreview();\r\n        p.abortCellPreview = false;\r\n\r\n        let $el = $(el), $elInner = $(elInner);\r\n        let previewCell = createElement('div'), $previewCell = $(previewCell);\r\n        previewCell.innerHTML = el.innerHTML;\r\n        previewCell.className = o.cellPreviewClassName;\r\n\r\n        let isHeaderCell = $el.hasClass(o.tableClassName + '-header-cell');\r\n        if (isHeaderCell) {\r\n            previewCell.className += ' header';\r\n            if ($el.hasClass('sortable')) {\r\n                previewCell.className += ' sortable';\r\n            }\r\n\r\n            previewCell.draggable = true;\r\n\r\n            $(previewCell).on('mousedown', bind(this._onMouseDownColumnHeader, this))\r\n                .on('mousemove', bind(this._onMouseMoveColumnHeader, this))\r\n                .on('mouseup', bind(this._onMouseUpColumnHeader, this))\r\n                .on('mouseleave', bind(this._onMouseLeaveColumnHeader, this))\r\n                .on('touchstart', bind(this._onTouchStartColumnHeader, this))\r\n                .on('dragstart', bind(this._onStartDragColumnHeader, this))\r\n                .on('click', bind(this._onClickColumnHeader, this))\r\n                .on('contextmenu.dgtable', function (event) { event.preventDefault(); });\r\n            $(previewCell.firstChild)\r\n                .on('dragenter', bind(this._onDragEnterColumnHeader, this))\r\n                .on('dragover', bind(this._onDragOverColumnHeader, this))\r\n                .on('dragleave', bind(this._onDragLeaveColumnHeader, this))\r\n                .on('drop', bind(this._onDropColumnHeader, this));\r\n\r\n            if (hasIeDragAndDropBug) {\r\n                $(previewCell).on('selectstart', bind(function(evt) {\r\n                    evt.preventDefault();\r\n                    this.dragDrop();\r\n                    return false;\r\n                }, previewCell));\r\n            }\r\n        }\r\n\r\n        let paddingL = parseFloat($el.css('padding-left')) || 0,\r\n            paddingR = parseFloat($el.css('padding-right')) || 0,\r\n            paddingT = parseFloat($el.css('padding-top')) || 0,\r\n            paddingB = parseFloat($el.css('padding-bottom')) || 0;\r\n\r\n        let requiredWidth = elInner.scrollWidth + (el.clientWidth - elInner.offsetWidth);\r\n\r\n        let borderBox = $el.css('box-sizing') === 'border-box';\r\n        if (borderBox) {\r\n            $previewCell.css('box-sizing', 'border-box');\r\n        } else {\r\n            requiredWidth -= paddingL + paddingR;\r\n            $previewCell.css('margin-top', parseFloat($(el).css('border-top-width')) || 0);\r\n        }\r\n\r\n        if (!p.transparentBgColor1) {\r\n            // Detect browser's transparent spec\r\n            let tempDiv = document.createElement('div');\r\n            tempDiv.style.backgroundColor = 'transparent';\r\n            p.transparentBgColor1 = $(tempDiv).css('background-color');\r\n            tempDiv.style.backgroundColor = 'rgba(0,0,0,0)';\r\n            p.transparentBgColor2 = $(tempDiv).css('background-color');\r\n        }\r\n\r\n        let css = {\r\n            'box-sizing': borderBox ? 'border-box' : 'content-box',\r\n            'width': requiredWidth,\r\n            'min-height': CssUtil.height($el),\r\n            'padding-left': paddingL,\r\n            'padding-right': paddingR,\r\n            'padding-top': paddingT,\r\n            'padding-bottom': paddingB,\r\n            'overflow': 'hidden',\r\n            'position': 'absolute',\r\n            'z-index': '-1',\r\n            'left': '0',\r\n            'top': '0',\r\n            'cursor': 'default',\r\n        };\r\n\r\n        if (css) {\r\n            let bgColor = $(el).css('background-color');\r\n            if (bgColor === p.transparentBgColor1 || bgColor === p.transparentBgColor2) {\r\n                bgColor = $(el.parentNode).css('background-color');\r\n            }\r\n            if (bgColor === p.transparentBgColor1 || bgColor === p.transparentBgColor2) {\r\n                bgColor = '#fff';\r\n            }\r\n            css['background-color'] = bgColor;\r\n        }\r\n\r\n        $previewCell.css(css);\r\n\r\n        this.el.appendChild(previewCell);\r\n\r\n        $(previewCell.firstChild).css({\r\n            'direction': $elInner.css('direction'),\r\n            'white-space': $elInner.css('white-space'),\r\n        });\r\n\r\n        if (isHeaderCell) {\r\n            // Disable these to allow our own context menu events without interruption\r\n            $previewCell.css({\r\n                '-webkit-touch-callout': 'none',\r\n                '-webkit-user-select': 'none',\r\n                '-moz-user-select': 'none',\r\n                '-ms-user-select': 'none',\r\n                '-o-user-select': 'none',\r\n                'user-select': 'none',\r\n            });\r\n        }\r\n\r\n        previewCell['rowIndex'] = el.parentNode['rowIndex'];\r\n        let physicalRowIndex = previewCell['physicalRowIndex'] = el.parentNode['physicalRowIndex'];\r\n        previewCell['columnName'] = p.visibleColumns[indexOf(el.parentNode.childNodes, el)].name;\r\n\r\n        try {\r\n            let selection = SelectionHelper.saveSelection(el);\r\n            if (selection)\r\n                SelectionHelper.restoreSelection(previewCell, selection);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n        \r\n        this.trigger(\r\n            'cellpreview',\r\n            previewCell.firstChild,\r\n            physicalRowIndex == null ? null : physicalRowIndex,\r\n            previewCell['columnName'],\r\n            physicalRowIndex == null ? null : p.rows[physicalRowIndex],\r\n            el\r\n        );\r\n\r\n        if (p.abortCellPreview) {\r\n            $previewCell.remove();\r\n            return;\r\n        }\r\n\r\n        let $parent = this.$el;\r\n        let $scrollParent = $parent[0] === window ? $(document) : $parent;\r\n\r\n        let offset = $el.offset();\r\n        let parentOffset = $parent.offset();\r\n        let rtl = $el.css('float') === 'right';\r\n        let prop = rtl ? 'right' : 'left';\r\n\r\n        // Handle RTL, go from the other side\r\n        if (rtl) {\r\n            let windowWidth = $(window).width();\r\n            offset.right = windowWidth - (offset.left + CssUtil.outerWidth($el));\r\n            parentOffset.right = windowWidth - (parentOffset.left + CssUtil.outerWidth($parent));\r\n        }\r\n\r\n        // If the parent has borders, then it would offset the offset...\r\n        offset.left -= parseFloat($parent.css('border-left-width')) || 0;\r\n        offset.right -= parseFloat($parent.css('border-right-width')) || 0;\r\n        offset.top -= parseFloat($parent.css('border-top-width')) || 0;\r\n\r\n        // Handle border widths of the element being offset\r\n        offset[prop] += parseFloat($(el).css('border-' + prop + '-width')) || 0;\r\n        offset.top += parseFloat($(el).css('border-top-width')) || parseFloat($(el).css('border-bottom-width')) || 0;\r\n\r\n        // Subtract offsets to get offset relative to parent\r\n        offset.left -= parentOffset.left;\r\n        offset.right -= parentOffset.right;\r\n        offset.top -= parentOffset.top;\r\n\r\n        // Constrain horizontally\r\n        let minHorz = 0,\r\n            maxHorz = $parent - CssUtil.outerWidth($previewCell);\r\n        offset[prop] = offset[prop] < minHorz ?\r\n            minHorz :\r\n            (offset[prop] > maxHorz ? maxHorz : offset[prop]);\r\n\r\n        // Constrain vertically\r\n        let totalHeight = CssUtil.outerHeight($el);\r\n        let maxTop = $scrollParent.scrollTop() + CssUtil.innerHeight($parent) - totalHeight;\r\n        if (offset.top > maxTop) {\r\n            offset.top = Math.max(0, maxTop);\r\n        }\r\n\r\n        // Apply css to preview cell\r\n        let previewCss = {\r\n            top: offset.top,\r\n            'z-index': 9999,\r\n        };\r\n        previewCss[prop] = offset[prop];\r\n\r\n        $previewCell.css(previewCss);\r\n\r\n        previewCell['__cell'] = el;\r\n        p.$cellPreviewCell = $previewCell;\r\n        el['__previewCell'] = previewCell;\r\n\r\n        p._bindCellHoverOut(el);\r\n        p._bindCellHoverOut(previewCell);\r\n\r\n        $previewCell.on('mousewheel', (event) => {\r\n            let originalEvent = event.originalEvent;\r\n            let xy = originalEvent.wheelDelta || -originalEvent.detail,\r\n                x = originalEvent.wheelDeltaX || (originalEvent.axis == 1 ? xy : 0),\r\n                y = originalEvent.wheelDeltaY || (originalEvent.axis == 2 ? xy : 0);\r\n\r\n            if (xy) {\r\n                this.hideCellPreview();\r\n            }\r\n\r\n            if (y && p.table.scrollHeight > p.table.clientHeight) {\r\n                let scrollTop = (y * -1) + p.$table.scrollTop();\r\n                p.$table.scrollTop(scrollTop);\r\n            }\r\n\r\n            if (x && p.table.scrollWidth > p.table.clientWidth) {\r\n                let scrollLeft = (x * -1) + p.$table.scrollLeft();\r\n                p.$table.scrollLeft(scrollLeft);\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param {HTMLElement} el\r\n */\r\nDGTable.prototype._cellMouseOutEvent = function(_el) {\r\n    this.hideCellPreview();\r\n};\r\n\r\n/**\r\n * Hides the current cell preview,\r\n * or prevents the one that is currently trying to show (in the 'cellpreview' event)\r\n * @public\r\n * @expose\r\n * @returns {DGTable} self\r\n */\r\nDGTable.prototype.hideCellPreview = function() {\r\n    const p = this.p;\r\n    \r\n    if (p.$cellPreviewCell) {\r\n        let previewCell = p.$cellPreviewCell[0];\r\n        let origCell = previewCell['__cell'];\r\n        let selection;\r\n        \r\n        try {\r\n            selection = SelectionHelper.saveSelection(previewCell);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n        \r\n        p.$cellPreviewCell.remove();\r\n        p._unbindCellHoverOut(origCell);\r\n        p._unbindCellHoverOut(previewCell);\r\n        \r\n        try {\r\n            if (selection)\r\n                SelectionHelper.restoreSelection(origCell, selection);\r\n        } catch (ignored) { /* we're ok with this */ }\r\n\r\n        this.trigger('cellpreviewdestroy', previewCell.firstChild, previewCell['physicalRowIndex'], previewCell['columnName'], origCell);\r\n\r\n        origCell['__previewCell'] = null;\r\n        previewCell['__cell'] = null;\r\n\r\n        p.$cellPreviewCell = null;\r\n        p.abortCellPreview = false;\r\n    } else {\r\n        p.abortCellPreview = true;\r\n    }\r\n    \r\n    return this;\r\n};\r\n\r\n// It's a shame the Google Closure Compiler does not support exposing a nested @param\r\n\r\n/**\r\n * @typedef {Object} SERIALIZED_COLUMN\r\n * @property {Number|null|undefined} [order=0]\r\n * @property {String|null|undefined} [width='auto']\r\n * @property {Boolean|null|undefined} [visible=true]\r\n * */\r\n\r\n/**\r\n * @typedef {Object} SERIALIZED_COLUMN_SORT\r\n * @property {String|null|undefined} [column='']\r\n * @property {Boolean|null|undefined} [descending=false]\r\n * */\r\n\r\n/**\r\n * @enum {ColumnWidthMode|number|undefined}\r\n * @const\r\n * @typedef {ColumnWidthMode}\r\n */\r\nconst ColumnWidthMode = {\r\n    /** @const*/ AUTO: 0,\r\n    /** @const*/ ABSOLUTE: 1,\r\n    /** @const*/ RELATIVE: 2,\r\n};\r\n\r\n/**\r\n * @enum {DGTable.Width|String|undefined}\r\n * @const\r\n * @typedef {DGTable.Width}\r\n */\r\nDGTable.Width = {\r\n    /** @const*/ NONE: 'none',\r\n    /** @const*/ AUTO: 'auto',\r\n    /** @const*/ SCROLL: 'scroll',\r\n};\r\n\r\n/**\r\n * @expose\r\n * @typedef {Object} COLUMN_SORT_OPTIONS\r\n * @property {String|null|undefined} column\r\n * @property {Boolean|null|undefined} [descending=false]\r\n * */\r\n\r\n/**\r\n * @expose\r\n * @typedef {Object} COLUMN_OPTIONS\r\n * @property {String|null|undefined} width\r\n * @property {String|null|undefined} name\r\n * @property {String|null|undefined} label\r\n * @property {String|null|undefined} dataPath - defaults to `name`\r\n * @property {String|null|undefined} comparePath - defaults to `dataPath`\r\n * @property {Number|String|null|undefined} comparePath\r\n * @property {Boolean|null|undefined} [resizable=true]\r\n * @property {Boolean|null|undefined} [movable=true]\r\n * @property {Boolean|null|undefined} [sortable=true]\r\n * @property {Boolean|null|undefined} [visible=true]\r\n * @property {String|null|undefined} [cellClasses]\r\n * @property {Boolean|null|undefined} [ignoreMin=false]\r\n * */\r\n\r\n/**\r\n * @typedef {Object} DGTable.Options\r\n * @property {COLUMN_OPTIONS[]} [columns]\r\n * @property {Number} [height]\r\n * @property {DGTable.Width} [width]\r\n * @property {Boolean|null|undefined} [virtualTable=true]\r\n * @property {Boolean|null|undefined} [resizableColumns=true]\r\n * @property {Boolean|null|undefined} [movableColumns=true]\r\n * @property {Number|null|undefined} [sortableColumns=1]\r\n * @property {Boolean|null|undefined} [adjustColumnWidthForSortArrow=true]\r\n * @property {Boolean|null|undefined} [relativeWidthGrowsToFillWidth=true]\r\n * @property {Boolean|null|undefined} [relativeWidthShrinksToFillWidth=false]\r\n * @property {Boolean|null|undefined} [convertColumnWidthsToRelative=false]\r\n * @property {Boolean|null|undefined} [autoFillTableWidth=false]\r\n * @property {String|null|undefined} [cellClasses]\r\n * @property {String|String[]|COLUMN_SORT_OPTIONS|COLUMN_SORT_OPTIONS[]} [sortColumn]\r\n * @property {Function|null|undefined} [cellFormatter=null]\r\n * @property {Function|null|undefined} [headerCellFormatter=null]\r\n * @property {Number|null|undefined} [rowsBufferSize=10]\r\n * @property {Number|null|undefined} [minColumnWidth=35]\r\n * @property {Number|null|undefined} [resizeAreaWidth=8]\r\n * @property {{function(string,boolean):{function(a:*,b:*):boolean}}} [onComparatorRequired]\r\n * @property {String|null|undefined} [resizerClassName=undefined]\r\n * @property {String|null|undefined} [tableClassName=undefined]\r\n * @property {Boolean|null|undefined} [allowCellPreview=true]\r\n * @property {Boolean|null|undefined} [allowHeaderCellPreview=true]\r\n * @property {String|null|undefined} [cellPreviewClassName=undefined]\r\n * @property {Boolean|null|undefined} [cellPreviewAutoBackground=true]\r\n * @property {Element|null|undefined} [el=undefined]\r\n * @property {String|null|undefined} [className=undefined]\r\n * @property {Function|null|undefined} [filter=undefined]\r\n * */\r\n\r\n/**\r\n * @typedef {{\r\n     *  currentTarget: Element,\r\n     *  data: Object.<string, *>,\r\n     *  delegateTarget: Element,\r\n     *  isDefaultPrevented: Boolean,\r\n     *  isImmediatePropagationStopped: Boolean,\r\n     *  isPropagationStopped: Boolean,\r\n     *  namespace: string,\r\n     *  originalEvent: MouseEvent|TouchEvent|Event,\r\n     *  pageX: Number,\r\n     *  pageY: Number,\r\n     *  preventDefault: Function,\r\n     *  props: Object.<string, *>,\r\n     *  relatedTarget: Element,\r\n     *  result: *,\r\n     *  stopImmediatePropagation: Function,\r\n     *  stopPropagation: Function,\r\n     *  target: Element,\r\n     *  timeStamp: Number,\r\n     *  type: string,\r\n     *  which: Number\r\n     * }} jQuery_Event\r\n * */\r\n\r\nif (!$.controls) {\r\n    $.controls = {};\r\n}\r\n\r\n$.controls.dgtable = DGTable;\r\n\r\nexport default DGTable;"],"names":["nativeBind","Function","prototype","bind","what","oThis","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","nativeIndexOf","indexOf","array","searchElement","fromIndex","k","len","length","n","Math","max","abs","contains","item","find","predicate","i","nativeForEach","forEach","callback","thisArg","T","kValue","RowCollection","collection","Object","assign","initialize","options","sortColumn","add","rows","at","isArray","splice","push","reset","filteredCollection","filterFunc","args","row","onComparatorRequired","onSort","nativeSort","sort","getDefaultComparator","column","descending","columnName","comparePath","split","pathLength","hasPath","lessVal","moreVal","leftRow","rightRow","leftVal","rightVal","silent","comparators","comparator","value","ColumnCollection","get","name","getByOrder","order","normalizeOrder","ordered","col1","col2","getVisibleColumns","visible","getMaxOrder","moveColumn","src","dest","srcOrder","destOrder","col","$","jQuery","hasComputedStyle","document","defaultView","getComputedStyle","jQuerySupportsFractions","fn","jquery","cssExpands","sizeKeys","CssUtil","generateSizeFunction","key","cssExpand","inner","outer","el","Element","style","currentStyle","isBoxing","size","border","padding","includeMargins","parseFloat","margin","undefined","generatejQueryFunction","ret","isChildOf","child","parent","parentNode","SelectionHelper","saveSelection","range","window","getSelection","getRangeAt","commonAncestorContainer","preSelectionRange","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","start","toString","end","restoreSelection","savedSel","charIndex","nodeStack","node","foundStart","stop","createRange","setStart","collapse","pop","nodeType","nextCharIndex","childNodes","sel","removeAllRanges","addRange","ByColumnFilter","keyword","actualVal","caseSensitive","toLowerCase","userAgent","navigator","ieVersion","substr","hasIeDragAndDropBug","createElement","hasOwnProperty","webkitRenderBugfix","oldDisplay","display","offsetHeight","relativizeElement","$el","css","DGTable","VERSION","that","o","p","events","addClass","className","data","on","destroy","onMouseMoveResizeAreaBound","_onMouseMoveResizeArea","onEndDragColumnHeaderBound","_onEndDragColumnHeader","onTableScrolledHorizontallyBound","_onTableScrolledHorizontally","tableSkeletonNeedsRendering","virtualTable","rowsBufferSize","minColumnWidth","resizeAreaWidth","resizableColumns","movableColumns","sortableColumns","parseInt","adjustColumnWidthForSortArrow","convertColumnWidthsToRelative","autoFillTableWidth","cellClasses","resizerClassName","tableClassName","allowCellPreview","allowHeaderCellPreview","cellPreviewClassName","cellPreviewAutoBackground","width","Width","NONE","relativeWidthGrowsToFillWidth","relativeWidthShrinksToFillWidth","setCellFormatter","cellFormatter","setHeaderCellFormatter","headerCellFormatter","setFilter","filter","height","setColumns","columns","sortColumns","tmpSortColumns","filteredRows","hoverMouseOverHandler","evt","event","relatedTarget","fromElement","_cellMouseOverEvent","hoverMouseOutHandler","toElement","_cellMouseOutEvent","_bindCellHoverIn","addEventListener","_unbindCellHoverIn","removeEventListener","_bindCellHoverOut","_unbindCellHoverOut","attachEvent","detachEvent","eventName","cb","once","off","callbacks","trigger","_parseColumnWidth","minWidth","widthSize","widthMode","ColumnWidthMode","AUTO","RELATIVE","ABSOLUTE","mode","_initColumnFromData","columnData","parsedWidth","ignoreMin","label","resizable","sortable","movable","dataPath","close","remove","__removed","$resizer","$tbody","trs","_destroyHeaderCells","_unbindCellEventsForTable","$table","empty","workerListeners","j","worker","listener","_deferredRender","clearTimeout","prop","headerRow","rowCount","rowToClean","cells","cellCount","tbody","_unbindCellEventsForRow","render","offsetParent","setTimeout","renderedRows","_clearSortArrows","lastScrollTop","table","scrollTop","lastScrollLeft","scrollLeft","_renderSkeletonBase","_renderSkeletonBody","tableWidthChanged","_renderSkeletonHeaderCells","renderRows","html","append","_updateLastCellWidthFromScrollbar","header","_updateTableWidth","_showSortArrow","_onVirtualTableScrolled","firstVisible","floor","virtualRowHeightFirst","virtualRowHeight","lastVisible","ceil","visibleHeight","oldFirstVisible","oldLastVisible","tbodyChildNodes","countToRemove","min","removeChild","prepend","clearAndRender","first","last","rowClassName","cellClassName","isDataFiltered","visibleColumns","isVirtual","top","physicalRowIndex","colCount","colIndex","_finalWidth","actualWidthConsideringScrollbarWidth","actualWidth","bodyFragment","createDocumentFragment","isRtl","_isTableRtl","virtualRowXAttr","rowData","cell","setAttribute","cellInner","appendChild","innerHTML","_getHtmlForCell","position","_calculateVirtualHeight","virtualRowHeightLast","_calculateTbodyWidth","$row","sumActualWidth","$thisWrapper","left","overflow","appendTo","body","fractionTest","hasFractions","round","outerWidth","scrollbarWidth","normalizedCols","normalizedColumn","_ensureVisibleColumns","addColumn","before","beforeColumn","to","removeColumn","colIdx","formatter","val","hadFilter","filterArgs","extend","_refilter","setColumnLabel","element","firstChild","textContent","destCol","headerCell","$headerRow","beforePos","fromPos","insertBefore","srcWidth","destWidth","tbodyChildren","count","currentSort","_tableSkeletonNeedsRendering","sorts","resort","setColumnVisible","isColumnVisible","setMinColumnWidth","getMinColumnWidth","setSortableColumns","getSortableColumns","setMovableColumns","getMovableColumns","setResizableColumns","getResizableColumns","setComparatorCallback","comparatorCallback","setColumnWidth","oldWidth","_serializeColumnWidth","newWidth","getColumnWidth","getColumnConfig","getColumnsConfig","config","getSortedColumns","sorted","getHtmlForCell","colValue","dataPathIndex","content","getRowYPos","rowIndex","offsetTop","getDataForRow","getRowCount","getIndexForRow","getFilteredRowCount","getIndexForFilteredRow","getDataForFilteredRow","getHeaderRowElement","_horizontalPadding","_horizontalBorderWidth","_calculateWidthAvailableForColumns","detectedWidth","$header","$cells","$cell","getTextWidth","text","$tableWrapper","lastDetectedWidth","forceUpdate","renderColumns","sizeLeft","relatives","tableWidthBeforeCalculations","absWidthTotal","changedColumnIndexes","totalRelativePercentage","arrowProposedWidth","sizeLeftForRelative","clientWidth","minColumnWidthRelative","isNaN","extraRelative","delta","nonResizableTotal","sizeLeftToFill","conv","NaN","tableWidth","_resizeColumnElements","tableHeightChanged","innerHeight","outerHeight","addRows","firstRow","lastRow","removeRows","lastRowIndex","index","removeRow","refreshRow","isRowVisible","renderedRow","getRowElement","refreshAllVirtualRows","rowsToRender","setRows","getUrlForElementContent","id","blob","getElementById","Blob","BlobBuilder","global","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","builder","getBlob","URL","webkitURL","createObjectURL","isWorkerSupported","createWebWorker","url","Worker","postMessage","unbindWebWorker","abortCellPreview","hideCellPreview","cancelColumnResize","_event","_getColumnByResizePosition","e","rtl","$headerCell","target","closest","previousElementSibling","previousSibling","firstCol","mouseX","pageX","originalEvent","clientX","offset","_onTouchStartColumnHeader","currentTouchId","startTouch","changedTouches","identifier","$eventTarget","currentTarget","startPos","x","y","pageY","currentPos","distanceTreshold","tapAndHoldTimeout","unbind","fakeEvent","Event","extendObjects","each","one","preventDefault","distanceTravelled","sqrt","pow","touch","_onMouseDownColumnHeader","which","selectedHeaderCell","commonAncestor","posCol","posRelative","resizerWidth","zIndex","ignored","_onMouseMoveColumnHeader","cursor","_onMouseUpColumnHeader","bounds","_onMouseLeaveColumnHeader","_onClickColumnHeader","_onStartDragColumnHeader","opacity","dragId","random","dataTransfer","setData","JSON","stringify","actualX","minX","baseX","sizeToSet","unNormalizedSizeToSet","_onDragEnterColumnHeader","dataTransferred","getData","parse","_onDragOverColumnHeader","_onDragLeaveColumnHeader","has","removeClass","_onDropColumnHeader","srcColName","destColName","srcCol","sortedColumns","arrows","arrow","scrollWidth","cellIndex","headerCells","prependTo","SCROLL","headerCellClassName","ieDragDropHandler","dragDrop","draggable","cellInside","createDummyRow","visibility","$dummyTbody","$dummyWrapper","row1","row2","row3","virtualRowHeightMin","virtualRowHeightMax","fragment","tableHeight","overflowY","overflowX","virtualVisibleRows","_renderSkeleton","force","offsetWidth","lastColIndex","lastColWidth","parentSizeMayHaveChanged","elInner","scrollHeight","clientHeight","$elInner","previewCell","$previewCell","isHeaderCell","hasClass","paddingL","paddingR","paddingT","paddingB","requiredWidth","borderBox","transparentBgColor1","tempDiv","backgroundColor","transparentBgColor2","bgColor","selection","$parent","$scrollParent","parentOffset","windowWidth","right","minHorz","maxHorz","totalHeight","maxTop","previewCss","$cellPreviewCell","xy","wheelDelta","detail","wheelDeltaX","axis","wheelDeltaY","_el","origCell","controls","dgtable"],"mappings":"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"}